{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 509da5227bc5a9e95bf1","webpack:///external \"d3\"","webpack:///./src/model/Column.ts","webpack:///./src/utils.ts","webpack:///./src/model/ValueColumn.ts","webpack:///./src/model/NumberColumn.ts","webpack:///./src/model/StringColumn.ts","webpack:///./src/renderer.ts","webpack:///./src/provider/ADataProvider.ts","webpack:///./src/model/CompositeNumberColumn.ts","webpack:///./src/model/StackColumn.ts","webpack:///./src/model/index.ts","webpack:///./src/model/CategoricalColumn.ts","webpack:///./src/model/CompositeColumn.ts","webpack:///./src/model/RankColumn.ts","webpack:///./src/model/Ranking.ts","webpack:///./src/model/ScriptColumn.ts","webpack:///./src/ui/ABodyRenderer.ts","webpack:///./src/model/SelectionColumn.ts","webpack:///./src/lineup.ts","webpack:///./src/model/LinkColumn.ts","webpack:///./src/model/MaxColumn.ts","webpack:///./src/model/MeanColumn.ts","webpack:///./src/model/MinColumn.ts","webpack:///./src/model/MultiValueColumn.ts","webpack:///./src/model/NestedColumn.ts","webpack:///./src/ui/ADOMBodyRenderer.ts","webpack:///./src/ui/HeaderRenderer.ts","webpack:///./src/ui/index.ts","webpack:///./src/ui_dialogs.ts","webpack:///./src/style.scss","webpack:///./src/provider/ACommonDataProvider.ts","webpack:///./src/provider/LocalDataProvider.ts","webpack:///./src/mappingeditor.ts","webpack:///./src/model/AnnotateColumn.ts","webpack:///./src/model/BooleanColumn.ts","webpack:///./src/model/CategoricalNumberColumn.ts","webpack:///./src/model/DummyColumn.ts","webpack:///./src/model/MultiLevelCompositeColumn.ts","webpack:///./src/model/UpsetColumn.ts","webpack:///./src/ui/CanvasBodyRenderer.ts","webpack:///./src/ui/HTMLBodyRenderer.ts","webpack:///./src/ui/PoolRenderer.ts","webpack:///./src/ui/SVGBodyRenderer.ts","webpack:///./src/provider/index.ts","webpack:///./src/provider/RemoteDataProvider.ts","webpack:///./src/index.ts"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC9DA,+C;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC2B;AAC3B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,+CAA+C,iBAAiB,GAAG,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;AC9TA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC6C;AAC7C;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA,iCAAiC,mBAAmB;AACpD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wCAAwC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAA6D,yBAAyB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iCAAiC,EAAE;AACrF;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,YAAY;AACvC,4BAA4B,aAAa;AACzC,gDAAgD,qDAAqD,EAAE;AACvG,iDAAiD,mDAAmD,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;;;;;;;;AC3bA;AAAA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,aAAa,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AC3BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD,+BAA+B,kEAAkE,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B;AAC7D,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,wDAAwD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU,sDAAsD,EAAE;AAC3G;AACA,CAAC;AACD;;;;;;;;;ACnZA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;ACvGA;AAAA;AACA;AACA;AACA;AACkC;AACpB;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD,+BAA+B,gBAAgB;AAC/C;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAA0B;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B,EAAE;AACtE;AACA;AACA,2CAA2C,qCAAqC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,sCAAsC,EAAE;AACpF,4CAA4C,4DAA4D,EAAE;AAC1G;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oFAAoF,EAAE;AAC9H,wCAAwC,4BAA4B,EAAE;AACtE;AACA,6CAA6C,mCAAmC,EAAE;AAClF,wCAAwC,qFAAqF;AAC7H,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qEAAqE,EAAE;AAC/G,wCAAwC,4BAA4B,EAAE;AACtE;AACA,6CAA6C,uEAAuE,EAAE;AACtH,2CAA2C,qCAAqC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mCAAmC,EAAE;AAC9E,yCAAyC,kDAAkD,EAAE;AAC7F;AACA;AACA,2CAA2C,4BAA4B;AACvE,iBAAiB;AACjB;AACA;AACA,wFAAwF,gBAAgB,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gBAAgB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mCAAmC,EAAE;AAC9E,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D,iCAAiC,iCAAiC,kBAAkB,GAAG;AACvF;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,+GAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+GAA+G;AAC/G;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,oEAAoE,EAAE;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sFAAsF,+EAA+E,EAAE;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,8EAA8E,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAAmF,+BAA+B,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAA0B;AAC1B;AACA,iBAAiB;AACjB,8GAA+C;AAC/C;AACA;AACA;AACA,iBAAiB;AACjB,+GAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA,mDAAmD,4BAA4B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,2DAA2D,oDAAoD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sHAAsH,4BAA4B,EAAE;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wHAAwH,4BAA4B,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA,2EAA2E,wBAAwB,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5/BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACwH;AACxH;AACA;AAC+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kGAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kMAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC;AACnF,wDAAwD,4DAA4D;AACpH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0EAA0E,gCAAgC,EAAE;AAC5G,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gCAAgC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,wFAAgC,EAAE;AACnF;AACA;AACA;AACA,+CAA+C,mCAAmC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+BAA+B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wFAAgC,EAAE;AAC3F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD,wFAAgC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE,wCAAwC,+BAA+B,EAAE;AACzE,mBAAmB;AACnB;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,+BAA+B,EAAE;AACnH,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6CAA6C,wBAAwB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,0BAA0B,EAAE;AAC3F;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,iDAAiD,4CAA4C,EAAE;AAC/F,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACvkBA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACiB;AACjB;AACsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC9EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,oBAAoB;AAC/C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA,sKAAoH,sBAAsB,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc,EAAE;AAChE;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc,EAAE;AAC5D,4CAA4C,cAAc,EAAE;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wDAAwD,0DAA0D,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChMA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AAC6B;AACxC;AACc;AACN;AACA;AACC;AACA;AACK;AACH;AACA;AACD;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,mBAAmB;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4DAA4D,EAAE;AACnH,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAA4D,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4CAA4C,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC1OA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA,CAAC;AACD;;;;;;;;;ACrIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,gBAAgB;AAC3C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC7BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AAC2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mCAAmC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,0BAA0B,EAAE;AAC/E;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6DAA6D,wCAAwC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA,yBAAyB;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,+BAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAA4C,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc,EAAE;AACvD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0EAA0E,gCAAgC,EAAE;AAC5G;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uBAAuB,EAAE;AACxE;AACA;AACA,gDAAgD,6BAA6B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC/TA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,kBAAkB;AAC7C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,+BAA+B,EAAE;AACnH;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AC3DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AAC+C;AACb;AAClC;AAC6B;AAC7B;AACwC;AACxC;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAA0D,EAAE;AACjG,yCAAyC,0DAA0D,EAAE;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA,uFAAsD,4BAA4B,EAAE;AACpF;AACA,kEAAkE,oCAAoC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kCAAkC,EAAE;AACpF;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,sCAAsC,EAAE;AACpH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACpLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,aAAa;AACxC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACxDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACwC;AAC2C;AAChD;AACgB;AACL;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sKAAkE;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT,6OAAkH;AAClH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kCAAkC,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,yBAAyB,EAAE,wBAAwB,cAAc,EAAE;AACvH;AACA,2FAA2F,wCAAwC,EAAE;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;AC9VA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC3FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,eAAe;AAC1C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAAmD,+BAA+B,EAAE;AACpF;AACA;AACA,CAAC;AACD;;;;;;;;;;;AChDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,gBAAgB;AAC3C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAAoD,+BAA+B,EAAE;AACrF;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC7BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,eAAe;AAC1C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAAmD,+BAA+B,EAAE;AACpF;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC7CA;AAAA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0CAA0C;AACxE,aAAa,oCAAoC;AACjD,aAAa,wCAAwC;AACrD,aAAa,wCAAwC;AACrD,aAAa,4CAA4C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+IAA+I;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC7MA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,kBAAkB;AAC7C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,+BAA+B,EAAE,SAAS;AACzF;AACA;AACA,+CAA+C,+BAA+B,EAAE,SAAS;AACzF;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACkB;AACK;AACvB;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,aAAa,EAAE;AAChG;AACA;AACA,sDAAsD,qBAAqB,EAAE;AAC7E;AACA;AACA;AACA,6EAA6E,qBAAqB,EAAE;AACpG;AACA;AACA,+FAA+F,gBAAgB,EAAE;AACjH;AACA,oEAAoE,kCAAkC,EAAE;AACxG;AACA;AACA,gDAAgD,iCAAiC,EAAE;AACnF,gDAAgD,kCAAkC,EAAE;AACpF,2CAA2C,2EAA0C,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,uGAAuG,qCAAqC,EAAE;AAC9I;AACA,aAAa;AACb;AACA,gDAAgD,6CAA6C,EAAE;AAC/F,uDAAuD,UAAU,EAAE;AACnE,mDAAmD,iCAAiC,EAAE;AACtF;AACA;AACA,6EAA6E,8BAA8B,EAAE;AAC7G;AACA;AACA,+DAA+D,8CAA8C,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2JAA0H,sCAAsC,EAAE;AAClK;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gIAAgI,uCAAuC,qCAAqC,EAAE,EAAE,EAAE;AAClN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,qHAAsD,uCAAuC,EAAE;AAC/F;AACA;AACA;AACA;AACA,8CAA8C,4CAA4C,EAAE;AAC5F,+GAAgD,oCAAoC,EAAE;AACtF;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA,kHAAmD,oCAAoC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,UAAU,iEAAiE,EAAE,EAAE;AACvI;AACA;AACA,2DAA2D,gDAAgD;AAC3G,qGAAqG,yDAAyD,EAAE;AAChK;AACA;AACA,wDAAwD,gCAAgC,EAAE;AAC1F,0DAA0D;AAC1D;AACA;AACA;AACA,aAAa,EAAE,EAAE,uBAAuB,uBAAuB,EAAE;AACjE,SAAS;AACT;AACA;AACA;AACA,SAAS,iCAAiC,4CAA4C,EAAE;AACxF,4CAA4C,6CAA6C,EAAE;AAC3F,qDAAqD,qBAAqB,EAAE;AAC5E;AACA,8BAA8B,gEAAgE,EAAE;AAChG,8BAA8B,gEAAgE;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AC3MA;AAAA;AACA;AACA;AACA;AACgD;AAChD;AACA;AACA;AAC6B;AACU;AACT;AAC9B;AACA;AACA;AACA;AACA;AACA;AAC6J;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4FAAoC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2GAAmD,EAAE;AAC3F;AACA,aAAa;AACb,sCAAsC,yIAAgD,EAAE;AACxF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA+C,uCAAuC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2GAAmD,EAAE;AAC/F;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,0CAA0C,yIAAgD,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kCAAkC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wFAAgC,EAAE,yCAAyC,yFAAiC,EAAE,4CAA4C,qHAA8B,EAAE;AAC5O;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mCAAmC,+FAAsC,EAAE;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,mCAAmC,oLAAmE,EAAE;AACxG;AACA;AACA,SAAS;AACT;AACA,mCAAmC,yFAAgC,EAAE;AACrE;AACA;AACA,SAAS;AACT;AACA,mCAAmC,2FAAkC,EAAE;AACvE;AACA;AACA,SAAS;AACT;AACA,mCAAmC,kDAAkD,EAAE;AACvF;AACA;AACA,SAAS;AACT;AACA,mCAAmC,oCAAoC,EAAE;AACzE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,2BAA2B,EAAE;AAClF,sDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kDAAkD,0BAA0B,EAAE;AAC9E,gDAAgD,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC,EAAE;AACnF,iDAAiD,8DAA8D,EAAE;AACjH;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD,+BAA+B,kBAAkB;AACjD;AACA,mFAAmF,aAAa,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+DAA+D,EAAE;AACrG,mCAAmC,gCAAgC,EAAE;AACrE,8CAA8C,gBAAgB;AAC9D,SAAS;AACT;AACA,mCAAmC,4NAA4N,EAAE;AACjQ,iCAAiC,yBAAyB,EAAE;AAC5D,qCAAqC,aAAa;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4DAA4D,gBAAgB,EAAE;AAC9E,sCAAsC,qHAA8B,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,cAAc,EAAE;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C,wHAA+B,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB,EAAE;AAC1E,iDAAiD,6BAA6B,EAAE;AAChF,+CAA+C,8BAA8B,EAAE;AAC/E,kDAAkD,sBAAsB,EAAE;AAC1E,8DAA8D,2BAA2B;AACzF,yBAAyB;AACzB,iDAAiD,6BAA6B,EAAE;AAChF,sDAAsD,cAAc;AACpE,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,0CAA0C,0FAAkC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,4BAA4B,EAAE;AACjF,oDAAoD,6BAA6B,EAAE;AACnF,+CAA+C,8BAA8B,EAAE;AAC/E,kDAAkD,sBAAsB;AACxE,yBAAyB;AACzB,oDAAoD,kCAAkC,EAAE;AACxF,oDAAoD,YAAY;AAChE,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;AC3gBA;AAAA;AACA;AACA;AAC0E;AACxC;AACD;AACjC;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiB;AACjB;AAC+D;AAC/D;AACA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gEAAgE;AAC5F;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,gCAAgC,SAAS,mDAAmD,yCAAyC,EAAE;AACvuFAAuF,UAAU,mCAAmC,EAAE,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB,EAAE;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qCAAqC,gCAAgC,EAAE;AACvE,iDAAiD,oBAAoB,EAAE;AACvE,gDAAgD,oBAAoB,EAAE;AACtE;AACA,uEAAuE,+BAA+B,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0CAA0C,oCAAoC,EAAE;AAChF,8DAA8D,iBAAiB,EAAE;AACjF;AACA,KAAK;AACL;AACA,qDAAqD,iBAAiB,EAAE;AACxE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA,2EAA2E,gBAAgB,EAAE;AAC7F;AACA;AACA;AACA,KAAK;AACL;AACA,sDAAsD,gFAAgF,EAAE;AACxI,kEAAkE,mCAAmC,EAAE;AACvG;AACA;AACA;AACA;AACA,sDAAsD,iFAAiF,EAAE;AACzI;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qCAAqC,2BAA2B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA,4CAA4C,oBAAoB,EAAE,oBAAoB,cAAc,EAAE;AACtgNAAgN;AAChgBAAgB,EAAE;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,wGAAwG,gBAAgB,EAAE;AAC1H,2EAA2E,gBAAgB,EAAE;AAC7F;AACA,sDAAsD,gFAAgF,EAAE;AACxI,uEAAuE,8BAA8B,EAAE;AACvG,kEAAkE,mCAAmC,EAAE;AACvG;AACA;AACA;AACA;AACA,uDAAuD,iFAAiF,EAAE;AAC1I;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kDAAkD,UAAU,EAAE;AAC9D,KAAK;AACL;AACA,4CAA4C,oBAAoB,EAAE,oBAAoB,cAAc,EAAE;AACtG;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB,EAAE;AAC3E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7lBA,yC;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB,EAAE;AAC5E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4CAA4C,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA,0FAA0F,2BAA2B,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACjIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2BAA2B;AACpE;AACA;AACA,gCAAgC,cAAc,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgD,YAAY,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,uBAAuB;AAC5C;AACA;AACA;AACA,uCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B,sBAAsB,eAAe,EAAE,EAAE;AACxE;AACA,+DAA+D,YAAY,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU,eAAe,EAAE,EAAE;AACjF;AACA;AACA,qEAAqE,uBAAuB,EAAE;AAC9F;AACA,qDAAqD,uCAAuC,6BAA6B,EAAE,EAAE,EAAE;AAC/H;AACA;AACA;AACA,iDAAiD,mCAAmC,EAAE;AACtF;AACA;AACA,qCAAqC,mDAAmD,EAAE;AAC1F;AACA,wDAAwD,YAAY,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB,EAAE,wBAAwB,0BAA0B,EAAE;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mCAAmC,wBAAwB,EAAE,wBAAwB;AACjI;AACA;AACA,SAAS,EAAE,EAAE,EAAE,EAAE;AACjB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gCAAgC,sDAAsD;AACtF;AACA,mCAAmC,wFAAwF,EAAE;AAC7H,kCAAkC,mGAAmG;AACrI;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0CAA0C,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,6CAA6C,EAAE;AAC1G,uGAAsE,0CAA0C,EAAE;AAClH;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACpNA;AAAA;AACA;AACA;AAC2D;AAC3C;AACsC;AACtD;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB,EAAE;AAClD;AACA,4BAA4B,kBAAkB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,q2EAAq2E,yUAAyU,8kBAA8kB;AAC5vG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0CAA0C,EAAE;AAC9E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,kCAAkC,0CAA0C,EAAE;AAC9E;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU,sBAAsB,EAAE,EAAE;AAChG;AACA;AACA;AACA,oDAAoD,kBAAkB,EAAE;AACxE;AACA;AACA,+DAA+D,YAAY,EAAE;AAC7E,8DAA8D,YAAY,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,0BAA0B,EAAE;AAC9D,kCAAkC,uBAAuB;AACzD,aAAa;AACb,0EAA0E,0BAA0B,EAAE;AACtG,mEAAmE,uBAAuB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qEAAqE;AACzH;AACA;AACA,oDAAoD,yEAAyE,EAAE;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;AChTA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC9DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACzEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mFAAmF,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4DAA4D,EAAE;AACnH,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,8BAA8B,uBAAuB,QAAQ,EAAE;AAC9H;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+DAA+D,8BAA8B,uBAAuB,QAAQ,EAAE;AAC9H;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AClLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnGA;AAAA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB,EAAE;AACtE,oDAAoD,gBAAgB,EAAE;AACtE;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC6C;AACZ;AACjC;AACqC;AACrC;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,8HAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mEAAiC,EAAE;AACrF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wDAAwD,UAAU,iEAAiE,EAAE,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mEAAmE;AACnE;AACA;AACA;AACA,aAAa,EAAE,EAAE,uBAAuB,uBAAuB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yCAAyC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,UAAU,oEAAoE,EAAE,EAAE;AACzI,wDAAwD,UAAU,0CAA0C,EAAE,EAAE;AAChH,SAAS;AACT;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,0FAA0F,uBAAuB,EAAE;AACnH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;ACvQA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wCAAwC,oCAAoC,EAAE;AAC9E,uCAAuC,oCAAoC;AAC3E,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2FAA2F,8BAA8B,EAAE;AAC3H,KAAK;AACL;AACA,mCAAmC,iEAAiE,EAAE;AACtG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACjDA;AAAA;AACA;AACA;AAC0C;AAC1B;AACiB;AACjC;AACwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,yBAAyB,EAAE;AAC1H;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,kEAAkE,eAAe,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,kEAAkE,eAAe,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,qBAAqB,EAAE,oBAAoB,eAAe,EAAE;AACvH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,gFAAgF,gBAAgB,EAAE;AAClG,6CAA6C,wDAAwD,EAAE;AACvG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,yGAAyB;AAC1D,SAAS;AACT,mDAAmD,gBAAgB,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACvKA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACH;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4CAA4C,6BAA6B,EAAE;AAC3E,2CAA2C,6BAA6B;AACxE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,gDAAgD,EAAE;AACzG,SAAS;AACT;AACA,uCAAuC,sEAAsE,EAAE;AAC/G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB,aAAa,EAAE;AAChD;AACA,sCAAsC,qDAAqD,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC,EAAE;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0DAA0D,cAAc,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gLAAuH,sCAAsC,EAAE;AAC/J;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACrGA;AAAA;AACA;AACA;AACwE;AACN;AACb;;;;;;;;;;ACLrD;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oBAAoB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,+BAA+B,YAAY,EAAE,EAAE,EAAE;AACxG;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC,EAAE;AAC5E;AACA,4CAA4C,wBAAwB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU,qCAAqC,EAAE,EAAE;AACpH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC,EAAE;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuB;AACvB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA","file":"LineUpJS.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LineUpJS\"] = factory(require(\"d3\"));\n\telse\n\t\troot[\"LineUpJS\"] = factory(root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 509da5227bc5a9e95bf1","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 0\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 06.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { AEventDispatcher } from '../utils';\n/**\n * converts a given id to css compatible one\n * @param id\n * @return {string|void}\n */\nexport function fixCSS(id) {\n    return id.replace(/[\\s!#$%&'\\(\\)\\*\\+,\\.\\/:;<=>\\?@\\[\\\\\\]\\^`\\{\\|}~]/g, '_'); //replace non css stuff to _\n}\n/**\n * a column in LineUp\n */\nvar Column = (function (_super) {\n    __extends(Column, _super);\n    function Column(id, desc) {\n        _super.call(this);\n        this.desc = desc;\n        /**\n         * width of the column\n         * @type {number}\n         * @private\n         */\n        this.width = 100;\n        this.parent = null;\n        /**\n         * whether this column is compressed i.e. just shown in a minimal version\n         * @type {boolean}\n         * @private\n         */\n        this.compressed = false;\n        this.id = fixCSS(id);\n        this.label = this.desc.label || this.id;\n        this.description = this.desc.description || '';\n        this.cssClass = this.desc.cssClass || '';\n        this.color = this.desc.color || (this.cssClass !== '' ? null : Column.DEFAULT_COLOR);\n        this.renderername = this.desc.type || 'heatmapcustom';\n        this.rendererList = [];\n    }\n    Object.defineProperty(Column.prototype, \"headerCssClass\", {\n        get: function () {\n            return this.desc.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Column.prototype.assignNewId = function (idGenerator) {\n        this.id = fixCSS(idGenerator());\n    };\n    Object.defineProperty(Column.prototype, \"fqid\", {\n        /**\n         * returns the fully qualified id i.e. path the parent\n         * @returns {string}\n         */\n        get: function () {\n            return this.parent ? this.parent.fqid + '_' + this.id : this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Column.prototype, \"fqpath\", {\n        get: function () {\n            return this.parent ? this.parent.fqpath + '@' + this.parent.indexOf(this) : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * fires:\n     *  * widthChanged\n     *  * filterChanged\n     *  * labelChanged\n     *  * metaDataChanged\n     *  * compressChanged\n     *  * addColumn, removeColumn ... for composite pattern\n     *  * dirty, dirtyHeader, dirtyValues\n     * @returns {string[]}\n     */\n    Column.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([Column.EVENT_WIDTH_CHANGED, Column.EVENT_FILTER_CHANGED,\n            Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_COMPRESS_CHANGED,\n            Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_MULTIVALUE_SORT_CHANGED, Column.EVENT_ADD_COLUMN, Column.EVENT_REMOVE_COLUMN,\n            Column.EVENT_DIRTY, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES]);\n    };\n    Column.prototype.getWidth = function () {\n        return this.width;\n    };\n    Column.prototype.isHidden = function () {\n        return this.width <= 0;\n    };\n    Column.prototype.setCompressed = function (value) {\n        if (this.compressed === value) {\n            return;\n        }\n        this.fire([Column.EVENT_COMPRESS_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.compressed, this.compressed = value);\n    };\n    Column.prototype.getCompressed = function () {\n        return this.compressed;\n    };\n    /**\n     * visitor pattern for flattening the columns\n     * @param r the result array\n     * @param offset left offeset\n     * @param levelsToGo how many levels down\n     * @param padding padding between columns\n     * @returns {number} the used width by this column\n     */\n    Column.prototype.flatten = function (r, offset, levelsToGo, padding) {\n        if (levelsToGo === void 0) { levelsToGo = 0; }\n        if (padding === void 0) { padding = 0; }\n        var w = this.compressed ? Column.COMPRESSED_WIDTH : this.getWidth();\n        r.push({ col: this, offset: offset, width: w });\n        return w;\n    };\n    Column.prototype.setWidth = function (value) {\n        if (this.width === value) {\n            return;\n        }\n        this.fire([Column.EVENT_WIDTH_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.width, this.width = value);\n    };\n    Column.prototype.setWidthImpl = function (value) {\n        this.width = value;\n    };\n    Column.prototype.setMetaData = function (value) {\n        if (value.label === this.label && this.color === value.color && this.description === value.description) {\n            return;\n        }\n        var events = this.color === value.color ?\n            [Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY] :\n            [Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY];\n        this.fire(events, this.getMetaData(), {\n            label: this.label = value.label,\n            color: this.color = value.color,\n            description: this.description = value.description\n        });\n    };\n    Column.prototype.getMetaData = function () {\n        return {\n            label: this.label,\n            color: this.color,\n            description: this.description\n        };\n    };\n    /**\n     * triggers that the ranking is sorted by this column\n     * @param ascending\n     * @returns {any}\n     */\n    Column.prototype.sortByMe = function (ascending) {\n        if (ascending === void 0) { ascending = false; }\n        var r = this.findMyRanker();\n        if (r) {\n            return r.sortBy(this, ascending);\n        }\n        return false;\n    };\n    /**\n     * toggles the sorting order of this column in the ranking\n     * @returns {any}\n     */\n    Column.prototype.toggleMySorting = function () {\n        var r = this.findMyRanker();\n        if (r) {\n            return r.toggleSorting(this);\n        }\n        return false;\n    };\n    /**\n     * removes the column from the ranking\n     * @returns {boolean}\n     */\n    Column.prototype.removeMe = function () {\n        if (this.parent) {\n            return this.parent.remove(this);\n        }\n        return false;\n    };\n    /**\n     * inserts the given column after itself\n     * @param col\n     * @returns {boolean}\n     */\n    Column.prototype.insertAfterMe = function (col) {\n        if (this.parent) {\n            return this.parent.insertAfter(col, this) != null;\n        }\n        return false;\n    };\n    /**\n     * finds the underlying ranking column\n     * @returns {Ranking}\n     */\n    Column.prototype.findMyRanker = function () {\n        if (this.parent) {\n            return this.parent.findMyRanker();\n        }\n        return null;\n    };\n    /**\n     * dumps this column to JSON compatible format\n     * @param toDescRef\n     * @returns {any}\n     */\n    Column.prototype.dump = function (toDescRef) {\n        var r = {\n            id: this.id,\n            desc: toDescRef(this.desc),\n            width: this.width,\n            compressed: this.compressed\n        };\n        if (this.label !== (this.desc.label || this.id)) {\n            r.label = this.label;\n        }\n        if (this.color !== (this.desc.color || Column.DEFAULT_COLOR) && this.color) {\n            r.color = this.color;\n        }\n        return r;\n    };\n    /**\n     * restore the column content from a dump\n     * @param dump\n     * @param factory\n     */\n    Column.prototype.restore = function (dump, factory) {\n        this.width = dump.width || this.width;\n        this.label = dump.label || this.label;\n        this.color = dump.color || this.color;\n        this.compressed = dump.compressed === true;\n    };\n    /**\n     * return the label of a given row for the current column\n     * @param row\n     * @param index\n     * @return {string}\n     */\n    Column.prototype.getLabel = function (row, index) {\n        return '' + this.getValue(row, index);\n    };\n    /**\n     * return the value of a given row for the current column\n     * @param row\n     * @param index\n     * @return\n     */\n    Column.prototype.getValue = function (row, index) {\n        return ''; //no value\n    };\n    /**\n     * compare function used to determine the order according to the values of the current column\n     * @param a\n     * @param b\n     * @param aIndex,\n     * @param bIndex\n     * @return {number}\n     */\n    Column.prototype.compare = function (a, b, aIndex, bIndex) {\n        return 0; //can't compare\n    };\n    /**\n     * flag whether any filter is applied\n     * @return {boolean}\n     */\n    Column.prototype.isFiltered = function () {\n        return false;\n    };\n    /**\n     * predicate whether the current row should be included\n     * @param row\n     * @return {boolean}\n     */\n    Column.prototype.filter = function (row, index) {\n        return row !== null;\n    };\n    Column.prototype.rendererType = function () {\n        return this.renderername;\n    };\n    Column.prototype.setRendererType = function (type) {\n        this.fire([Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.renderername, this.renderername = type);\n    };\n    Column.prototype.getRendererList = function () {\n        return this.rendererList;\n    };\n    /**\n     * default color that should be used\n     * @type {string}\n     */\n    Column.DEFAULT_COLOR = '#C1C1C1';\n    /**\n     * magic variable for showing all columns\n     * @type {number}\n     */\n    Column.FLAT_ALL_COLUMNS = -1;\n    /**\n     * width of a compressed column\n     * @type {number}\n     */\n    Column.COMPRESSED_WIDTH = 16;\n    Column.EVENT_WIDTH_CHANGED = 'widthChanged';\n    Column.EVENT_FILTER_CHANGED = 'filterChanged';\n    Column.EVENT_LABEL_CHANGED = 'labelChanged';\n    Column.EVENT_METADATA_CHANGED = 'metaDataChanged';\n    Column.EVENT_COMPRESS_CHANGED = 'compressChanged';\n    Column.EVENT_RENDERER_TYPE_CHANGED = 'rendererTypeChanged';\n    Column.EVENT_ADD_COLUMN = 'addColumn';\n    Column.EVENT_REMOVE_COLUMN = 'removeColumn';\n    Column.EVENT_DIRTY = 'dirty';\n    Column.EVENT_DIRTY_HEADER = 'dirtyHeader';\n    Column.EVENT_DIRTY_VALUES = 'dirtyValues';\n    Column.EVENT_MULTIVALUE_SORT_CHANGED = 'multiValueSortChanged';\n    return Column;\n}(AEventDispatcher));\nexport default Column;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/Column.ts\n// module id = 1\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { dispatch, select, event as d3event } from 'd3';\n/**\n * create a delayed call, can be called multiple times but only the last one at most delayed by timeToDelay will be executed\n * @param callback the callback to call\n * @param timeToDelay delay the call in milliseconds\n * @param thisCallback this argument of the callback\n * @return {function(...[any]): undefined} a function that can be called with the same interface as the callback but delayed\n */\nexport function delayedCall(callback, timeToDelay, thisCallback) {\n    if (timeToDelay === void 0) { timeToDelay = 100; }\n    if (thisCallback === void 0) { thisCallback = this; }\n    var tm = -1;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (tm >= 0) {\n            clearTimeout(tm);\n            tm = -1;\n        }\n        args.unshift(thisCallback === null ? this : thisCallback);\n        tm = setTimeout(callback.bind.apply(callback, args), timeToDelay);\n    };\n}\n/**\n * base class for event dispatching using d3 event mechanism\n */\nexport var AEventDispatcher = (function () {\n    function AEventDispatcher() {\n        this.listeners = dispatch.apply(void 0, this.createEventList());\n        var that = this;\n        this.forwarder = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            that.fire.apply(that, [this.type].concat(args));\n        };\n    }\n    AEventDispatcher.prototype.on = function (type, listener) {\n        var _this = this;\n        if (arguments.length > 1) {\n            if (Array.isArray(type)) {\n                type.forEach(function (d) { return _this.listeners.on(d, listener); });\n            }\n            else {\n                this.listeners.on(type, listener);\n            }\n            return this;\n        }\n        return this.listeners.on(type);\n    };\n    /**\n     * return the list of events to be able to dispatch\n     * @return {Array}\n     */\n    AEventDispatcher.prototype.createEventList = function () {\n        return [];\n    };\n    AEventDispatcher.prototype.fire = function (type) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fireImpl = function (t) {\n            //local context per event, set a this argument\n            var context = {\n                source: _this,\n                type: t,\n                args: args //the arguments to the listener\n            };\n            _this.listeners[t].apply(context, args);\n        };\n        if (Array.isArray(type)) {\n            type.forEach(fireImpl.bind(this));\n        }\n        else {\n            fireImpl(type);\n        }\n    };\n    /**\n     * forwards one or more events from a given dispatcher to the current one\n     * i.e. when one of the given events is fired in 'from' it will be forwarded to all my listeners\n     * @param from the event dispatcher to forward from\n     * @param types the event types to forward\n     */\n    AEventDispatcher.prototype.forward = function (from) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        from.on(types, this.forwarder);\n    };\n    /**\n     * removes the forwarding declarations\n     * @param from\n     * @param types\n     */\n    AEventDispatcher.prototype.unforward = function (from) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        from.on(types, null);\n    };\n    return AEventDispatcher;\n}());\nvar TYPE_OBJECT = '[object Object]';\n//credits to https://github.com/vladmiller/dextend/blob/master/lib/dextend.js\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    var result = null;\n    for (var i = 0; i < args.length; i++) {\n        var toMerge = args[i], keys = Object.keys(toMerge);\n        if (result === null) {\n            result = toMerge;\n            continue;\n        }\n        for (var j = 0; j < keys.length; j++) {\n            var keyName = keys[j];\n            var value = toMerge[keyName];\n            //merge just POJOs\n            if (Object.prototype.toString.call(value) === TYPE_OBJECT && (Object.getPrototypeOf(value) === Object.prototype)) {\n                if (result[keyName] === undefined) {\n                    result[keyName] = {};\n                }\n                result[keyName] = merge(result[keyName], value);\n            }\n            else if (Array.isArray(value)) {\n                if (result[keyName] === undefined) {\n                    result[keyName] = [];\n                }\n                result[keyName] = value.concat(result[keyName]);\n            }\n            else {\n                result[keyName] = value;\n            }\n        }\n    }\n    return result;\n}\n/**\n * computes the absolute offset of the given element\n * @param element\n * @return {{left: number, top: number, width: number, height: number}}\n */\nexport function offset(element) {\n    var obj = element.getBoundingClientRect();\n    return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: obj.width,\n        height: obj.height\n    };\n}\n/**\n * content scroller utility\n *\n * a class for efficiently selecting a range of data items that are currently visible according to the scrolled position\n */\nexport var ContentScroller = (function (_super) {\n    __extends(ContentScroller, _super);\n    /**\n     *\n     * @param container the container element wrapping the content with a fixed height for enforcing scrolling\n     * @param content the content element to scroll\n     * @param options options see attribute\n     */\n    function ContentScroller(container, content, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        _super.call(this);\n        this.container = container;\n        this.content = content;\n        this.options = {\n            /**\n             * shift that should be used for calculating the top position\n             */\n            topShift: function () { return 0; },\n            /**\n             * backup rows, i.e .the number of rows that should also be shown for avoiding to frequent updates\n             */\n            backupRows: 5,\n            /**\n             * the height of one row in pixel\n             */\n            rowHeight: 10\n        };\n        this.prevScrollTop = 0;\n        this.shift = 0;\n        merge(this.options, options);\n        select(container).on('scroll.scroller', function () { return _this.onScroll(); });\n        //keep the previous state computing whether a redraw is needed\n        this.prevScrollTop = container.scrollTop;\n        //total shift to the top\n        this.shift = offset(content).top - offset(container).top;\n    }\n    /**\n     * two events are fired:\n     *  * scroll when the user scrolls the container\n     *  * redraw when a redraw of the content must be performed due to scrolling changes. Note due to backup rows\n     *     a scrolling operation might not include a redraw\n     *\n     * @returns {string[]}\n     */\n    ContentScroller.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([ContentScroller.EVENT_REDRAW, ContentScroller.EVENT_SCROLL]);\n    };\n    ContentScroller.prototype.scrollIntoView = function (start, length, index, row2y) {\n        var range = this.selectImpl(start, length, row2y, 0);\n        if (range.from <= index && index <= range.to) {\n            return; //already visible\n        }\n        var target = row2y(index) - 10; //magic constanst shift\n        var min = 0;\n        var max = this.container.scrollHeight - this.container.clientHeight;\n        // clamp to valid area\n        this.container.scrollTop = Math.max(min, Math.min(max, target));\n    };\n    /**\n     * selects a range identified by start and length and the row2y position callback returning the slice to show according to the current user scrolling position\n     * @param start start of the range\n     * @param length length of the range\n     * @param row2y lookup for computing the y position of a given row\n     * @returns {{from: number, to: number}} the slide to show\n     */\n    ContentScroller.prototype.select = function (start, length, row2y) {\n        return this.selectImpl(start, length, row2y, this.options.backupRows);\n    };\n    ContentScroller.prototype.selectImpl = function (start, length, row2y, backupRows) {\n        var top = this.container.scrollTop - this.shift - this.options.topShift(), bottom = top + this.container.clientHeight, i = 0, j;\n        /*console.log(window.matchMedia('print').matches, window.matchMedia('screen').matches, top, bottom);\n         if (typeof window.matchMedia === 'function' && window.matchMedia('print').matches) {\n         console.log('show all');\n         return [0, data.length];\n         }*/\n        if (top > 0) {\n            i = Math.round(top / this.options.rowHeight);\n            //count up till really even partial rows are visible\n            while (i >= start && row2y(i + 1) > top) {\n                i--;\n            }\n            i -= this.options.backupRows; //one more row as backup for scrolling\n        }\n        {\n            j = Math.round(bottom / this.options.rowHeight);\n            //count down till really even partial rows are visible\n            while (j <= length && row2y(j - 1) < bottom) {\n                j++;\n            }\n            j += this.options.backupRows; //one more row as backup for scrolling\n        }\n        return {\n            from: Math.max(i, start),\n            to: Math.min(j, length)\n        };\n    };\n    ContentScroller.prototype.onScroll = function () {\n        var top = this.container.scrollTop;\n        var left = this.container.scrollLeft;\n        //at least one row changed\n        //console.log(top, left);\n        this.fire(ContentScroller.EVENT_SCROLL, top, left);\n        if (Math.abs(this.prevScrollTop - top) >= this.options.rowHeight * this.options.backupRows) {\n            //we scrolled out of our backup rows, so we have to redraw the content\n            this.prevScrollTop = top;\n            this.fire(ContentScroller.EVENT_REDRAW);\n        }\n    };\n    /**\n     * removes the listeners\n     */\n    ContentScroller.prototype.destroy = function () {\n        select(this.container).on('scroll.scroller', null);\n    };\n    ContentScroller.EVENT_SCROLL = 'scroll';\n    ContentScroller.EVENT_REDRAW = 'redraw';\n    return ContentScroller;\n}(AEventDispatcher));\n/**\n * checks whether the given DragEvent has one of the given types\n */\nexport function hasDnDType(e, typesToCheck) {\n    var types = e.dataTransfer.types;\n    if (typeof types.indexOf === 'function') {\n        return typesToCheck.some(function (type) { return types.indexOf(type) >= 0; });\n    }\n    if (typeof types.includes === 'function') {\n        return typesToCheck.some(function (type) { return types.includes(type); });\n    }\n    if (typeof types.contains === 'function') {\n        return typesToCheck.some(function (type) { return types.contains(type); });\n    }\n    return false;\n}\n/**\n * should it be a copy dnd operation?\n */\nexport function copyDnD(e) {\n    var dT = e.dataTransfer;\n    return (e.ctrlKey && dT.effectAllowed.match(/copy/gi) != null) || (dT.effectAllowed.match(/move/gi) == null);\n}\n/**\n * updates the drop effect according to the currently selected meta keys\n * @param e\n */\nexport function updateDropEffect(e) {\n    var dT = e.dataTransfer;\n    if (copyDnD(e)) {\n        dT.dropEffect = 'copy';\n    }\n    else {\n        dT.dropEffect = 'move';\n    }\n}\n/**\n * returns a d3 callable function to make an element dropable, managed the class css 'drag_over' for hovering effects\n * @param mimeTypes the mime types to be dropable\n * @param onDrop: handler when an element is dropped\n */\nexport function dropAble(mimeTypes, onDrop) {\n    return function ($node) {\n        $node.on('dragenter', function () {\n            var e = d3event;\n            //var xy = mouse($node.node());\n            if (hasDnDType(e, mimeTypes)) {\n                select(this).classed('drag_over', true);\n                //sounds good\n                return false;\n            }\n            //not a valid mime type\n            select(this).classed('drag_over', false);\n        }).on('dragover', function () {\n            var e = d3event;\n            if (hasDnDType(e, mimeTypes)) {\n                e.preventDefault();\n                updateDropEffect(e);\n                select(this).classed('drag_over', true);\n                return false;\n            }\n        }).on('dragleave', function () {\n            //\n            select(this).classed('drag_over', false);\n        }).on('drop', function (d) {\n            var e = d3event;\n            e.preventDefault();\n            select(this).classed('drag_over', false);\n            //var xy = mouse($node.node());\n            if (hasDnDType(e, mimeTypes)) {\n                var data = {};\n                //selects the data contained in the data transfer\n                mimeTypes.forEach(function (mime) {\n                    var value = e.dataTransfer.getData(mime);\n                    if (value !== '') {\n                        data[mime] = value;\n                    }\n                });\n                return onDrop(data, d, copyDnD(e));\n            }\n        });\n    };\n}\n/**\n * utility function to sets attributes and styles in a nodes\n * @param node\n * @param attrs\n * @param styles\n * @return {T}\n */\nexport function attr(node, attrs, styles) {\n    if (attrs === void 0) { attrs = {}; }\n    if (styles === void 0) { styles = {}; }\n    Object.keys(attrs).forEach(function (attr) { return node.setAttribute(attr, String(attrs[attr])); });\n    Object.keys(styles).forEach(function (attr) { return node.style.setProperty(attr, styles[attr]); });\n    return node;\n}\n/**\n * for each item matching the selector execute the callback\n * @param node\n * @param selector\n * @param callback\n */\nexport function forEach(node, selector, callback) {\n    Array.prototype.slice.call(node.querySelectorAll(selector)).forEach(callback);\n}\nvar ellipsis = '…';\nexport function createTextHints(ctx, font) {\n    var bak = ctx.font;\n    ctx.font = font;\n    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    var testText = alphabet + (alphabet.toUpperCase()) + '0123456789';\n    var r = {\n        maxLetterWidth: ctx.measureText('M').width,\n        avgLetterWidth: ctx.measureText(testText).width / testText.length,\n        ellipsisWidth: ctx.measureText(ellipsis).width\n    };\n    ctx.font = bak;\n    return r;\n}\nexport function clipText(ctx, text, x, y, maxWidth, hints) {\n    //based on http://stackoverflow.com/questions/10508988/html-canvas-text-overflow-ellipsis#10511598\n    var render = function (t) { return ctx.fillText(t, x, y, maxWidth); };\n    //check if using heuristics\n    if (hints.maxLetterWidth * text.length <= maxWidth || maxWidth <= hints.ellipsisWidth || text.length === 0) {\n        return render(text);\n    }\n    //check precisely\n    if (ctx.measureText(text).width <= maxWidth) {\n        return render(text);\n    }\n    var availWidth = maxWidth - hints.ellipsisWidth;\n    // use binary search\n    var min = 0;\n    var max = text.length - 1;\n    // guess first based on average letter width\n    var guess = Math.min(max, Math.floor(maxWidth / hints.avgLetterWidth));\n    while (min < max) {\n        var overflow = availWidth - ctx.measureText(text.substring(0, guess + 1)).width;\n        if (overflow < 0) {\n            max = guess - 1;\n        }\n        else if (overflow > 0) {\n            min = guess + 1;\n        }\n        else {\n            break;\n        }\n        guess = Math.floor((max + min) / 2); //compute next guess\n    }\n    return render(text.substring(0, min + 1) + ellipsis);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.ts\n// module id = 2\n// module chunks = 0 1","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\n/**\n * a column having an accessor to get the cell value\n */\nvar ValueColumn = (function (_super) {\n    __extends(ValueColumn, _super);\n    function ValueColumn(id, desc) {\n        _super.call(this, id, desc);\n        //find accessor\n        this.accessor = desc.accessor || (function () { return null; });\n    }\n    ValueColumn.prototype.getLabel = function (row, index) {\n        return '' + this.getValue(row, index);\n    };\n    ValueColumn.prototype.getRaw = function (row, index) {\n        return this.accessor(row, index, this.id, this.desc, this.findMyRanker());\n    };\n    ValueColumn.prototype.getValue = function (row, index) {\n        return this.getRaw(row, index);\n    };\n    return ValueColumn;\n}(Column));\nexport default ValueColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/ValueColumn.ts\n// module id = 3\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { scale, format } from 'd3';\nimport Column from './Column';\nimport ValueColumn from './ValueColumn';\n/**\n * checks whether the given column or description is a number column, i.e. the value is a number\n * @param col\n * @returns {boolean}\n */\nexport function isNumberColumn(col) {\n    return (col instanceof Column && typeof col.getNumber === 'function' || (!(col instanceof Column) && col.type.match(/(number|stack|ordinal)/) != null));\n}\nfunction isMissingValue(v) {\n    return typeof (v) === 'undefined' || v == null || isNaN(v) || v === '' || v === 'NA' || (typeof (v) === 'string' && (v.toLowerCase() === 'na'));\n}\n/**\n * save number comparison\n * @param a\n * @param b\n * @return {number}\n */\nexport function numberCompare(a, b) {\n    if (isNaN(a)) {\n        return isNaN(b) ? 0 : +1;\n    }\n    if (isNaN(b)) {\n        return -1;\n    }\n    return a - b;\n}\nfunction toScale(type) {\n    if (type === void 0) { type = 'linear'; }\n    switch (type) {\n        case 'log':\n            return scale.log().clamp(true);\n        case 'sqrt':\n            return scale.sqrt().clamp(true);\n        case 'pow1.1':\n            return scale.pow().exponent(1.1).clamp(true);\n        case 'pow2':\n            return scale.pow().exponent(2).clamp(true);\n        case 'pow3':\n            return scale.pow().exponent(3).clamp(true);\n        default:\n            return scale.linear().clamp(true);\n    }\n}\nfunction isSame(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    return a.every(function (ai, i) { return ai === b[i]; });\n}\nfunction fixDomain(domain, type) {\n    if (type === 'log' && domain[0] === 0) {\n        domain[0] = 0.0000001; //0 is bad\n    }\n    return domain;\n}\n/**\n * a mapping function based on a d3 scale (linear, sqrt, log)\n */\nexport var ScaleMappingFunction = (function () {\n    function ScaleMappingFunction(domain, type, range) {\n        if (domain === void 0) { domain = [0, 1]; }\n        if (type === void 0) { type = 'linear'; }\n        if (range === void 0) { range = [0, 1]; }\n        this.type = type;\n        this.s = toScale(type).domain(fixDomain(domain, this.type)).range(range);\n    }\n    Object.defineProperty(ScaleMappingFunction.prototype, \"domain\", {\n        get: function () {\n            return this.s.domain();\n        },\n        set: function (domain) {\n            this.s.domain(fixDomain(domain, this.type));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScaleMappingFunction.prototype, \"range\", {\n        get: function () {\n            return this.s.range();\n        },\n        set: function (range) {\n            this.s.range(range);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScaleMappingFunction.prototype.apply = function (v) {\n        return this.s(v);\n    };\n    Object.defineProperty(ScaleMappingFunction.prototype, \"scaleType\", {\n        get: function () {\n            return this.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScaleMappingFunction.prototype.dump = function () {\n        return {\n            type: this.type,\n            domain: this.domain,\n            range: this.range\n        };\n    };\n    ScaleMappingFunction.prototype.eq = function (other) {\n        if (!(other instanceof ScaleMappingFunction)) {\n            return false;\n        }\n        var that = other;\n        return that.type === this.type && isSame(this.domain, that.domain) && isSame(this.range, that.range);\n    };\n    ScaleMappingFunction.prototype.restore = function (dump) {\n        this.type = dump.type;\n        this.s = toScale(dump.type).domain(dump.domain).range(dump.range);\n    };\n    ScaleMappingFunction.prototype.clone = function () {\n        return new ScaleMappingFunction(this.domain, this.type, this.range);\n    };\n    return ScaleMappingFunction;\n}());\n/**\n * a mapping function based on a custom user function using 'value' as the current value\n */\nexport var ScriptMappingFunction = (function () {\n    function ScriptMappingFunction(domain_, code_) {\n        if (domain_ === void 0) { domain_ = [0, 1]; }\n        if (code_ === void 0) { code_ = 'return this.linear(value,this.value_min,this.value_max);'; }\n        this.domain_ = domain_;\n        this.code_ = code_;\n        this.f = new Function('value', code_);\n    }\n    Object.defineProperty(ScriptMappingFunction.prototype, \"domain\", {\n        get: function () {\n            return this.domain_;\n        },\n        set: function (domain) {\n            this.domain_ = domain;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ScriptMappingFunction.prototype, \"code\", {\n        get: function () {\n            return this.code_;\n        },\n        set: function (code) {\n            if (this.code_ === code) {\n                return;\n            }\n            this.code_ = code;\n            this.f = new Function('value', code);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScriptMappingFunction.prototype.apply = function (v) {\n        var min = this.domain_[0], max = this.domain_[this.domain_.length - 1];\n        var r = this.f.call({\n            value_min: min,\n            value_max: max,\n            value_range: max - min,\n            value_domain: this.domain_.slice(),\n            linear: function (v, mi, ma) { return (v - mi) / (ma - mi); }\n        }, v);\n        if (typeof r === 'number') {\n            return Math.max(Math.min(r, 1), 0);\n        }\n        return NaN;\n    };\n    ScriptMappingFunction.prototype.dump = function () {\n        return {\n            type: 'script',\n            code: this.code\n        };\n    };\n    ScriptMappingFunction.prototype.eq = function (other) {\n        if (!(other instanceof ScriptMappingFunction)) {\n            return false;\n        }\n        var that = other;\n        return that.code === this.code;\n    };\n    ScriptMappingFunction.prototype.restore = function (dump) {\n        this.code = dump.code;\n    };\n    ScriptMappingFunction.prototype.clone = function () {\n        return new ScriptMappingFunction(this.domain, this.code);\n    };\n    return ScriptMappingFunction;\n}());\nexport function createMappingFunction(dump) {\n    if (dump.type === 'script') {\n        var s = new ScriptMappingFunction();\n        s.restore(dump);\n        return s;\n    }\n    else {\n        var l = new ScaleMappingFunction();\n        l.restore(dump);\n        return l;\n    }\n}\n/**\n * a number column mapped from an original input scale to an output range\n */\nvar NumberColumn = (function (_super) {\n    __extends(NumberColumn, _super);\n    function NumberColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.missingValue = 0;\n        /**\n         * currently active filter\n         * @type {{min: number, max: number}}\n         * @private\n         */\n        this.currentFilter = NumberColumn.noFilter();\n        this.numberFormat = format('.3n');\n        if (desc.map) {\n            this.mapping = createMappingFunction(desc.map);\n        }\n        else if (desc.domain) {\n            this.mapping = new ScaleMappingFunction(desc.domain, 'linear', desc.range || [0, 1]);\n        }\n        this.original = this.mapping.clone();\n        if (desc.numberFormat) {\n            this.numberFormat = format(desc.numberFormat);\n        }\n        this.rendererList = [{ type: 'number', label: 'Bar' },\n            { type: 'circle', label: 'Circle' }];\n    }\n    NumberColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.map = this.mapping.dump();\n        r.filter = this.currentFilter;\n        r.missingValue = this.missingValue;\n        return r;\n    };\n    NumberColumn.prototype.restore = function (dump, factory) {\n        _super.prototype.restore.call(this, dump, factory);\n        if (dump.map) {\n            this.mapping = createMappingFunction(dump.map);\n        }\n        else if (dump.domain) {\n            this.mapping = new ScaleMappingFunction(dump.domain, 'linear', dump.range || [0, 1]);\n        }\n        if (dump.currentFilter) {\n            this.currentFilter = dump.currentFilter;\n        }\n        if (dump.missingValue) {\n            this.missingValue = dump.missingValue;\n        }\n        if (dump.numberFormat) {\n            this.numberFormat = format(dump.numberFormat);\n        }\n    };\n    NumberColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([NumberColumn.EVENT_MAPPING_CHANGED]);\n    };\n    NumberColumn.prototype.getLabel = function (row, index) {\n        if (this.desc.numberFormat) {\n            var raw = this.getRawValue(row, index);\n            //if a dedicated format and a number use the formatter in any case\n            if (isNaN(raw)) {\n                return 'NaN';\n            }\n            return this.numberFormat(raw);\n        }\n        var v = _super.prototype.getValue.call(this, row, index);\n        //keep non number if it is not a number else convert using formatter\n        if (typeof v === 'number') {\n            return this.numberFormat(+v);\n        }\n        return String(v);\n    };\n    NumberColumn.prototype.getRawValue = function (row, index) {\n        var v = _super.prototype.getValue.call(this, row, index);\n        if (isMissingValue(v)) {\n            return this.missingValue;\n        }\n        return +v;\n    };\n    NumberColumn.prototype.getValue = function (row, index) {\n        var v = this.getRawValue(row, index);\n        if (isNaN(v)) {\n            return v;\n        }\n        return this.mapping.apply(v);\n    };\n    NumberColumn.prototype.getNumber = function (row, index) {\n        return this.getValue(row, index);\n    };\n    NumberColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        return numberCompare(this.getValue(a, aIndex), this.getValue(b, bIndex));\n    };\n    NumberColumn.prototype.getOriginalMapping = function () {\n        return this.original.clone();\n    };\n    NumberColumn.prototype.getMapping = function () {\n        return this.mapping.clone();\n    };\n    NumberColumn.prototype.setMapping = function (mapping) {\n        if (this.mapping.eq(mapping)) {\n            return;\n        }\n        this.fire([NumberColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n    };\n    NumberColumn.prototype.isFiltered = function () {\n        return this.currentFilter.filterMissing || isFinite(this.currentFilter.min) || isFinite(this.currentFilter.max);\n    };\n    Object.defineProperty(NumberColumn.prototype, \"filterMin\", {\n        get: function () {\n            return this.currentFilter.min;\n        },\n        set: function (min) {\n            var bak = this.getFilter();\n            this.currentFilter.min = isNaN(min) ? -Infinity : min;\n            this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NumberColumn.prototype, \"filterMax\", {\n        get: function () {\n            return this.currentFilter.max;\n        },\n        set: function (max) {\n            var bak = this.getFilter();\n            this.currentFilter.max = isNaN(max) ? Infinity : max;\n            this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NumberColumn.prototype, \"filterMissing\", {\n        get: function () {\n            return this.currentFilter.filterMissing;\n        },\n        set: function (filterMissing) {\n            var bak = this.getFilter();\n            this.currentFilter.filterMissing = filterMissing;\n            this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumberColumn.prototype.getFilter = function () {\n        return {\n            min: this.currentFilter.min,\n            max: this.currentFilter.max,\n            filterMissing: this.currentFilter.filterMissing\n        };\n    };\n    NumberColumn.prototype.setFilter = function (value) {\n        if (value === void 0) { value = { min: -Infinity, max: +Infinity, filterMissing: false }; }\n        if (this.currentFilter.min === value.min && this.currentFilter.max === value.max && this.currentFilter.filterMissing === value.filterMissing) {\n            return;\n        }\n        var bak = this.getFilter();\n        this.currentFilter.min = isNaN(value.min) ? -Infinity : value.min;\n        this.currentFilter.max = isNaN(value.max) ? Infinity : value.max;\n        this.currentFilter.filterMissing = value.filterMissing;\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n    };\n    /**\n     * filter the current row if any filter is set\n     * @param row\n     * @returns {boolean}\n     */\n    NumberColumn.prototype.filter = function (row, index) {\n        if (!this.isFiltered()) {\n            return true;\n        }\n        var v = _super.prototype.getValue.call(this, row, index);\n        if (isMissingValue(v)) {\n            return !this.filterMissing;\n        }\n        var vn = +v;\n        return !((isFinite(this.currentFilter.min) && vn < this.currentFilter.min) || (isFinite(this.currentFilter.max) && vn > this.currentFilter.max));\n    };\n    NumberColumn.prototype.rendererType = function () {\n        if (this.getCompressed()) {\n            return NumberColumn.COMPRESSED_RENDERER;\n        }\n        return _super.prototype.rendererType.call(this);\n    };\n    NumberColumn.prototype.getRendererList = function () {\n        return this.rendererList;\n    };\n    NumberColumn.EVENT_MAPPING_CHANGED = 'mappingChanged';\n    NumberColumn.COMPRESSED_RENDERER = 'heatmap';\n    NumberColumn.noFilter = function () { return ({ min: -Infinity, max: Infinity, filterMissing: false }); };\n    return NumberColumn;\n}(ValueColumn));\nexport default NumberColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/NumberColumn.ts\n// module id = 4\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\nimport ValueColumn from './ValueColumn';\n/**\n * a string column with optional alignment\n */\nvar StringColumn = (function (_super) {\n    __extends(StringColumn, _super);\n    function StringColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.currentFilter = null;\n        this._alignment = 'left';\n        this.setWidthImpl(200); //by default 200\n        this._alignment = desc.alignment || 'left';\n    }\n    Object.defineProperty(StringColumn.prototype, \"alignment\", {\n        //readonly\n        get: function () {\n            return this._alignment;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringColumn.prototype.getValue = function (row, index) {\n        var v = _super.prototype.getValue.call(this, row, index);\n        if (typeof (v) === 'undefined' || v == null) {\n            return '';\n        }\n        return String(v);\n    };\n    StringColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        if (this.currentFilter instanceof RegExp) {\n            r.filter = 'REGEX:' + this.currentFilter.source;\n        }\n        else {\n            r.filter = this.currentFilter;\n        }\n        r.alignment = this.alignment;\n        return r;\n    };\n    StringColumn.prototype.restore = function (dump, factory) {\n        _super.prototype.restore.call(this, dump, factory);\n        if (dump.filter && dump.filter.slice(0, 6) === 'REGEX:') {\n            this.currentFilter = new RegExp(dump.filter.slice(6));\n        }\n        else {\n            this.currentFilter = dump.filter || null;\n        }\n        this._alignment = dump.alignment || this._alignment;\n    };\n    StringColumn.prototype.isFiltered = function () {\n        return this.currentFilter != null;\n    };\n    StringColumn.prototype.filter = function (row, index) {\n        if (!this.isFiltered()) {\n            return true;\n        }\n        var r = this.getLabel(row, index), filter = this.currentFilter;\n        if (filter === StringColumn.FILTER_MISSING) {\n            return r != null && r.trim() !== '';\n        }\n        if (typeof filter === 'string' && filter.length > 0) {\n            return r && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\n        }\n        if (filter instanceof RegExp) {\n            return r && filter.test(r);\n        }\n        return true;\n    };\n    StringColumn.prototype.getFilter = function () {\n        return this.currentFilter;\n    };\n    StringColumn.prototype.setFilter = function (filter) {\n        if (filter === '') {\n            filter = null;\n        }\n        if (this.currentFilter === filter) {\n            return;\n        }\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n    };\n    StringColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        var a_val, b_val;\n        if ((a_val = this.getValue(a, aIndex)) === '') {\n            return this.getValue(b, bIndex) === '' ? 0 : +1; //same = 0\n        }\n        else if ((b_val = this.getValue(b, bIndex)) === '') {\n            return -1;\n        }\n        return a_val.localeCompare(b_val);\n    };\n    //magic key for filtering missing ones\n    StringColumn.FILTER_MISSING = '__FILTER_MISSING';\n    return StringColumn;\n}(ValueColumn));\nexport default StringColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/StringColumn.ts\n// module id = 5\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nimport Column from './model/Column';\nimport { forEach, attr, clipText } from './utils';\nimport { hsl } from 'd3';\nimport * as d3 from 'd3';\n/**\n * default renderer instance rendering the value as a text\n */\nexport var DefaultCellRenderer = (function () {\n    function DefaultCellRenderer(textClass, align) {\n        if (textClass === void 0) { textClass = 'text'; }\n        if (align === void 0) { align = 'left'; }\n        /**\n         * class to append to the text elements\n         * @type {string}\n         */\n        this.textClass = 'text';\n        /**\n         * the text alignment: left, center, right\n         * @type {string}\n         */\n        this.align = 'left';\n        this.textClass = textClass;\n        this.align = align;\n    }\n    DefaultCellRenderer.prototype.createSVG = function (col, context) {\n        var _this = this;\n        return {\n            template: \"<text class=\\\"\" + this.textClass + \"\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\",\n            update: function (n, d, i) {\n                var alignmentShift = 2;\n                if (_this.align === 'right') {\n                    alignmentShift = col.getWidth() - 5;\n                }\n                else if (_this.align === 'center') {\n                    alignmentShift = col.getWidth() * 0.5;\n                }\n                attr(n, {\n                    x: alignmentShift\n                });\n                n.textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    };\n    DefaultCellRenderer.prototype.createHTML = function (col, context) {\n        return {\n            template: \"<div class=\\\"\" + this.textClass + \" \" + this.align + \"\\\"></div>\",\n            update: function (n, d, i) {\n                attr(n, {}, {\n                    width: col.getWidth() + \"px\"\n                });\n                n.textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    };\n    DefaultCellRenderer.prototype.createCanvas = function (col, context) {\n        var _this = this;\n        return function (ctx, d, i) {\n            var bak = ctx.textAlign;\n            ctx.textAlign = _this.align;\n            var w = col.getWidth();\n            var shift = 0;\n            if (_this.align === 'center') {\n                shift = w / 2;\n            }\n            else if (_this.align === 'right') {\n                shift = w;\n            }\n            clipText(ctx, col.getLabel(d.v, d.dataIndex), shift, 0, w, context.textHints);\n            ctx.textAlign = bak;\n        };\n    };\n    return DefaultCellRenderer;\n}());\nvar HeatmapCellRenderer = (function () {\n    function HeatmapCellRenderer() {\n    }\n    HeatmapCellRenderer.prototype.createSVG = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<g class=\\\"heatmapcell\\\"></g>\",\n            update: function (n, d, i) {\n                var rect = d3.select(n).selectAll('rect').data(col.getValue(d.v, d.dataIndex));\n                rect.enter().append('rect');\n                rect\n                    .attr({\n                    y: padding,\n                    x: function (d, i) { return (i * celldimension); },\n                    width: celldimension,\n                    height: context.rowHeight(i),\n                    fill: function (d, i) { return multiValueColumn.getColor(d); }\n                });\n                rect.exit().remove();\n            }\n        };\n    };\n    HeatmapCellRenderer.prototype.createHTML = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<div class=\\\"heatmapcell\\\" style=\\\"top:\" + padding + \"px;\\\">\\n                                   </div>\",\n            update: function (n, d, i) {\n                var g = d3.select(n);\n                var div = g.selectAll('div').data(col.getValue(d.v, d.dataIndex));\n                div.enter().append('div');\n                div\n                    .style({\n                    'width': celldimension + 'px',\n                    'background-color': multiValueColumn.getColor(d),\n                    'height': context.rowHeight(i) + 'px',\n                    'left': function (d, i) { return (i * celldimension) + 'px'; }\n                });\n            }\n        };\n    };\n    HeatmapCellRenderer.prototype.createCanvas = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        var padding = context.option('rowPadding', 1);\n        return function (ctx, d, i) {\n            var data = col.getValue(d.v, d.dataIndex);\n            data.forEach(function (d, i) {\n                var x = (i * celldimension);\n                ctx.beginPath();\n                ctx.fillStyle = multiValueColumn.getColor(d);\n                ctx.fillRect(x, padding, celldimension, context.rowHeight(i));\n            });\n        };\n    };\n    return HeatmapCellRenderer;\n}());\nvar SparklineCellRenderer = (function () {\n    function SparklineCellRenderer() {\n    }\n    SparklineCellRenderer.prototype.createSVG = function (col, context) {\n        var multiValueColumn = col;\n        return {\n            template: \"<g class=\\\"sparklinecell\\\"></g>\",\n            update: function (n, d, i) {\n                var path = d3.select(n).selectAll('path').data([col.getValue(d.v, d.dataIndex)]);\n                var line = d3.svg.line();\n                path.enter().append('path');\n                path\n                    .attr('d', function (d, i) {\n                    line\n                        .x(function (d, i) { return multiValueColumn.getxScale(i); })\n                        .y(function (d, i) { return multiValueColumn.getyScale(d, context.rowHeight(i)); });\n                    return line(d);\n                });\n                path.exit().remove();\n            }\n        };\n    };\n    SparklineCellRenderer.prototype.createCanvas = function (col, context) {\n        var multiValueColumn = col;\n        return function (ctx, d, i) {\n            var data = col.getValue(d.v, d.dataIndex);\n            var xpos, ypos;\n            data.forEach(function (d, i) {\n                if (i === 0) {\n                    xpos = multiValueColumn.getxScale(i);\n                    ypos = multiValueColumn.getyScale(d, context.rowHeight(i));\n                }\n                else {\n                    ctx.strokeStyle = 'black';\n                    ctx.fillStyle = 'black';\n                    ctx.beginPath();\n                    ctx.moveTo(xpos, ypos);\n                    xpos = multiValueColumn.getxScale(i);\n                    ypos = multiValueColumn.getyScale(d, context.rowHeight(i));\n                    ctx.lineTo(xpos, ypos);\n                    ctx.stroke();\n                    ctx.fill();\n                }\n            });\n        };\n    };\n    return SparklineCellRenderer;\n}());\nvar ThresholdCellRenderer = (function () {\n    function ThresholdCellRenderer() {\n    }\n    ThresholdCellRenderer.prototype.createSVG = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        var binaryColor = multiValueColumn.getbinaryColor();\n        return {\n            template: \"<g class=\\\"thresholdcell\\\"></g>\",\n            update: function (n, d, i) {\n                var rect = d3.select(n).selectAll('rect').data(col.getValue(d.v, d.dataIndex));\n                rect.enter().append('rect');\n                rect\n                    .attr({\n                    y: function (d, i) { return (d < multiValueColumn.getthresholdValue()) ? (context.rowHeight(i) / 2) : 0; },\n                    x: function (d, i) { return (i * celldimension); },\n                    width: celldimension,\n                    height: function (d, i) { return (context.rowHeight(i)) / 2; },\n                    fill: function (d) { return (d < multiValueColumn.getthresholdValue()) ? binaryColor[0] : binaryColor[1]; }\n                });\n                rect.exit().remove();\n            }\n        };\n    };\n    ThresholdCellRenderer.prototype.createCanvas = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        var binaryColor = multiValueColumn.getbinaryColor();\n        return function (ctx, d, i) {\n            var data = col.getValue(d.v, d.dataIndex);\n            data.forEach(function (d, i) {\n                ctx.beginPath();\n                var xpos = (i * celldimension);\n                var ypos = (d < multiValueColumn.getthresholdValue()) ? (context.rowHeight(i) / 2) : 0;\n                ctx.fillStyle = (d < multiValueColumn.getthresholdValue()) ? binaryColor[0] : binaryColor[1];\n                ctx.fillRect(xpos, ypos, celldimension, context.rowHeight(i) / 2);\n            });\n        };\n    };\n    return ThresholdCellRenderer;\n}());\nvar VerticalBarCellRenderer = (function () {\n    function VerticalBarCellRenderer() {\n    }\n    VerticalBarCellRenderer.prototype.createSVG = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        return {\n            template: \"<g class=\\\"verticalbarcell\\\"></g>\",\n            update: function (n, d, i) {\n                var rect = d3.select(n).selectAll('rect').data(col.getValue(d.v, d.dataIndex));\n                rect.enter().append('rect');\n                rect\n                    .attr({\n                    y: function (d, i) { return multiValueColumn.getyposVerticalBar(d, context.rowHeight(i)); },\n                    x: function (d, i) { return (i * celldimension); },\n                    width: celldimension,\n                    height: function (d, i) { return multiValueColumn.getVerticalBarHeight(d, context.rowHeight(i)); },\n                    fill: function (d, i) { return multiValueColumn.getColor(d); }\n                });\n                rect.exit().remove();\n            }\n        };\n    };\n    VerticalBarCellRenderer.prototype.createCanvas = function (col, context) {\n        var multiValueColumn = col;\n        var celldimension = multiValueColumn.calculateCellDimension();\n        return function (ctx, d, i) {\n            var data = col.getValue(d.v, d.dataIndex);\n            data.forEach(function (d, i) {\n                var xpos = (i * celldimension);\n                var ypos = multiValueColumn.getyposVerticalBar(d, context.rowHeight(i));\n                ctx.fillStyle = multiValueColumn.getColor(d);\n                ctx.fillRect(xpos, ypos, celldimension, multiValueColumn.getVerticalBarHeight(d, context.rowHeight(i)));\n            });\n        };\n    };\n    return VerticalBarCellRenderer;\n}());\nvar BoxplotCellRenderer = (function () {\n    function BoxplotCellRenderer() {\n    }\n    BoxplotCellRenderer.prototype.createSVG = function (col, context) {\n        var multiValueColumn = col;\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<g class=\\\"boxplotcell\\\"></g>\",\n            update: function (n, d, i) {\n                var boxdata = multiValueColumn.getboxPlotData(col.getValue(d.v, d.dataIndex));\n                var rect = d3.select(n).selectAll('rect').data([col.getValue(d.v, d.dataIndex)]);\n                rect.enter().append('rect');\n                rect\n                    .attr('class', 'boxplotrect')\n                    .attr({\n                    y: padding,\n                    x: boxdata.q1,\n                    width: (boxdata.q3 - boxdata.q1),\n                    height: function (d, i) { return context.rowHeight(i); }\n                });\n                rect.exit().remove();\n                var path = d3.select(n).selectAll('path').data([col.getValue(d.v, d.dataIndex)]);\n                path.enter().append('path');\n                path\n                    .attr('class', 'boxplotline')\n                    .attr('d', function (d, i) {\n                    var left = boxdata.min, right = boxdata.max, center = boxdata.median;\n                    var bottom = Math.max(context.rowHeight(i) - padding, 0);\n                    var middle = (bottom - padding) / 2;\n                    return 'M' + left + ',' + middle + 'L' + boxdata.q1 + ',' + middle +\n                        'M' + left + ',' + padding + 'L' + left + ',' + bottom +\n                        'M' + center + ',' + padding + 'L' + center + ',' + bottom +\n                        'M' + (boxdata.q3) + ',' + middle + 'L' + (right) + ',' + middle +\n                        'M' + right + ',' + padding + 'L' + right + ',' + bottom;\n                });\n                path.exit().remove();\n            }\n        };\n    };\n    BoxplotCellRenderer.prototype.createCanvas = function (col, context) {\n        var multiValueColumn = col;\n        var padding = context.option('rowPadding', 1);\n        return function (ctx, d, i) {\n            // Rectangle\n            var boxdata = multiValueColumn.getboxPlotData(col.getValue(d.v, d.dataIndex));\n            // console.log(boxdata,col.getValue(d.v, d.dataIndex));\n            ctx.fillStyle = '#e0e0e0';\n            ctx.strokeStyle = 'black';\n            ctx.beginPath();\n            ctx.rect(boxdata.q1, padding, (boxdata.q3 - boxdata.q1), context.rowHeight(i) - padding);\n            ctx.fill();\n            ctx.stroke();\n            //Line\n            var left = boxdata.min, right = boxdata.max, center = boxdata.median;\n            var bottom = Math.max(context.rowHeight(i) - padding, 0);\n            var middle = (bottom - padding) / 2;\n            ctx.strokeStyle = 'black';\n            ctx.fillStyle = '#e0e0e0';\n            ctx.beginPath();\n            ctx.moveTo(left, middle);\n            ctx.lineTo(boxdata.q1, middle);\n            ctx.moveTo(left, padding);\n            ctx.lineTo(left, bottom);\n            ctx.moveTo(center, padding);\n            ctx.lineTo(center, bottom);\n            ctx.moveTo(boxdata.q3, middle);\n            ctx.lineTo(right, middle);\n            ctx.moveTo(right, padding);\n            ctx.lineTo(right, bottom);\n            ctx.stroke();\n            ctx.fill();\n        };\n    };\n    return BoxplotCellRenderer;\n}());\nvar UpsetCellRenderer = (function () {\n    function UpsetCellRenderer() {\n    }\n    UpsetCellRenderer.prototype.createSVG = function (col, context) {\n        var upsetColumn = col;\n        var celldimension = upsetColumn.cellDimension();\n        return {\n            template: \"<g class=\\\"upsetcell\\\"></g>\",\n            update: function (n, d, i) {\n                var circle = d3.select(n).selectAll('circle').data(col.getValue(d.v, d.dataIndex));\n                circle.enter().append('circle');\n                circle\n                    .attr({\n                    cy: function (d, i) { return (context.rowHeight(i) / 2); },\n                    cx: function (d, i) { return (i * celldimension) + (celldimension / 2); },\n                    r: (celldimension / 4),\n                    class: 'upsetcircle',\n                    opacity: function (d) { return (d === 1) ? 1 : 0.1; }\n                });\n                circle.exit().remove();\n                var path = d3.select(n).selectAll('path').data([col.getValue(d.v, d.dataIndex)]);\n                var countcategory = col.getValue(d.v, d.dataIndex).filter(function (x) { return x === 1; }).length;\n                if (countcategory > 1) {\n                    path.enter().append('path');\n                    path\n                        .attr('d', function (d, i) {\n                        var pathcordinate = upsetColumn.calculatePath(d);\n                        return 'M' + (pathcordinate.left) + ',' + (context.rowHeight(i) / 2) + 'L' + (pathcordinate.right) + ',' + (context.rowHeight(i) / 2);\n                    })\n                        .attr('class', 'upsetpath');\n                }\n            }\n        };\n    };\n    UpsetCellRenderer.prototype.createCanvas = function (col, context) {\n        var upsetColumn = col;\n        var celldimension = upsetColumn.cellDimension();\n        return function (ctx, d, i) {\n            // Circle\n            var data = col.getValue(d.v, d.dataIndex);\n            var countcategory = data.filter(function (x) { return x === 1; }).length;\n            var radius = (context.rowHeight(i) / 3);\n            var pathcordinate = upsetColumn.calculatePath(data);\n            if (countcategory > 1) {\n                ctx.fillStyle = 'black';\n                ctx.strokeStyle = 'black';\n                ctx.beginPath();\n                ctx.moveTo((pathcordinate.left), (context.rowHeight(i) / 2));\n                ctx.lineTo((pathcordinate.right), (context.rowHeight(i) / 2));\n                ctx.fill();\n                ctx.stroke();\n            }\n            data.forEach(function (d, i) {\n                var posy = (context.rowHeight(i) / 2);\n                var posx = (i * celldimension) + (celldimension / 2);\n                ctx.fillStyle = 'black';\n                ctx.strokeStyle = 'black';\n                ctx.beginPath();\n                ctx.globalAlpha = (d === 1) ? 1 : 0.1;\n                ctx.arc(posx, posy, radius, 0, 2 * Math.PI);\n                ctx.fill();\n                ctx.stroke();\n            });\n        };\n    };\n    return UpsetCellRenderer;\n}());\nvar CircleColumnCellRenderer = (function () {\n    function CircleColumnCellRenderer() {\n    }\n    CircleColumnCellRenderer.prototype.createSVG = function (col, context) {\n        return {\n            template: \"<g class=\\\"circlecolumncell\\\"></g>\",\n            update: function (n, d, i) {\n                var circle = d3.select(n).selectAll('circle').data([col.getValue(d.v, d.dataIndex)]);\n                circle.enter().append('circle');\n                circle\n                    .attr({\n                    cy: function (d, i) { return (context.rowHeight(i) / 2); },\n                    cx: function (d, i) { return (col.getWidth() / 2); },\n                    r: (context.rowHeight(i) / 2) * col.getValue(d.v, d.dataIndex),\n                    class: 'circlecolumn'\n                });\n            }\n        };\n    };\n    CircleColumnCellRenderer.prototype.createCanvas = function (col, context) {\n        return function (ctx, d, i) {\n            var posy = (context.rowHeight(i) / 2);\n            var posx = (col.getWidth() / 2);\n            ctx.fillStyle = 'black';\n            ctx.strokeStyle = 'black';\n            ctx.beginPath();\n            ctx.arc(posx, posy, (context.rowHeight(i) / 2) * col.getValue(d.v, d.dataIndex), 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        };\n    };\n    return CircleColumnCellRenderer;\n}());\n/**\n * a renderer rendering a bar for numerical columns\n */\nexport var BarCellRenderer = (function () {\n    function BarCellRenderer(renderValue, colorOf) {\n        if (renderValue === void 0) { renderValue = false; }\n        if (colorOf === void 0) { colorOf = function (d, i, col) { return col.color; }; }\n        this.colorOf = colorOf;\n        /**\n         * flag to always render the value\n         * @type {boolean}\n         */\n        this.renderValue = false;\n        this.renderValue = renderValue;\n    }\n    BarCellRenderer.prototype.createSVG = function (col, context) {\n        var _this = this;\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<g class=\\\"bar\\\">\\n          <rect class=\\\"\" + col.cssClass + \"\\\" y=\\\"\" + padding + \"\\\" style=\\\"fill: \" + col.color + \"\\\">\\n            <title></title>\\n          </rect>\\n          <text class=\\\"number \" + (this.renderValue ? '' : 'hoverOnly') + \"\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\\n        </g>\",\n            update: function (n, d, i) {\n                n.querySelector('rect title').textContent = col.getLabel(d.v, d.dataIndex);\n                var width = col.getWidth() * col.getValue(d.v, d.dataIndex);\n                attr(n.querySelector('rect'), {\n                    y: padding,\n                    width: isNaN(width) ? 0 : width,\n                    height: context.rowHeight(i) - padding * 2\n                }, {\n                    fill: _this.colorOf(d.v, i, col)\n                });\n                attr(n.querySelector('text'), {}).textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    };\n    BarCellRenderer.prototype.createHTML = function (col, context) {\n        var _this = this;\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<div class=\\\"bar\\\" style=\\\"top:\" + padding + \"px; background-color: \" + col.color + \"\\\">\\n          <span class=\\\"number \" + (this.renderValue ? '' : 'hoverOnly') + \"\\\"></span>\\n        </div>\",\n            update: function (n, d, i) {\n                var width = col.getWidth() * col.getValue(d.v, d.dataIndex);\n                attr(n, {\n                    title: col.getLabel(d.v, d.dataIndex)\n                }, {\n                    width: (isNaN(width) ? 0 : width) + \"px\",\n                    height: (context.rowHeight(i) - padding * 2) + \"px\",\n                    top: padding + \"px\",\n                    'background-color': _this.colorOf(d.v, i, col)\n                });\n                n.querySelector('span').textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    };\n    BarCellRenderer.prototype.createCanvas = function (col, context) {\n        var _this = this;\n        var padding = context.option('rowPadding', 1);\n        return function (ctx, d, i) {\n            ctx.fillStyle = _this.colorOf(d.v, i, col);\n            // console.log(col.getValue(d.v, d.dataIndex),d.v)\n            var width = col.getWidth() * col.getValue(d.v, d.dataIndex);\n            ctx.fillRect(padding, padding, isNaN(width) ? 0 : width, context.rowHeight(i) - padding * 2);\n            if (_this.renderValue || context.hovered(d.dataIndex) || context.selected(d.dataIndex)) {\n                ctx.fillStyle = context.option('style.text', 'black');\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 1, 0, col.getWidth() - 1, context.textHints);\n            }\n        };\n    };\n    return BarCellRenderer;\n}());\nfunction toHeatMapColor(d, index, col) {\n    var v = col.getNumber(d, index);\n    if (isNaN(v)) {\n        v = 0;\n    }\n    //hsl space encoding, encode in lightness\n    var color = hsl(col.color || Column.DEFAULT_COLOR);\n    color.l = v;\n    return color.toString();\n}\nvar heatmap = {\n    createSVG: function (col, context) {\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<rect class=\\\"heatmap \" + col.cssClass + \"\\\" y=\\\"\" + padding + \"\\\" style=\\\"fill: \" + col.color + \"\\\">\\n            <title></title>\\n          </rect>\",\n            update: function (n, d, i) {\n                n.querySelector('title').textContent = col.getLabel(d.v, d.dataIndex);\n                var w = context.rowHeight(i) - padding * 2;\n                attr(n, {\n                    y: padding,\n                    width: w,\n                    height: w\n                }, {\n                    fill: toHeatMapColor(d.v, d.dataIndex, col)\n                });\n            }\n        };\n    },\n    createHTML: function (col, context) {\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<div class=\\\"heatmap \" + col.cssClass + \"\\\" style=\\\"background-color: \" + col.color + \"; top: \" + padding + \"\\\"></div>\",\n            update: function (n, d, i) {\n                var w = context.rowHeight(i) - padding * 2;\n                attr(n, {\n                    title: col.getLabel(d.v, d.dataIndex)\n                }, {\n                    width: w + \"px\",\n                    height: w + \"px\",\n                    top: padding + \"px\",\n                    'background-color': toHeatMapColor(d.v, d.dataIndex, col)\n                });\n            }\n        };\n    },\n    createCanvas: function (col, context) {\n        var padding = context.option('rowPadding', 1);\n        return function (ctx, d, i) {\n            var w = context.rowHeight(i) - padding * 2;\n            ctx.fillStyle = toHeatMapColor(d.v, d.dataIndex, col);\n            ctx.fillRect(padding, padding, w, w);\n        };\n    }\n};\nvar action = {\n    createSVG: function (col, context) {\n        var actions = context.option('actions', []);\n        return {\n            template: \"<text class=\\\"actions hoverOnly fa\\\">\" + actions.map(function (a) { return (\"<tspan title=\\\"\" + a.name + \"\\\">\" + a.icon + \"></tspan>\"); }) + \"</text>\",\n            update: function (n, d, i) {\n                forEach(n, 'tspan', function (ni, i) {\n                    ni.onclick = function (event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        actions[i].action(d.v, d.dataIndex);\n                    };\n                });\n            }\n        };\n    },\n    createHTML: function (col, context) {\n        var actions = context.option('actions', []);\n        return {\n            template: \"<div class=\\\"actions hoverOnly\\\">\" + actions.map(function (a) { return (\"<span title=\\\"\" + a.name + \"\\\" class=\\\"fa\\\">\" + a.icon + \"></span>\"); }) + \"</div>\",\n            update: function (n, d, i) {\n                forEach(n, 'span', function (ni, i) {\n                    ni.onclick = function (event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        actions[i].action(d.v, d.dataIndex);\n                    };\n                });\n            }\n        };\n    },\n    createCanvas: function (col, context) {\n        var actions = context.option('actions', []);\n        return function (ctx, d, i, dx, dy) {\n            var hovered = context.hovered(d.dataIndex);\n            if (hovered) {\n                var overlay = showOverlay(context.idPrefix + col.id, dx, dy);\n                overlay.style.width = col.getWidth() + 'px';\n                overlay.classList.add('actions');\n                overlay.innerHTML = actions.map(function (a) { return (\"<span title=\\\"\" + a.name + \"\\\" class=\\\"fa\\\">\" + a.icon + \"</span>\"); }).join('');\n                forEach(overlay, 'span', function (ni, i) {\n                    ni.onclick = function (event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        actions[i].action(d.v, d.dataIndex);\n                    };\n                });\n            }\n        };\n    }\n};\nvar selection = {\n    createSVG: function (col) {\n        return {\n            template: \"<text class=\\\"selection fa\\\"><tspan class=\\\"selectionOnly\\\">\\uF046</tspan><tspan class=\\\"notSelectionOnly\\\">\\uF096</tspan></text>\",\n            update: function (n, d, i) {\n                n.onclick = function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    col.toggleValue(d.v, d.dataIndex);\n                };\n            }\n        };\n    },\n    createHTML: function (col) {\n        return {\n            template: \"<div class=\\\"selection fa\\\"></div>\",\n            update: function (n, d, i) {\n                n.onclick = function (event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    col.toggleValue(d.v, d.dataIndex);\n                };\n            }\n        };\n    },\n    createCanvas: function (col, context) {\n        return function (ctx, d, i) {\n            var bak = ctx.font;\n            ctx.font = '10pt FontAwesome';\n            clipText(ctx, col.getValue(d.v, d.dataIndex) ? '\\uf046' : '\\uf096', 0, 0, col.getWidth(), context.textHints);\n            ctx.font = bak;\n        };\n    }\n};\nvar annotate = {\n    createSVG: function (col, context) {\n        return {\n            template: \"<g class=\\\"annotations\\\">\\n        <text class=\\\"notHoverOnly text\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\\n        <foreignObject class=\\\"hoverOnly\\\" x=\\\"-2\\\", y=\\\"-2\\\">\\n          <input type=\\\"text\\\">\\n        </foreignObject>\\n       </g>\",\n            update: function (n, d, i) {\n                var input = n.querySelector('foreignObject *');\n                input.onchange = function (event) {\n                    col.setValue(d.v, d.dataIndex, this.value);\n                };\n                input.onclick = function (event) {\n                    event.stopPropagation();\n                };\n                input.style.width = col.getWidth() + 'px';\n                input.value = col.getLabel(d.v, d.dataIndex);\n                n.querySelector('text').textContent = col.getLabel(d.v, d.dataIndex);\n                var f = n.querySelector('foreignObject');\n                f.setAttribute('width', String(col.getWidth()));\n                f.setAttribute('height', String(context.rowHeight(i)));\n            }\n        };\n    },\n    createHTML: function (col) {\n        return {\n            template: \"<div class=\\\"annotations text\\\">\\n        <input type=\\\"text\\\" class=\\\"hoverOnly\\\">\\n        <span class=\\\"text notHoverOnly\\\"></span>\\n       </div>\",\n            update: function (n, d, i) {\n                var input = n.querySelector('input');\n                input.onchange = function (event) {\n                    col.setValue(d.v, d.dataIndex, this.value);\n                };\n                input.onclick = function (event) {\n                    event.stopPropagation();\n                };\n                n.style.width = input.style.width = col.getWidth() + 'px';\n                input.value = col.getLabel(d.v, d.dataIndex);\n                n.querySelector('span').textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    },\n    createCanvas: function (col, context) {\n        return function (ctx, d, i, dx, dy) {\n            var hovered = context.hovered(d.dataIndex);\n            if (hovered) {\n                var overlay = showOverlay(context.idPrefix + col.id, dx, dy);\n                overlay.style.width = col.getWidth() + 'px';\n                overlay.innerHTML = \"<input type=\\\"text\\\" value=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" style=\\\"width:\" + col.getWidth() + \"px\\\">\";\n                var input = overlay.childNodes[0];\n                input.onchange = function (event) {\n                    col.setValue(d.v, d.dataIndex, this.value);\n                };\n                input.onclick = function (event) {\n                    event.stopPropagation();\n                };\n            }\n            else {\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 0, 0, col.getWidth(), context.textHints);\n            }\n        };\n    }\n};\nfunction showOverlay(id, dx, dy) {\n    var overlay = document.querySelector(\"div.lu-overlay#O\" + id);\n    if (!overlay) {\n        overlay = document.createElement('div');\n        overlay.classList.add('lu-overlay');\n        overlay.id = 'O' + id;\n        document.querySelector('.lu-body').appendChild(overlay);\n    }\n    overlay.style.display = 'block';\n    overlay.style.left = dx + 'px';\n    overlay.style.top = dy + 'px';\n    return overlay;\n}\nexport function hideOverlays() {\n    forEach(document.querySelector('div.lu-body'), 'div.lu-overlay', function (d) { return d.style.display = null; });\n}\nvar link = {\n    createSVG: function (col, context) {\n        return {\n            template: \"<text class=\\\"link text\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\",\n            update: function (n, d, i) {\n                n.innerHTML = col.isLink(d.v, d.dataIndex) ? \"<a class=\\\"link\\\" xlink:href=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d.v, d.dataIndex) + \"</a>\" : col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    },\n    createHTML: function (col) {\n        return {\n            template: \"<div class=\\\"link text\\\"></div>\",\n            update: function (n, d, i) {\n                n.style.width = col.getWidth() + 'px';\n                n.innerHTML = col.isLink(d.v, d.dataIndex) ? \"<a class=\\\"link\\\" href=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d.v, d.dataIndex) + \"</a>\" : col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    },\n    createCanvas: function (col, context) {\n        return function (ctx, d, i, dx, dy) {\n            var isLink = col.isLink(d.v, d.dataIndex);\n            if (!isLink) {\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 0, 0, col.getWidth(), context.textHints);\n                return;\n            }\n            var hovered = context.hovered(d.dataIndex);\n            if (hovered) {\n                var overlay = showOverlay(context.idPrefix + col.id, dx, dy);\n                overlay.style.width = col.getWidth() + 'px';\n                overlay.innerHTML = \"<a class=\\\"link\\\" href=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d.v, d.dataIndex) + \"</a>\";\n            }\n            else {\n                var bak = ctx.fillStyle;\n                ctx.fillStyle = context.option('style.link', context.option('style.text', 'black'));\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 0, 0, col.getWidth(), context.textHints);\n                ctx.fillStyle = bak;\n            }\n        };\n    }\n};\n/**\n * renders a string with additional alignment behavior\n * one instance factory shared among strings\n */\nvar StringCellRenderer = (function () {\n    function StringCellRenderer() {\n        this.alignments = {\n            left: new DefaultCellRenderer(),\n            right: new DefaultCellRenderer('text_right', 'right'),\n            center: new DefaultCellRenderer('text_center', 'center')\n        };\n    }\n    StringCellRenderer.prototype.createSVG = function (col, context) {\n        return this.alignments[col.alignment].createSVG(col, context);\n    };\n    StringCellRenderer.prototype.createHTML = function (col, context) {\n        return this.alignments[col.alignment].createHTML(col, context);\n    };\n    StringCellRenderer.prototype.createCanvas = function (col, context) {\n        return this.alignments[col.alignment].createCanvas(col, context);\n    };\n    return StringCellRenderer;\n}());\n/**\n * renders categorical columns as a colored rect with label\n */\nexport var CategoricalCellRenderer = (function () {\n    function CategoricalCellRenderer(textClass) {\n        if (textClass === void 0) { textClass = 'cat'; }\n        /**\n         * class to append to the text elements\n         * @type {string}\n         */\n        this.textClass = 'cat';\n        this.textClass = textClass;\n    }\n    CategoricalCellRenderer.prototype.createSVG = function (col, context) {\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<g class=\\\"\" + this.textClass + \"\\\">\\n        <text clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\\n        <rect y=\\\"\" + padding + \"\\\"></rect>\\n      </g>\",\n            update: function (n, d, i) {\n                var cell = Math.max(context.rowHeight(i) - padding * 2, 0);\n                attr(n.querySelector('rect'), {\n                    width: cell,\n                    height: cell\n                }, {\n                    fill: col.getColor(d.v, d.dataIndex)\n                });\n                attr(n.querySelector('text'), {\n                    x: context.rowHeight(i)\n                }).textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    };\n    CategoricalCellRenderer.prototype.createHTML = function (col, context) {\n        var padding = context.option('rowPadding', 1);\n        return {\n            template: \"<div class=\\\"\" + this.textClass + \"\\\">\\n        <div></div>\\n        <span></span>\\n      </div>\",\n            update: function (n, d, i) {\n                var cell = Math.max(context.rowHeight(i) - padding * 2, 0);\n                attr(n, {}, {\n                    width: col.getWidth() + \"px\"\n                });\n                attr(n.querySelector('div'), {}, {\n                    width: cell + 'px',\n                    height: cell + 'px',\n                    'background-color': col.getColor(d.v, d.dataIndex)\n                });\n                attr(n.querySelector('span'), {}).textContent = col.getLabel(d.v, d.dataIndex);\n            }\n        };\n    };\n    CategoricalCellRenderer.prototype.createCanvas = function (col, context) {\n        var padding = context.option('rowPadding', 1);\n        return function (ctx, d, i) {\n            var cell = Math.max(context.rowHeight(i) - padding * 2, 0);\n            ctx.fillStyle = col.getColor(d.v, d.dataIndex);\n            ctx.fillRect(0, 0, cell, cell);\n            ctx.fillStyle = context.option('style.text', 'black');\n            clipText(ctx, col.getLabel(d.v, d.dataIndex), cell + 2, 0, col.getWidth() - cell - 2, context.textHints);\n        };\n    };\n    ;\n    return CategoricalCellRenderer;\n}());\n/**\n * machtes the columns and the dom nodes representing them\n * @param node\n * @param columns\n * @param helperType\n */\nexport function matchColumns(node, columns, helperType) {\n    if (helperType === void 0) { helperType = 'svg'; }\n    if (node.childElementCount === 0) {\n        // initial call fast method\n        node.innerHTML = columns.map(function (c) { return c.renderer.template; }).join('');\n        columns.forEach(function (col, i) {\n            var cnode = node.childNodes[i];\n            // set attribute for finding again\n            cnode.setAttribute('data-column-id', col.column.id);\n            // store current renderer\n            cnode.setAttribute('data-renderer', col.column.rendererType());\n        });\n        return;\n    }\n    function matches(c, i) {\n        //do both match?\n        var n = (node.childElementCount <= i ? null : node.childNodes[i]);\n        return n != null && n.getAttribute('data-column-id') === c.column.id && n.getAttribute('data-renderer') === c.column.rendererType();\n    }\n    if (columns.every(matches)) {\n        return; //nothing to do\n    }\n    var idsAndRenderer = new Set(columns.map(function (c) { return c.column.id + '@' + c.column.rendererType(); }));\n    //remove all that are not existing anymore\n    Array.prototype.slice.call(node.childNodes).forEach(function (n) {\n        var id = n.getAttribute('data-column-id');\n        var renderer = n.getAttribute('data-renderer');\n        var idAndRenderer = id + '@' + renderer;\n        if (!idsAndRenderer.has(idAndRenderer)) {\n            node.removeChild(n);\n        }\n    });\n    var helper = helperType === 'svg' ? document.createElementNS('http://www.w3.org/2000/svg', 'g') : document.createElement('div');\n    columns.forEach(function (col) {\n        var cnode = node.querySelector(\"[data-column-id=\\\"\" + col.column.id + \"\\\"]\");\n        if (!cnode) {\n            //create one\n            helper.innerHTML = col.renderer.template;\n            cnode = helper.childNodes[0];\n            cnode.setAttribute('data-column-id', col.column.id);\n            cnode.setAttribute('data-renderer', col.column.rendererType());\n        }\n        node.appendChild(cnode);\n    });\n}\n/**\n * renders a stacked column using composite pattern\n */\nvar StackCellRenderer = (function () {\n    function StackCellRenderer(nestingPossible) {\n        if (nestingPossible === void 0) { nestingPossible = true; }\n        this.nestingPossible = nestingPossible;\n    }\n    StackCellRenderer.prototype.createData = function (col, context) {\n        var stacked = this.nestingPossible && context.option('stacked', true);\n        var padding = context.option('columnPadding', 0);\n        var offset = 0;\n        return col.children.map(function (d) {\n            var shift = offset;\n            offset += d.getWidth();\n            offset += (!stacked ? padding : 0);\n            return {\n                column: d,\n                shift: shift,\n                stacked: stacked,\n                renderer: context.renderer(d)\n            };\n        });\n    };\n    StackCellRenderer.prototype.createSVG = function (col, context) {\n        var cols = this.createData(col, context);\n        return {\n            template: \"<g class=\\\"stack component\" + context.option('stackLevel', 0) + \"\\\">\" + cols.map(function (d) { return d.renderer.template; }).join('') + \"</g>\",\n            update: function (n, d, i) {\n                var stackShift = 0;\n                matchColumns(n, cols);\n                cols.forEach(function (col, ci) {\n                    var cnode = n.childNodes[ci];\n                    cnode.setAttribute('transform', \"translate(\" + (col.shift - stackShift) + \",0)\");\n                    col.renderer.update(cnode, d, i);\n                    if (col.stacked) {\n                        stackShift += col.column.getWidth() * (1 - col.column.getValue(d.v, d.dataIndex));\n                    }\n                });\n            }\n        };\n    };\n    StackCellRenderer.prototype.createHTML = function (col, context) {\n        var cols = this.createData(col, context);\n        return {\n            template: \"<div class=\\\"stack component\" + context.option('stackLevel', 0) + \"\\\">\" + cols.map(function (d) { return d.renderer.template; }).join('') + \"</div>\",\n            update: function (n, d, i) {\n                var stackShift = 0;\n                matchColumns(n, cols, 'html');\n                cols.forEach(function (col, ci) {\n                    var cnode = n.childNodes[ci];\n                    cnode.style.transform = \"translate(\" + (col.shift - stackShift) + \"px,0)\";\n                    col.renderer.update(cnode, d, i);\n                    if (col.stacked) {\n                        stackShift += col.column.getWidth() * (1 - col.column.getValue(d.v, d.dataIndex));\n                    }\n                });\n            }\n        };\n    };\n    StackCellRenderer.prototype.createCanvas = function (col, context) {\n        var cols = this.createData(col, context);\n        return function (ctx, d, i, dx, dy) {\n            var stackShift = 0;\n            cols.forEach(function (col, ci) {\n                var shift = 0;\n                ctx.translate(shift = col.shift - stackShift, 0);\n                col.renderer(ctx, d, i, dx + shift, dy);\n                ctx.translate(-(col.shift - stackShift), 0);\n                if (col.stacked) {\n                    stackShift += col.column.getWidth() * (1 - col.column.getValue(d.v, d.dataIndex));\n                }\n            });\n        };\n    };\n    return StackCellRenderer;\n}());\nexport var defaultCellRenderer = new DefaultCellRenderer();\nvar combineCellRenderer = new BarCellRenderer(false, function (d, i, col) { return col.getColor(d); });\n/**\n * default render factories\n */\nexport var renderers = {\n    rank: new DefaultCellRenderer('rank', 'right'),\n    boolean: new DefaultCellRenderer('boolean', 'center'),\n    number: new BarCellRenderer(),\n    ordinal: new BarCellRenderer(true, function (d, i, col) { return col.getColor(d); }),\n    string: new StringCellRenderer(),\n    selection: selection,\n    heatmap: heatmap,\n    link: link,\n    annotate: annotate,\n    actions: action,\n    stack: new StackCellRenderer(),\n    nested: new StackCellRenderer(false),\n    categorical: new CategoricalCellRenderer(),\n    max: combineCellRenderer,\n    min: combineCellRenderer,\n    mean: combineCellRenderer,\n    script: combineCellRenderer,\n    heatmapcustom: new HeatmapCellRenderer(),\n    threshold: new ThresholdCellRenderer(),\n    sparkline: new SparklineCellRenderer(),\n    verticalbar: new VerticalBarCellRenderer(),\n    boxplot: new BoxplotCellRenderer(),\n    upset: new UpsetCellRenderer(),\n    circle: new CircleColumnCellRenderer()\n};\nfunction chooseRenderer(col, renderers) {\n    var r = renderers[col.rendererType()];\n    return r || defaultCellRenderer;\n}\nexport function createSVG(col, renderers, context) {\n    var r = chooseRenderer(col, renderers);\n    return (r.createSVG ? r.createSVG.bind(r) : defaultCellRenderer.createSVG.bind(r))(col, context);\n}\nexport function createHTML(col, renderers, context) {\n    var r = chooseRenderer(col, renderers);\n    return (r.createHTML ? r.createHTML.bind(r) : defaultCellRenderer.createHTML.bind(r))(col, context);\n}\nexport function createCanvas(col, renderers, context) {\n    var r = chooseRenderer(col, renderers);\n    return (r.createCanvas ? r.createCanvas.bind(r) : defaultCellRenderer.createCanvas.bind(r))(col, context);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/renderer.ts\n// module id = 6\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isSupportType, models, createActionDesc, isNumberColumn, createStackDesc, createRankDesc, createSelectionDesc } from '../model';\nimport Ranking from '../model/Ranking';\nimport RankColumn from '../model/RankColumn';\nimport { merge, AEventDispatcher, delayedCall } from '../utils';\n/**\n * a basic data provider holding the data and rankings\n */\nvar ADataProvider = (function (_super) {\n    __extends(ADataProvider, _super);\n    function ADataProvider(options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        _super.call(this);\n        /**\n         * all rankings\n         * @type {Array}\n         * @private\n         */\n        this.rankings_ = [];\n        /**\n         * the current selected indices\n         * @type {Set}\n         */\n        this.selection = new Set();\n        this.uid = 0;\n        /**\n         * lookup map of a column type to its column implementation\n         */\n        this.columnTypes = merge({}, models());\n        this.multiSelections = true;\n        this.createHelper = function (d) {\n            //factory method for restoring a column\n            var desc = _this.fromDescRef(d.desc);\n            var c = null;\n            if (desc && desc.type) {\n                _this.fixDesc(d.desc);\n                var type = _this.columnTypes[desc.type];\n                c = new type(d.id, desc);\n                c.restore(d, _this.createHelper);\n            }\n            return c;\n        };\n        this.columnTypes = merge(models(), options.columnTypes || {});\n        this.multiSelections = options.multiSelection !== false;\n    }\n    /**\n     * events:\n     *  * column changes: addColumn, removeColumn\n     *  * ranking changes: addRanking, removeRanking\n     *  * dirty: dirty, dirtyHeder, dirtyValues\n     *  * selectionChanged\n     * @returns {string[]}\n     */\n    ADataProvider.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([\n            ADataProvider.EVENT_ADD_COLUMN, ADataProvider.EVENT_REMOVE_COLUMN,\n            ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_REMOVE_RANKING,\n            ADataProvider.EVENT_DIRTY, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES,\n            ADataProvider.EVENT_ORDER_CHANGED, ADataProvider.EVENT_SELECTION_CHANGED, ADataProvider.EVENT_ADD_DESC,\n            ADataProvider.EVENT_JUMP_TO_NEAREST]);\n    };\n    /**\n     * adds a new ranking\n     * @param existing an optional existing ranking to clone\n     * @return the new ranking\n     */\n    ADataProvider.prototype.pushRanking = function (existing) {\n        var r = this.cloneRanking(existing);\n        this.insertRanking(r);\n        return r;\n    };\n    ADataProvider.prototype.takeSnapshot = function (col) {\n        var r = this.cloneRanking();\n        r.push(this.clone(col));\n        this.insertRanking(r);\n        return r;\n    };\n    ADataProvider.prototype.insertRanking = function (r, index) {\n        if (index === void 0) { index = this.rankings_.length; }\n        this.rankings_.splice(index, 0, r);\n        this.forward(r, Ranking.EVENT_ADD_COLUMN + '.provider', Ranking.EVENT_REMOVE_COLUMN + '.provider', Ranking.EVENT_DIRTY + '.provider', Ranking.EVENT_DIRTY_HEADER + '.provider', Ranking.EVENT_ORDER_CHANGED + '.provider', Ranking.EVENT_DIRTY_VALUES + '.provider');\n        var that = this;\n        //delayed reordering per ranking\n        r.on(Ranking.EVENT_DIRTY_ORDER + '.provider', delayedCall(function () {\n            that.triggerReorder(this.source);\n        }, 100, null));\n        this.fire([ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], r, index);\n        this.triggerReorder(r);\n    };\n    ADataProvider.prototype.triggerReorder = function (ranking) {\n        this.sort(ranking).then(function (order) { return ranking.setOrder(order); });\n    };\n    /**\n     * removes a ranking from this data provider\n     * @param ranking\n     * @returns {boolean}\n     */\n    ADataProvider.prototype.removeRanking = function (ranking) {\n        var i = this.rankings_.indexOf(ranking);\n        if (i < 0) {\n            return false;\n        }\n        this.unforward(ranking, Ranking.EVENT_ADD_COLUMN + '.provider', Ranking.EVENT_REMOVE_COLUMN + '.provider', Ranking.EVENT_DIRTY + '.provider', Ranking.EVENT_DIRTY_HEADER + '.provider', Ranking.EVENT_ORDER_CHANGED + '.provider', Ranking.EVENT_DIRTY_VALUES + '.provider');\n        this.rankings_.splice(i, 1);\n        ranking.on(Ranking.EVENT_DIRTY_ORDER + '.provider', null);\n        this.cleanUpRanking(ranking);\n        this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, i);\n        return true;\n    };\n    /**\n     * removes all rankings\n     */\n    ADataProvider.prototype.clearRankings = function () {\n        var _this = this;\n        this.rankings_.forEach(function (ranking) {\n            _this.unforward(ranking, Ranking.EVENT_ADD_COLUMN + '.provider', Ranking.EVENT_REMOVE_COLUMN + '.provider', Ranking.EVENT_DIRTY + '.provider', Ranking.EVENT_DIRTY_HEADER + '.provider', Ranking.EVENT_ORDER_CHANGED + '.provider', Ranking.EVENT_DIRTY_VALUES + '.provider');\n            ranking.on(Ranking.EVENT_DIRTY_ORDER + '.provider', null);\n            _this.cleanUpRanking(ranking);\n        });\n        this.rankings_ = [];\n        this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], null);\n    };\n    /**\n     * returns a list of all current rankings\n     * @returns {Ranking[]}\n     */\n    ADataProvider.prototype.getRankings = function () {\n        return this.rankings_.slice();\n    };\n    /**\n     * returns the last ranking for quicker access\n     * @returns {Ranking}\n     */\n    ADataProvider.prototype.getLastRanking = function () {\n        return this.rankings_[this.rankings_.length - 1];\n    };\n    /**\n     * hook method for cleaning up a ranking\n     * @param ranking\n     */\n    ADataProvider.prototype.cleanUpRanking = function (ranking) {\n        //nothing to do\n    };\n    /**\n     * adds a column to a ranking described by its column description\n     * @param ranking the ranking to add the column to\n     * @param desc the description of the column\n     * @return {Column} the newly created column or null\n     */\n    ADataProvider.prototype.push = function (ranking, desc) {\n        var r = this.create(desc);\n        if (r) {\n            ranking.push(r);\n            return r;\n        }\n        return null;\n    };\n    /**\n     * adds a column to a ranking described by its column description\n     * @param ranking the ranking to add the column to\n     * @param index the position to insert the column\n     * @param desc the description of the column\n     * @return {Column} the newly created column or null\n     */\n    ADataProvider.prototype.insert = function (ranking, index, desc) {\n        var r = this.create(desc);\n        if (r) {\n            ranking.insert(r, index);\n            return r;\n        }\n        return null;\n    };\n    /**\n     * creates a new unique id for a column\n     * @returns {string}\n     */\n    ADataProvider.prototype.nextId = function () {\n        return 'col' + (this.uid++);\n    };\n    ADataProvider.prototype.fixDesc = function (desc) {\n        var _this = this;\n        //hacks for provider dependent descriptors\n        if (desc.type === 'rank') {\n            desc.accessor = this.rankAccessor.bind(this);\n        }\n        else if (desc.type === 'selection') {\n            desc.accessor = function (row, index) { return _this.isSelected(index); };\n            desc.setter = function (row, index, value) { return value ? _this.select(index) : _this.deselect(index); };\n        }\n    };\n    /**\n     * creates an internal column model out of the given column description\n     * @param desc\n     * @returns {Column] the new column or null if it can't be created\n     */\n    ADataProvider.prototype.create = function (desc) {\n        this.fixDesc(desc);\n        //find by type and instantiate\n        var type = this.columnTypes[desc.type];\n        if (type) {\n            return new type(this.nextId(), desc);\n        }\n        return null;\n    };\n    /**\n     * clones a column by dumping and restoring\n     * @param col\n     * @returns {Column}\n     */\n    ADataProvider.prototype.clone = function (col) {\n        var dump = this.dumpColumn(col);\n        return this.restoreColumn(dump);\n    };\n    /**\n     * restores a column from a dump\n     * @param dump\n     * @returns {Column}\n     */\n    ADataProvider.prototype.restoreColumn = function (dump) {\n        var _this = this;\n        var create = function (d) {\n            var desc = _this.fromDescRef(d.desc);\n            var type = _this.columnTypes[desc.type];\n            _this.fixDesc(desc);\n            var c = new type('', desc);\n            c.restore(d, create);\n            c.assignNewId(_this.nextId.bind(_this));\n            return c;\n        };\n        return create(dump);\n    };\n    /**\n     * finds a column in all rankings returning the first match\n     * @param id_or_filter by id or by a filter function\n     * @returns {Column}\n     */\n    ADataProvider.prototype.find = function (id_or_filter) {\n        //convert to function\n        var filter = typeof (id_or_filter) === 'string' ? function (col) { return col.id === id_or_filter; } : id_or_filter;\n        for (var i = 0; i < this.rankings_.length; ++i) {\n            var r = this.rankings_[i].find(filter);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    };\n    /**\n     * dumps this whole provider including selection and the rankings\n     * @returns {{uid: number, selection: number[], rankings: *[]}}\n     */\n    ADataProvider.prototype.dump = function () {\n        var _this = this;\n        return {\n            uid: this.uid,\n            selection: this.getSelection(),\n            rankings: this.rankings_.map(function (r) { return r.dump(_this.toDescRef); })\n        };\n    };\n    /**\n     * dumps a specific column\n     * @param col\n     * @returns {any}\n     */\n    ADataProvider.prototype.dumpColumn = function (col) {\n        return col.dump(this.toDescRef);\n    };\n    /**\n     * for better dumping describe reference, by default just return the description\n     * @param desc\n     * @returns {any}\n     */\n    ADataProvider.prototype.toDescRef = function (desc) {\n        return desc;\n    };\n    /**\n     * inverse operation of toDescRef\n     * @param descRef\n     * @returns {any}\n     */\n    ADataProvider.prototype.fromDescRef = function (descRef) {\n        return descRef;\n    };\n    ADataProvider.prototype.restoreRanking = function (dump) {\n        var ranking = this.cloneRanking();\n        ranking.restore(dump, this.createHelper);\n        //if no rank column add one\n        if (!ranking.children.some(function (d) { return d instanceof RankColumn; })) {\n            ranking.insert(this.create(createRankDesc()), 0);\n        }\n        var idGenerator = this.nextId.bind(this);\n        ranking.children.forEach(function (c) { return c.assignNewId(idGenerator); });\n        return ranking;\n    };\n    ADataProvider.prototype.restore = function (dump) {\n        var _this = this;\n        //clean old\n        this.clearRankings();\n        //restore selection\n        this.uid = dump.uid || 0;\n        if (dump.selection) {\n            dump.selection.forEach(function (s) { return _this.selection.add(s); });\n        }\n        //restore rankings\n        if (dump.rankings) {\n            dump.rankings.forEach(function (r) {\n                var ranking = _this.cloneRanking();\n                ranking.restore(r, _this.createHelper);\n                //if no rank column add one\n                if (!ranking.children.some(function (d) { return d instanceof RankColumn; })) {\n                    ranking.insert(_this.create(createRankDesc()), 0);\n                }\n                _this.insertRanking(ranking);\n            });\n        }\n        if (dump.layout) {\n            Object.keys(dump.layout).forEach(function (key) {\n                _this.deriveRanking(dump.layout[key]);\n            });\n        }\n        //assign new ids\n        var idGenerator = this.nextId.bind(this);\n        this.rankings_.forEach(function (r) {\n            r.children.forEach(function (c) { return c.assignNewId(idGenerator); });\n        });\n    };\n    /**\n     * generates a default ranking by using all column descriptions ones\n     */\n    ADataProvider.prototype.deriveDefault = function () {\n        var _this = this;\n        if (this.rankings_.length > 0) {\n            //no default if we have a ranking\n            return;\n        }\n        var r = this.pushRanking();\n        this.getColumns().forEach(function (col) {\n            if (!isSupportType(col)) {\n                _this.push(r, col);\n            }\n        });\n    };\n    /**\n     * derives a ranking from an old layout bundle format\n     * @param bundle\n     */\n    ADataProvider.prototype.deriveRanking = function (bundle) {\n        var _this = this;\n        var ranking = this.cloneRanking();\n        ranking.clear();\n        var toCol = function (column) {\n            if (column.type === 'rank') {\n                return _this.create(createRankDesc());\n            }\n            if (column.type === 'selection') {\n                return _this.create(createSelectionDesc());\n            }\n            if (column.type === 'actions') {\n                var r = _this.create(createActionDesc(column.label || 'actions'));\n                r.restore(column, null);\n                return r;\n            }\n            if (column.type === 'stacked') {\n                //create a stacked one\n                var r_1 = _this.create(createStackDesc(column.label || 'Combined'));\n                (column.children || []).forEach(function (col) {\n                    var c = toCol(col);\n                    if (c) {\n                        r_1.push(c);\n                    }\n                });\n                return r_1;\n            }\n            else {\n                var desc = _this.findDesc(column.column);\n                if (desc) {\n                    var r = _this.create(desc);\n                    column.label = column.label || desc.label || desc.column;\n                    r.restore(column, null);\n                    return r;\n                }\n            }\n            return null;\n        };\n        bundle.forEach(function (column) {\n            var col = toCol(column);\n            if (col) {\n                ranking.push(col);\n            }\n        });\n        //if no rank column add one\n        if (!ranking.children.some(function (d) { return d instanceof RankColumn; })) {\n            ranking.insert(this.create(createRankDesc()), 0);\n        }\n        this.insertRanking(ranking);\n        return ranking;\n    };\n    /**\n     * is the given row selected\n     * @param index\n     * @return {boolean}\n     */\n    ADataProvider.prototype.isSelected = function (index) {\n        return this.selection.has(index);\n    };\n    /**\n     * also select the given row\n     * @param index\n     */\n    ADataProvider.prototype.select = function (index) {\n        if (this.selection.has(index)) {\n            return; //no change\n        }\n        if (!this.multiSelections && this.selection.size > 0) {\n            this.selection = new Set();\n        }\n        this.selection.add(index);\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n    };\n    ADataProvider.prototype.jumpToNearest = function (indices) {\n        if (indices.length === 0) {\n            return;\n        }\n        this.fire(ADataProvider.EVENT_JUMP_TO_NEAREST, indices);\n    };\n    /**\n     * also select all the given rows\n     * @param indices\n     */\n    ADataProvider.prototype.selectAll = function (indices, jumpToSelection) {\n        var _this = this;\n        if (jumpToSelection === void 0) { jumpToSelection = false; }\n        if (indices.every(function (i) { return _this.selection.has(i); })) {\n            return; //no change\n        }\n        if (!this.multiSelections) {\n            this.selection = new Set();\n            indices = indices.slice(0, 1); //just the first one\n        }\n        indices.forEach(function (index) {\n            _this.selection.add(index);\n        });\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection(), jumpToSelection);\n    };\n    /**\n     * set the selection to the given rows\n     * @param indices\n     * @param jumpToSelection whether the first selected row should be visible\n     */\n    ADataProvider.prototype.setSelection = function (indices) {\n        var _this = this;\n        if (this.selection.size === indices.length && indices.every(function (i) { return _this.selection.has(i); })) {\n            return; //no change\n        }\n        this.selection = new Set();\n        this.selectAll(indices);\n    };\n    /**\n     * toggles the selection of the given data index\n     * @param index\n     * @param additional just this element or all\n     * @returns {boolean} whether the index is currently selected\n     */\n    ADataProvider.prototype.toggleSelection = function (index, additional) {\n        if (additional === void 0) { additional = false; }\n        if (this.isSelected(index)) {\n            if (additional) {\n                this.deselect(index);\n            }\n            else {\n                this.clearSelection();\n            }\n            return false;\n        }\n        else {\n            if (additional) {\n                this.select(index);\n            }\n            else {\n                this.setSelection([index]);\n            }\n            return true;\n        }\n    };\n    /**\n     * deselect the given row\n     * @param index\n     */\n    ADataProvider.prototype.deselect = function (index) {\n        if (!this.selection.has(index)) {\n            return; //no change\n        }\n        this.selection.delete(index);\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n    };\n    /**\n     * returns a promise containing the selected rows\n     * @return {Promise<any[]>}\n     */\n    ADataProvider.prototype.selectedRows = function () {\n        if (this.selection.size == 0) {\n            return Promise.resolve([]);\n        }\n        return this.view(this.getSelection());\n    };\n    /**\n     * returns the currently selected indices\n     * @returns {Array}\n     */\n    ADataProvider.prototype.getSelection = function () {\n        var indices = [];\n        this.selection.forEach(function (s) { return indices.push(s); });\n        indices.sort();\n        return indices;\n    };\n    /**\n     * clears the selection\n     */\n    ADataProvider.prototype.clearSelection = function () {\n        if (this.selection.size === 0) {\n            return; //no change\n        }\n        this.selection = new Set();\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, [], false);\n    };\n    /**\n     * utility to export a ranking to a table with the given separator\n     * @param ranking\n     * @param options\n     * @returns {Promise<string>}\n     */\n    ADataProvider.prototype.exportTable = function (ranking, options) {\n        if (options === void 0) { options = {}; }\n        var op = {\n            separator: '\\t',\n            newline: '\\n',\n            header: true,\n            quote: false,\n            quoteChar: '\"',\n            filter: function (c) { return !isSupportType(c); }\n        };\n        options = merge(op, options);\n        //optionally quote not numbers\n        function quote(l, c) {\n            if (op.quote && (!c || !isNumberColumn(c))) {\n                return op.quoteChar + l + op.quoteChar;\n            }\n            return l;\n        }\n        var columns = ranking.flatColumns.filter(function (c) { return op.filter(c.desc); });\n        var order = ranking.getOrder();\n        return this.view(order).then(function (data) {\n            var r = [];\n            if (op.header) {\n                r.push(columns.map(function (d) { return quote(d.label); }).join(op.separator));\n            }\n            data.forEach(function (row, i) {\n                r.push(columns.map(function (c) { return quote(c.getLabel(row, order[i]), c); }).join(op.separator));\n            });\n            return r.join(op.newline);\n        });\n    };\n    ADataProvider.EVENT_SELECTION_CHANGED = 'selectionChanged';\n    ADataProvider.EVENT_ADD_COLUMN = Ranking.EVENT_ADD_COLUMN;\n    ADataProvider.EVENT_REMOVE_COLUMN = Ranking.EVENT_REMOVE_COLUMN;\n    ADataProvider.EVENT_ADD_RANKING = 'addRanking';\n    ADataProvider.EVENT_REMOVE_RANKING = 'removeRanking';\n    ADataProvider.EVENT_DIRTY = Ranking.EVENT_DIRTY;\n    ADataProvider.EVENT_DIRTY_HEADER = Ranking.EVENT_DIRTY_HEADER;\n    ADataProvider.EVENT_DIRTY_VALUES = Ranking.EVENT_DIRTY_VALUES;\n    ADataProvider.EVENT_ORDER_CHANGED = Ranking.EVENT_ORDER_CHANGED;\n    ADataProvider.EVENT_ADD_DESC = 'addDesc';\n    ADataProvider.EVENT_JUMP_TO_NEAREST = 'jumpToNearest';\n    return ADataProvider;\n}(AEventDispatcher));\nexport default ADataProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/ADataProvider.ts\n// module id = 7\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { format } from 'd3';\nimport CompositeColumn from './CompositeColumn';\nimport NumberColumn, { isNumberColumn, numberCompare } from './NumberColumn';\n/**\n * implementation of a combine column, standard operations how to select\n */\nvar CompositeNumberColumn = (function (_super) {\n    __extends(CompositeNumberColumn, _super);\n    function CompositeNumberColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.missingValue = 0;\n        this.numberFormat = format('.3n');\n        if (desc.numberFormat) {\n            this.numberFormat = format(desc.numberFormat);\n        }\n    }\n    CompositeNumberColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.missingValue = this.missingValue;\n        return r;\n    };\n    CompositeNumberColumn.prototype.restore = function (dump, factory) {\n        if (dump.missingValue) {\n            this.missingValue = dump.missingValue;\n        }\n        if (dump.numberFormat) {\n            this.numberFormat = format(dump.numberFormat);\n        }\n        _super.prototype.restore.call(this, dump, factory);\n    };\n    /**\n     * inserts a column at a the given position\n     * @param col\n     * @param index\n     * @param weight\n     * @returns {any}\n     */\n    CompositeNumberColumn.prototype.insert = function (col, index) {\n        if (!isNumberColumn(col)) {\n            return null;\n        }\n        return _super.prototype.insert.call(this, col, index);\n    };\n    CompositeNumberColumn.prototype.getLabel = function (row, index) {\n        var v = this.getValue(row, index);\n        //keep non number if it is not a number else convert using formatter\n        return '' + (typeof v === 'number' ? this.numberFormat(v) : v);\n    };\n    CompositeNumberColumn.prototype.getValue = function (row, index) {\n        //weighted sum\n        var v = this.compute(row, index);\n        if (typeof (v) === 'undefined' || v == null || isNaN(v)) {\n            return this.missingValue;\n        }\n        return v;\n    };\n    CompositeNumberColumn.prototype.compute = function (row, index) {\n        return NaN;\n    };\n    CompositeNumberColumn.prototype.getNumber = function (row, index) {\n        return this.getValue(row, index);\n    };\n    CompositeNumberColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        return numberCompare(this.getValue(a, aIndex), this.getValue(b, bIndex));\n    };\n    CompositeNumberColumn.prototype.rendererType = function () {\n        return NumberColumn.prototype.rendererType.call(this);\n    };\n    return CompositeNumberColumn;\n}(CompositeColumn));\nexport default CompositeNumberColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CompositeNumberColumn.ts\n// module id = 8\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport CompositeNumberColumn from './CompositeNumberColumn';\nimport Column from './Column';\n/**\n * factory for creating a description creating a stacked column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'Combined'; }\n    return { type: 'stack', label: label };\n}\n/**\n * implementation of the stacked column\n */\nvar StackColumn = (function (_super) {\n    __extends(StackColumn, _super);\n    function StackColumn(id, desc) {\n        _super.call(this, id, desc);\n        /**\n         * whether this stack column is collapsed i.e. just looks like an ordinary number column\n         * @type {boolean}\n         * @private\n         */\n        this.collapsed = false;\n        var that = this;\n        this.adaptChange = function (old, new_) {\n            that.adaptWidthChange(this.source, old, new_);\n        };\n    }\n    StackColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([StackColumn.EVENT_COLLAPSE_CHANGED, StackColumn.EVENT_WEIGHTS_CHANGED]);\n    };\n    StackColumn.prototype.setCollapsed = function (value) {\n        if (this.collapsed === value) {\n            return;\n        }\n        this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\n    };\n    StackColumn.prototype.getCollapsed = function () {\n        return this.collapsed;\n    };\n    StackColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\n        if (levelsToGo === void 0) { levelsToGo = 0; }\n        if (padding === void 0) { padding = 0; }\n        var self = null;\n        var children = levelsToGo <= Column.FLAT_ALL_COLUMNS ? this._children : this._children.filter(function (c) { return !c.isHidden(); });\n        //no more levels or just this one\n        if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n            var w = this.getCompressed() ? Column.COMPRESSED_WIDTH : this.getWidth();\n            if (!this.collapsed && !this.getCompressed()) {\n                w += (children.length - 1) * padding;\n            }\n            r.push(self = { col: this, offset: offset, width: w });\n            if (levelsToGo === 0) {\n                return w;\n            }\n        }\n        //push children\n        var acc = offset;\n        children.forEach(function (c) {\n            acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\n        });\n        if (self) {\n            self.width = acc - offset - padding;\n        }\n        return acc - offset - padding;\n    };\n    StackColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.collapsed = this.collapsed;\n        return r;\n    };\n    StackColumn.prototype.restore = function (dump, factory) {\n        this.collapsed = dump.collapsed === true;\n        _super.prototype.restore.call(this, dump, factory);\n    };\n    /**\n     * inserts a column at a the given position\n     * @param col\n     * @param index\n     * @param weight\n     * @returns {any}\n     */\n    StackColumn.prototype.insert = function (col, index, weight) {\n        if (weight === void 0) { weight = NaN; }\n        if (!isNaN(weight)) {\n            col.setWidth((weight / (1 - weight) * this.getWidth()));\n        }\n        col.on(Column.EVENT_WIDTH_CHANGED + '.stack', this.adaptChange);\n        //increase my width\n        _super.prototype.setWidth.call(this, this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\n        return _super.prototype.insert.call(this, col, index);\n    };\n    StackColumn.prototype.push = function (col, weight) {\n        if (weight === void 0) { weight = NaN; }\n        return this.insert(col, this.length, weight);\n    };\n    StackColumn.prototype.insertAfter = function (col, ref, weight) {\n        if (weight === void 0) { weight = NaN; }\n        var i = this.indexOf(ref);\n        if (i < 0) {\n            return null;\n        }\n        return this.insert(col, i + 1, weight);\n    };\n    /**\n     * adapts weights according to an own width change\n     * @param col\n     * @param old\n     * @param new_\n     */\n    StackColumn.prototype.adaptWidthChange = function (col, old, new_) {\n        if (old === new_) {\n            return;\n        }\n        var bak = this.getWeights();\n        var full = this.getWidth(), change = (new_ - old) / full;\n        var oldWeight = old / full;\n        var factor = (1 - oldWeight - change) / (1 - oldWeight);\n        this._children.forEach(function (c) {\n            if (c === col) {\n            }\n            else {\n                c.setWidthImpl(c.getWidth() * factor);\n            }\n        });\n        this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getWeights());\n    };\n    StackColumn.prototype.getWeights = function () {\n        var w = this.getWidth();\n        return this._children.map(function (d) { return d.getWidth() / w; });\n    };\n    StackColumn.prototype.setWeights = function (weights) {\n        var bak = this.getWeights();\n        var s, delta = weights.length - this.length;\n        if (delta < 0) {\n            s = weights.reduce(function (p, a) { return p + a; }, 0);\n            if (s <= 1) {\n                for (var i = 0; i < -delta; ++i) {\n                    weights.push((1 - s) * (1 / -delta));\n                }\n            }\n            else if (s <= 100) {\n                for (var i = 0; i < -delta; ++i) {\n                    weights.push((100 - s) * (1 / -delta));\n                }\n            }\n        }\n        weights = weights.slice(0, this.length);\n        s = weights.reduce(function (p, a) { return p + a; }, 0) / this.getWidth();\n        weights = weights.map(function (d) { return d / s; });\n        this._children.forEach(function (c, i) {\n            c.setWidthImpl(weights[i]);\n        });\n        this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, weights);\n    };\n    StackColumn.prototype.removeImpl = function (child) {\n        child.on(Column.EVENT_WIDTH_CHANGED + '.stack', null);\n        _super.prototype.setWidth.call(this, this.length === 1 ? 100 : this.getWidth() - child.getWidth());\n        return _super.prototype.removeImpl.call(this, child);\n    };\n    StackColumn.prototype.setWidth = function (value) {\n        var factor = value / this.getWidth();\n        this._children.forEach(function (child) {\n            //disable since we change it\n            child.setWidthImpl(child.getWidth() * factor);\n        });\n        _super.prototype.setWidth.call(this, value);\n    };\n    StackColumn.prototype.compute = function (row, index) {\n        var w = this.getWidth();\n        return this._children.reduce(function (acc, d) { return acc + d.getValue(row, index) * (d.getWidth() / w); }, 0);\n    };\n    StackColumn.prototype.rendererType = function () {\n        if (this.getCollapsed()) {\n            return StackColumn.COLLAPSED_RENDERER;\n        }\n        return _super.prototype.rendererType.call(this);\n    };\n    StackColumn.EVENT_COLLAPSE_CHANGED = 'collapseChanged';\n    StackColumn.EVENT_WEIGHTS_CHANGED = 'weightsChanged';\n    StackColumn.COLLAPSED_RENDERER = 'number';\n    return StackColumn;\n}(CompositeNumberColumn));\nexport default StackColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/StackColumn.ts\n// module id = 9\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 06.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { merge } from '../utils';\nimport ValueColumn from './ValueColumn';\nimport NumberColumn from './NumberColumn';\nimport StringColumn from './StringColumn';\nimport StackColumn from './StackColumn';\nimport AnnotateColumn from './AnnotateColumn';\nimport BooleanColumn from './BooleanColumn';\nimport CategoricalColumn from './CategoricalColumn';\nimport MinColumn from './MinColumn';\nimport MaxColumn from './MaxColumn';\nimport MeanColumn from './MeanColumn';\nimport RankColumn from './RankColumn';\nimport SelectionColumn from './SelectionColumn';\nimport ScriptColumn from './ScriptColumn';\nimport CategoricalNumberColumn from './CategoricalNumberColumn';\nimport NestedColumn from './NestedColumn';\nimport DummyColumn from './DummyColumn';\nimport LinkColumn from './LinkColumn';\nimport UpsetColumn from './UpsetColumn';\nimport MultiValueColumn from './MultiValueColumn';\nexport { default as Column, IColumnDesc } from './Column';\nexport { ScaleMappingFunction, ScriptMappingFunction, isNumberColumn } from './NumberColumn';\nexport { isCategoricalColumn } from './CategoricalColumn';\nexport { default as Ranking, isSupportType } from './Ranking';\nexport { createDesc as createMinDesc } from './MinColumn';\nexport { createDesc as createMaxDesc } from './MaxColumn';\nexport { createDesc as createMeanDesc } from './MeanColumn';\nexport { createDesc as createRankDesc } from './RankColumn';\nexport { createDesc as createSelectionDesc } from './SelectionColumn';\nexport { createDesc as createScriptDesc } from './ScriptColumn';\nexport { createDesc as createNestedDesc } from './NestedColumn';\nexport { createDesc as createStackDesc } from './StackColumn';\n/**\n * defines a new column type\n * @param name\n * @param functions\n * @returns {CustomColumn}\n */\nexport function defineColumn(name, functions) {\n    if (functions === void 0) { functions = {}; }\n    var CustomColumn = (function (_super) {\n        __extends(CustomColumn, _super);\n        function CustomColumn(id, desc) {\n            _super.call(this, id, desc);\n            if (typeof (this.init) === 'function') {\n                this.init.apply(this, [].slice.apply(arguments));\n            }\n        }\n        CustomColumn.prototype.init = function () {\n            // dummy\n        };\n        return CustomColumn;\n    }(ValueColumn));\n    CustomColumn.prototype.toString = function () { return name; };\n    CustomColumn.prototype = merge(CustomColumn.prototype, functions);\n    return CustomColumn;\n}\n/**\n * utility for creating an action description with optional label\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createActionDesc(label) {\n    if (label === void 0) { label = 'actions'; }\n    return { type: 'actions', label: label };\n}\n/**\n * a map of all known column types\n */\nexport function models() {\n    return {\n        number: NumberColumn,\n        string: StringColumn,\n        link: LinkColumn,\n        stack: StackColumn,\n        rank: RankColumn,\n        boolean: BooleanColumn,\n        categorical: CategoricalColumn,\n        ordinal: CategoricalNumberColumn,\n        actions: DummyColumn,\n        annotate: AnnotateColumn,\n        selection: SelectionColumn,\n        heatmapcustom: MultiValueColumn,\n        sparkline: MultiValueColumn,\n        max: MaxColumn,\n        min: MinColumn,\n        mean: MeanColumn,\n        script: ScriptColumn,\n        nested: NestedColumn,\n        threshold: MultiValueColumn,\n        verticalbar: MultiValueColumn,\n        boxplot: MultiValueColumn,\n        upset: UpsetColumn,\n        circle: NumberColumn\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/index.ts\n// module id = 10\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ascending, scale } from 'd3';\nimport Column from './Column';\nimport ValueColumn from './ValueColumn';\nimport StringColumn from './StringColumn';\n/**\n * checks whether the given column or description is a categorical column, i.e. the value is a list of categories\n * @param col\n * @returns {boolean}\n */\nexport function isCategoricalColumn(col) {\n    return (col instanceof Column && typeof col.getCategories === 'function' || (!(col instanceof Column) && col.type.match(/(categorical|ordinal)/) != null));\n}\nfunction arrayEquals(a, b) {\n    var al = a != null ? a.length : 0;\n    var bl = b != null ? b.length : 0;\n    if (al !== bl) {\n        return false;\n    }\n    if (al === 0) {\n        return true;\n    }\n    return a.every(function (ai, i) { return ai === b[i]; });\n}\n/**\n * column for categorical values\n */\nvar CategoricalColumn = (function (_super) {\n    __extends(CategoricalColumn, _super);\n    function CategoricalColumn(id, desc) {\n        _super.call(this, id, desc);\n        /**\n         * colors for each category\n         * @type {Ordinal<string, string>}\n         */\n        this.colors = scale.category10();\n        /**\n         * category labels by default the category name itself\n         * @type {Array}\n         */\n        this.catLabels = new Map();\n        /**\n         * set of categories to show\n         * @type {null}\n         * @private\n         */\n        this.currentFilter = null;\n        /**\n         * split multiple categories\n         * @type {string}\n         */\n        this.separator = ';';\n        this.separator = desc.separator || this.separator;\n        this.initCategories(desc);\n        //TODO infer categories from data\n    }\n    CategoricalColumn.prototype.initCategories = function (desc) {\n        if (desc.categories) {\n            var cats = [], cols = this.colors.range(), labels = new Map();\n            desc.categories.forEach(function (cat, i) {\n                if (typeof cat === 'string') {\n                    //just the category value\n                    cats.push(cat);\n                }\n                else {\n                    //the name or value of the category\n                    cats.push(cat.name || cat.value);\n                    //optional label mapping\n                    if (cat.label) {\n                        labels.set(cat.name, cat.label);\n                    }\n                    //optional color\n                    if (cat.color) {\n                        cols[i] = cat.color;\n                    }\n                }\n            });\n            this.catLabels = labels;\n            this.colors.domain(cats).range(cols);\n        }\n    };\n    Object.defineProperty(CategoricalColumn.prototype, \"categories\", {\n        get: function () {\n            return this.colors.domain();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoricalColumn.prototype, \"categoryColors\", {\n        get: function () {\n            return this.colors.range();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoricalColumn.prototype, \"categoryLabels\", {\n        get: function () {\n            var _this = this;\n            //no mapping\n            if (this.catLabels === null || this.catLabels.size === 0) {\n                return this.categories;\n            }\n            //label or identity mapping\n            return this.categories.map(function (c) { return _this.catLabels.has(c) ? _this.catLabels.get(c) : c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoricalColumn.prototype.colorOf = function (cat) {\n        return this.colors(cat);\n    };\n    CategoricalColumn.prototype.getLabel = function (row, index) {\n        //no mapping\n        if (this.catLabels === null || this.catLabels.size === 0) {\n            return '' + StringColumn.prototype.getValue.call(this, row, index);\n        }\n        return this.getLabels(row, index).join(this.separator);\n    };\n    CategoricalColumn.prototype.getFirstLabel = function (row, index) {\n        var l = this.getLabels(row, index);\n        return l.length > 0 ? l[0] : null;\n    };\n    CategoricalColumn.prototype.getLabels = function (row, index) {\n        var _this = this;\n        var v = StringColumn.prototype.getValue.call(this, row, index);\n        var r = v ? v.split(this.separator) : [];\n        var mapToLabel = function (values) {\n            if (_this.catLabels === null || _this.catLabels.size === 0) {\n                return values;\n            }\n            return values.map(function (v) { return _this.catLabels.has(v) ? _this.catLabels.get(v) : v; });\n        };\n        return mapToLabel(r);\n    };\n    CategoricalColumn.prototype.getValue = function (row, index) {\n        var r = this.getValues(row, index);\n        return r.length > 0 ? r[0] : null;\n    };\n    CategoricalColumn.prototype.getValues = function (row, index) {\n        var v = StringColumn.prototype.getValue.call(this, row, index);\n        var r = v ? v.split(this.separator) : [];\n        return r;\n    };\n    CategoricalColumn.prototype.getCategories = function (row, index) {\n        return this.getValues(row, index);\n    };\n    CategoricalColumn.prototype.getColor = function (row, index) {\n        var cat = this.getValue(row, index);\n        if (cat === null || cat === '') {\n            return null;\n        }\n        return this.colors(cat);\n    };\n    CategoricalColumn.prototype.getColors = function (row, index) {\n        return this.getCategories(row, index).map(this.colors);\n    };\n    CategoricalColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.filter = this.currentFilter;\n        r.colors = {\n            domain: this.colors.domain(),\n            range: this.colors.range(),\n            separator: this.separator\n        };\n        if (this.catLabels !== null && this.catLabels.size !== 0) {\n            r.labels = this.catLabels.entries();\n        }\n        return r;\n    };\n    CategoricalColumn.prototype.restore = function (dump, factory) {\n        var _this = this;\n        _super.prototype.restore.call(this, dump, factory);\n        this.currentFilter = dump.filter || null;\n        if (dump.colors) {\n            this.colors.domain(dump.colors.domain).range(dump.colors.range);\n        }\n        if (dump.labels) {\n            this.catLabels = new Map();\n            dump.labels.forEach(function (e) { return _this.catLabels.set(e.key, e.value); });\n        }\n        this.separator = dump.separator || this.separator;\n    };\n    CategoricalColumn.prototype.isFiltered = function () {\n        return this.currentFilter != null;\n    };\n    CategoricalColumn.prototype.filter = function (row, index) {\n        if (!this.isFiltered()) {\n            return true;\n        }\n        var vs = this.getCategories(row, index), filter = this.currentFilter;\n        return vs.every(function (v) {\n            if (Array.isArray(filter) && filter.length > 0) {\n                return filter.indexOf(v) >= 0;\n            }\n            else if (typeof filter === 'string' && filter.length > 0) {\n                return v && v.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\n            }\n            else if (filter instanceof RegExp) {\n                return v != null && v.match(filter).length > 0;\n            }\n            return true;\n        });\n    };\n    CategoricalColumn.prototype.getFilter = function () {\n        return this.currentFilter;\n    };\n    CategoricalColumn.prototype.setFilter = function (filter) {\n        if (arrayEquals(this.currentFilter, filter)) {\n            return;\n        }\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n    };\n    CategoricalColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        var va = this.getValues(a, aIndex);\n        var vb = this.getValues(b, bIndex);\n        //check all categories\n        for (var i = 0; i < Math.min(va.length, vb.length); ++i) {\n            var ci = ascending(va[i], vb[i]);\n            if (ci !== 0) {\n                return ci;\n            }\n        }\n        //smaller length wins\n        return va.length - vb.length;\n    };\n    return CategoricalColumn;\n}(ValueColumn));\nexport default CategoricalColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CategoricalColumn.ts\n// module id = 11\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\nexport function isMultiLevelColumn(col) {\n    return typeof (col.getCollapsed) === 'function';\n}\n/**\n * implementation of a combine column, standard operations how to select\n */\nvar CompositeColumn = (function (_super) {\n    __extends(CompositeColumn, _super);\n    function CompositeColumn(id, desc) {\n        _super.call(this, id, desc);\n        this._children = [];\n    }\n    CompositeColumn.prototype.assignNewId = function (idGenerator) {\n        _super.prototype.assignNewId.call(this, idGenerator);\n        this._children.forEach(function (c) { return c.assignNewId(idGenerator); });\n    };\n    Object.defineProperty(CompositeColumn.prototype, \"children\", {\n        get: function () {\n            return this._children.slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompositeColumn.prototype, \"length\", {\n        get: function () {\n            return this._children.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompositeColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\n        if (levelsToGo === void 0) { levelsToGo = 0; }\n        if (padding === void 0) { padding = 0; }\n        var self = null;\n        //no more levels or just this one\n        if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n            var w = this.getCompressed() ? Column.COMPRESSED_WIDTH : this.getWidth();\n            r.push(self = { col: this, offset: offset, width: w });\n            if (levelsToGo === 0) {\n                return w;\n            }\n        }\n        //push children\n        this._children.forEach(function (c) {\n            if (!c.isHidden() || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n                c.flatten(r, offset, levelsToGo - 1, padding);\n            }\n        });\n        return w;\n    };\n    CompositeColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.children = this._children.map(function (d) { return d.dump(toDescRef); });\n        return r;\n    };\n    CompositeColumn.prototype.restore = function (dump, factory) {\n        var _this = this;\n        dump.children.map(function (child) {\n            var c = factory(child);\n            if (c) {\n                _this.push(c);\n            }\n        });\n        _super.prototype.restore.call(this, dump, factory);\n    };\n    /**\n     * inserts a column at a the given position\n     * @param col\n     * @param index\n     * @param weight\n     * @returns {any}\n     */\n    CompositeColumn.prototype.insert = function (col, index) {\n        this._children.splice(index, 0, col);\n        //listen and propagate events\n        return this.insertImpl(col, index);\n    };\n    CompositeColumn.prototype.insertImpl = function (col, index) {\n        col.parent = this;\n        this.forward(col, Column.EVENT_DIRTY_HEADER + '.combine', Column.EVENT_DIRTY_VALUES + '.combine', Column.EVENT_DIRTY + '.combine', Column.EVENT_FILTER_CHANGED + '.combine');\n        this.fire([Column.EVENT_ADD_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], col, index);\n        return col;\n    };\n    CompositeColumn.prototype.push = function (col) {\n        return this.insert(col, this._children.length);\n    };\n    CompositeColumn.prototype.at = function (index) {\n        return this._children[index];\n    };\n    CompositeColumn.prototype.indexOf = function (col) {\n        return this._children.indexOf(col);\n    };\n    CompositeColumn.prototype.insertAfter = function (col, ref) {\n        var i = this.indexOf(ref);\n        if (i < 0) {\n            return null;\n        }\n        return this.insert(col, i + 1);\n    };\n    CompositeColumn.prototype.remove = function (child) {\n        var i = this._children.indexOf(child);\n        if (i < 0) {\n            return false;\n        }\n        this._children.splice(i, 1); //remove and deregister listeners\n        return this.removeImpl(child);\n    };\n    CompositeColumn.prototype.removeImpl = function (child) {\n        child.parent = null;\n        this.unforward(child, Column.EVENT_DIRTY_HEADER + '.combine', Column.EVENT_DIRTY_VALUES + '.combine', Column.EVENT_DIRTY + '.combine', Column.EVENT_FILTER_CHANGED + '.combine');\n        this.fire([Column.EVENT_REMOVE_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], child);\n        return true;\n    };\n    CompositeColumn.prototype.getColor = function (row, index) {\n        return this.color;\n    };\n    CompositeColumn.prototype.isFiltered = function () {\n        return this._children.some(function (d) { return d.isFiltered(); });\n    };\n    CompositeColumn.prototype.filter = function (row, index) {\n        return this._children.every(function (d) { return d.filter(row, index); });\n    };\n    return CompositeColumn;\n}(Column));\nexport default CompositeColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CompositeColumn.ts\n// module id = 12\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport ValueColumn from './ValueColumn';\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'Rank'; }\n    return { type: 'rank', label: label };\n}\n/**\n * a rank column\n */\nvar RankColumn = (function (_super) {\n    __extends(RankColumn, _super);\n    function RankColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.setWidthImpl(50);\n    }\n    return RankColumn;\n}(ValueColumn));\nexport default RankColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/RankColumn.ts\n// module id = 13\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 06.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column, { fixCSS } from './Column';\nimport StringColumn from './StringColumn';\nimport StackColumn from './StackColumn';\nimport { AEventDispatcher } from '../utils';\nexport function isSupportType(col) {\n    return ['rank', 'selection', 'actions'].indexOf(col.type) >= 0;\n}\n/**\n * a ranking\n */\nvar Ranking = (function (_super) {\n    __extends(Ranking, _super);\n    function Ranking(id) {\n        var _this = this;\n        _super.call(this);\n        this.id = id;\n        /**\n         * the current sort criteria\n         * @type {null}\n         * @private\n         */\n        this.sortColumn = null;\n        /**\n         * ascending or descending order\n         * @type {boolean}\n         */\n        this.ascending = false;\n        /**\n         * columns of this ranking\n         * @type {Array}\n         * @private\n         */\n        this.columns = [];\n        this.comparator = function (a, b, aIndex, bIndex) {\n            if (_this.sortColumn === null) {\n                return 0;\n            }\n            var r = _this.sortColumn.compare(a, b, aIndex, bIndex);\n            return _this.ascending ? r : -r;\n        };\n        this.dirtyOrder = function () {\n            _this.fire([Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], _this.getSortCriteria());\n        };\n        /**\n         * the current ordering as an sorted array of indices\n         * @type {Array}\n         */\n        this.order = [];\n        this.id = fixCSS(id);\n    }\n    Ranking.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([\n            Ranking.EVENT_WIDTH_CHANGED, Ranking.EVENT_FILTER_CHANGED,\n            Ranking.EVENT_LABEL_CHANGED, Ranking.EVENT_COMPRESS_CHANGED,\n            Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN,\n            Ranking.EVENT_DIRTY, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES,\n            Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_ORDER_CHANGED]);\n    };\n    Ranking.prototype.assignNewId = function (idGenerator) {\n        this.id = fixCSS(idGenerator());\n        this.columns.forEach(function (c) { return c.assignNewId(idGenerator); });\n    };\n    Ranking.prototype.setOrder = function (order) {\n        this.fire([Ranking.EVENT_ORDER_CHANGED, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], this.order, this.order = order);\n    };\n    Ranking.prototype.getOrder = function () {\n        return this.order;\n    };\n    Ranking.prototype.dump = function (toDescRef) {\n        var r = {};\n        r.columns = this.columns.map(function (d) { return d.dump(toDescRef); });\n        r.sortColumn = {\n            asc: this.ascending\n        };\n        if (this.sortColumn) {\n            r.sortColumn.sortBy = this.sortColumn.id; //store the index not the object\n        }\n        return r;\n    };\n    Ranking.prototype.restore = function (dump, factory) {\n        var _this = this;\n        this.clear();\n        dump.columns.map(function (child) {\n            var c = factory(child);\n            if (c) {\n                _this.push(c);\n            }\n        });\n        if (dump.sortColumn) {\n            this.ascending = dump.sortColumn.asc;\n            if (dump.sortColumn.sortBy) {\n                var help = this.columns.filter(function (d) { return d.id === dump.sortColumn.sortBy; });\n                this.sortBy(help.length === 0 ? null : help[0], dump.sortColumn.asc);\n            }\n        }\n    };\n    Ranking.prototype.flatten = function (r, offset, levelsToGo, padding) {\n        if (levelsToGo === void 0) { levelsToGo = 0; }\n        if (padding === void 0) { padding = 0; }\n        var acc = offset; // + this.getWidth() + padding;\n        if (levelsToGo > 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n            this.columns.forEach(function (c) {\n                if (!c.isHidden() || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n                    acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\n                }\n            });\n        }\n        return acc - offset;\n    };\n    Ranking.prototype.getSortCriteria = function () {\n        return {\n            col: this.sortColumn,\n            asc: this.ascending\n        };\n    };\n    Ranking.prototype.toggleSorting = function (col) {\n        if (this.sortColumn === col) {\n            return this.sortBy(col, !this.ascending);\n        }\n        return this.sortBy(col);\n    };\n    Ranking.prototype.setSortCriteria = function (value) {\n        return this.sortBy(value.col, value.asc);\n    };\n    Ranking.prototype.sortBy = function (col, ascending) {\n        if (ascending === void 0) { ascending = false; }\n        if (col !== null && col.findMyRanker() !== this) {\n            return false; //not one of mine\n        }\n        if (this.sortColumn === col && this.ascending === ascending) {\n            return true; //already in this order\n        }\n        if (this.sortColumn) {\n            this.sortColumn.on(Column.EVENT_DIRTY_VALUES + '.order', null);\n        }\n        var bak = this.getSortCriteria();\n        this.sortColumn = col;\n        if (this.sortColumn) {\n            this.sortColumn.on(Column.EVENT_DIRTY_VALUES + '.order', this.dirtyOrder);\n        }\n        this.ascending = ascending;\n        this.fire([Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n            Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], bak, this.getSortCriteria());\n        return true;\n    };\n    Object.defineProperty(Ranking.prototype, \"children\", {\n        get: function () {\n            return this.columns.slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Ranking.prototype, \"length\", {\n        get: function () {\n            return this.columns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ranking.prototype.insert = function (col, index) {\n        if (index === void 0) { index = this.columns.length; }\n        this.columns.splice(index, 0, col);\n        col.parent = this;\n        this.forward(col, Column.EVENT_DIRTY_VALUES + '.ranking', Column.EVENT_DIRTY_HEADER + '.ranking', Column.EVENT_DIRTY + '.ranking', Column.EVENT_FILTER_CHANGED + '.ranking');\n        col.on(Ranking.EVENT_FILTER_CHANGED + '.order', this.dirtyOrder);\n        this.fire([Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, index);\n        if (this.sortColumn === null && !isSupportType(col.desc)) {\n            this.sortBy(col, col instanceof StringColumn);\n        }\n        return col;\n    };\n    Object.defineProperty(Ranking.prototype, \"fqpath\", {\n        get: function () {\n            return '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ranking.prototype.findByPath = function (fqpath) {\n        var p = this;\n        var indices = fqpath.split('@').map(Number).slice(1); //ignore the first entry = ranking\n        while (indices.length > 0) {\n            var i = indices.shift();\n            p = p.at(i);\n        }\n        return p;\n    };\n    Ranking.prototype.indexOf = function (col) {\n        return this.columns.indexOf(col);\n    };\n    Ranking.prototype.at = function (index) {\n        return this.columns[index];\n    };\n    Ranking.prototype.insertAfter = function (col, ref) {\n        var i = this.columns.indexOf(ref);\n        if (i < 0) {\n            return null;\n        }\n        return this.insert(col, i + 1);\n    };\n    Ranking.prototype.push = function (col) {\n        return this.insert(col);\n    };\n    Ranking.prototype.remove = function (col) {\n        var i = this.columns.indexOf(col);\n        if (i < 0) {\n            return false;\n        }\n        this.unforward(col, Column.EVENT_DIRTY_VALUES + '.ranking', Column.EVENT_DIRTY_HEADER + '.ranking', Column.EVENT_DIRTY + '.ranking', Column.EVENT_FILTER_CHANGED + '.ranking');\n        if (this.sortColumn === col) {\n            var next = this.columns.filter(function (d) { return d !== col && !isSupportType(d.desc); })[0];\n            this.sortBy(next ? next : null);\n        }\n        col.parent = null;\n        this.columns.splice(i, 1);\n        this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, i);\n        return true;\n    };\n    Ranking.prototype.clear = function () {\n        var _this = this;\n        if (this.columns.length === 0) {\n            return;\n        }\n        this.sortColumn = null;\n        this.columns.forEach(function (col) {\n            _this.unforward(col, Column.EVENT_DIRTY_VALUES + '.ranking', Column.EVENT_DIRTY_HEADER + '.ranking', Column.EVENT_DIRTY + '.ranking', Column.EVENT_FILTER_CHANGED + '.ranking');\n            col.parent = null;\n        });\n        this.columns.length = 0;\n        this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], null);\n    };\n    Object.defineProperty(Ranking.prototype, \"flatColumns\", {\n        get: function () {\n            var r = [];\n            this.flatten(r, 0, Column.FLAT_ALL_COLUMNS);\n            return r.map(function (d) { return d.col; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ranking.prototype.find = function (id_or_filter) {\n        var filter = typeof (id_or_filter) === 'string' ? function (col) { return col.id === id_or_filter; } : id_or_filter;\n        var r = this.flatColumns;\n        for (var i = 0; i < r.length; ++i) {\n            if (filter(r[i])) {\n                return r[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * converts the sorting criteria to a json compatible notation for transferring it to the server\n     * @param toId\n     * @return {any}\n     */\n    Ranking.prototype.toSortingDesc = function (toId) {\n        //TODO describe also all the filter settings\n        var resolve = function (s) {\n            if (s === null) {\n                return null;\n            }\n            if (s instanceof StackColumn) {\n                var w = s.getWeights();\n                return s.children.map(function (child, i) {\n                    return {\n                        weight: w[i],\n                        id: resolve(child)\n                    };\n                });\n            }\n            return toId(s.desc);\n        };\n        var id = resolve(this.sortColumn);\n        if (id === null) {\n            return null;\n        }\n        return {\n            id: id,\n            asc: this.ascending\n        };\n    };\n    Ranking.prototype.isFiltered = function () {\n        return this.columns.some(function (d) { return d.isFiltered(); });\n    };\n    Ranking.prototype.filter = function (row, index) {\n        return this.columns.every(function (d) { return d.filter(row, index); });\n    };\n    Ranking.prototype.findMyRanker = function () {\n        return this;\n    };\n    Object.defineProperty(Ranking.prototype, \"fqid\", {\n        get: function () {\n            return this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Ranking.EVENT_WIDTH_CHANGED = Column.EVENT_WIDTH_CHANGED;\n    Ranking.EVENT_FILTER_CHANGED = Column.EVENT_FILTER_CHANGED;\n    Ranking.EVENT_LABEL_CHANGED = Column.EVENT_LABEL_CHANGED;\n    Ranking.EVENT_COMPRESS_CHANGED = Column.EVENT_COMPRESS_CHANGED;\n    Ranking.EVENT_ADD_COLUMN = Column.EVENT_ADD_COLUMN;\n    Ranking.EVENT_REMOVE_COLUMN = Column.EVENT_REMOVE_COLUMN;\n    Ranking.EVENT_DIRTY = Column.EVENT_DIRTY;\n    Ranking.EVENT_DIRTY_HEADER = Column.EVENT_DIRTY_HEADER;\n    Ranking.EVENT_DIRTY_VALUES = Column.EVENT_DIRTY_VALUES;\n    Ranking.EVENT_SORT_CRITERIA_CHANGED = 'sortCriteriaChanged';\n    Ranking.EVENT_DIRTY_ORDER = 'dirtyOrder';\n    Ranking.EVENT_ORDER_CHANGED = 'orderChanged';\n    return Ranking;\n}(AEventDispatcher));\nexport default Ranking;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/Ranking.ts\n// module id = 14\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\nimport CompositeNumberColumn from './CompositeNumberColumn';\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'script'; }\n    return { type: 'script', label: label, script: ScriptColumn.DEFAULT_SCRIPT };\n}\nvar ScriptColumn = (function (_super) {\n    __extends(ScriptColumn, _super);\n    function ScriptColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.script = ScriptColumn.DEFAULT_SCRIPT;\n        this.f = null;\n        this.script = desc.script || this.script;\n    }\n    ScriptColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([ScriptColumn.EVENT_SCRIPT_CHANGED]);\n    };\n    ScriptColumn.prototype.setScript = function (script) {\n        if (this.script === script) {\n            return;\n        }\n        this.f = null;\n        this.fire([ScriptColumn.EVENT_SCRIPT_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.script, this.script = script);\n    };\n    ScriptColumn.prototype.getScript = function () {\n        return this.script;\n    };\n    ScriptColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.script = this.script;\n        return r;\n    };\n    ScriptColumn.prototype.restore = function (dump, factory) {\n        this.script = dump.script || this.script;\n        _super.prototype.restore.call(this, dump, factory);\n    };\n    ScriptColumn.prototype.compute = function (row, index) {\n        if (this.f == null) {\n            this.f = new Function('children', 'values', this.script);\n        }\n        return this.f.call(this, this._children, this._children.map(function (d) { return d.getValue(row, index); }));\n    };\n    ScriptColumn.EVENT_SCRIPT_CHANGED = 'scriptChanged';\n    ScriptColumn.DEFAULT_SCRIPT = 'return Math.max.apply(Math,values)';\n    return ScriptColumn;\n}(CompositeNumberColumn));\nexport default ScriptColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/ScriptColumn.ts\n// module id = 15\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport * as d3 from 'd3';\nimport { merge, delayedCall, AEventDispatcher } from '../utils';\nimport { Ranking, isNumberColumn } from '../model';\nimport Column from '../model/Column';\nimport { isMultiLevelColumn } from '../model/CompositeColumn';\nimport DataProvider from '../provider/ADataProvider';\nimport { renderers as defaultRenderers } from '../renderer';\nexport var ERenderReason;\n(function (ERenderReason) {\n    ERenderReason[ERenderReason[\"DIRTY\"] = 0] = \"DIRTY\";\n    ERenderReason[ERenderReason[\"SCROLLED\"] = 1] = \"SCROLLED\";\n})(ERenderReason || (ERenderReason = {}));\nvar ABodyRenderer = (function (_super) {\n    __extends(ABodyRenderer, _super);\n    function ABodyRenderer(data, parent, slicer, root, options) {\n        if (options === void 0) { options = {}; }\n        _super.call(this);\n        this.data = data;\n        this.slicer = slicer;\n        this.options = {\n            rowHeight: 20,\n            rowPadding: 1,\n            rowBarPadding: 1,\n            idPrefix: '',\n            slopeWidth: 150,\n            columnPadding: 5,\n            stacked: true,\n            animation: false,\n            animationDuration: 1000,\n            renderers: merge({}, defaultRenderers),\n            meanLine: false,\n            actions: [],\n            freezeCols: 0\n        };\n        this.histCache = new Map();\n        //merge options\n        merge(this.options, options);\n        this.$node = d3.select(parent).append(root).classed('lu-body', true);\n        this.changeDataStorage(data);\n    }\n    ABodyRenderer.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([ABodyRenderer.EVENT_HOVER_CHANGED, ABodyRenderer.EVENT_RENDER_FINISHED]);\n    };\n    Object.defineProperty(ABodyRenderer.prototype, \"node\", {\n        get: function () {\n            return this.$node.node();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ABodyRenderer.prototype.setOption = function (key, value) {\n        this.options[key] = value;\n    };\n    ABodyRenderer.prototype.changeDataStorage = function (data) {\n        if (this.data) {\n            this.data.on([DataProvider.EVENT_DIRTY_VALUES + '.bodyRenderer', DataProvider.EVENT_SELECTION_CHANGED + '.bodyRenderer'], null);\n        }\n        this.data = data;\n        data.on(DataProvider.EVENT_DIRTY_VALUES + '.bodyRenderer', delayedCall(this.update.bind(this), 1));\n        data.on(DataProvider.EVENT_SELECTION_CHANGED + '.bodyRenderer', delayedCall(this.drawSelection.bind(this), 1));\n    };\n    ABodyRenderer.prototype.showMeanLine = function (col) {\n        //show mean line if option is enabled and top level\n        return this.options.meanLine && isNumberColumn(col) && !col.getCompressed() && col.parent instanceof Ranking;\n    };\n    ABodyRenderer.prototype.fireFinished = function () {\n        this.fire(ABodyRenderer.EVENT_RENDER_FINISHED, this);\n    };\n    ABodyRenderer.prototype.createContext = function (index_shift, creator) {\n        var _this = this;\n        var options = this.options;\n        function findOption(key, default_) {\n            if (key in options) {\n                return options[key];\n            }\n            if (key.indexOf('.') > 0) {\n                var p = key.substring(0, key.indexOf('.'));\n                key = key.substring(key.indexOf('.') + 1);\n                if (p in options && key in options[p]) {\n                    return options[p][key];\n                }\n            }\n            return default_;\n        }\n        return {\n            cellY: function (index) { return (index + index_shift) * (_this.options.rowHeight); },\n            cellPrevY: function (index) { return (index + index_shift) * (_this.options.rowHeight); },\n            idPrefix: options.idPrefix,\n            option: findOption,\n            rowHeight: function (index) {\n                return options.rowHeight - options.rowPadding;\n            },\n            renderer: function (col) {\n                return creator(col, options.renderers, this);\n            }\n        };\n    };\n    ABodyRenderer.prototype.select = function (dataIndex, additional) {\n        if (additional === void 0) { additional = false; }\n        return this.data.toggleSelection(dataIndex, additional);\n    };\n    ABodyRenderer.prototype.fakeHover = function (dataIndex) {\n        this.mouseOver(dataIndex, true);\n    };\n    ABodyRenderer.prototype.mouseOver = function (dataIndex, hover) {\n        if (hover === void 0) { hover = true; }\n        this.fire(ABodyRenderer.EVENT_HOVER_CHANGED, hover ? dataIndex : -1);\n    };\n    ABodyRenderer.prototype.scrolled = function () {\n        return this.update(ERenderReason.SCROLLED);\n    };\n    /**\n     * render the body\n     */\n    ABodyRenderer.prototype.update = function (reason) {\n        var _this = this;\n        if (reason === void 0) { reason = ERenderReason.DIRTY; }\n        var rankings = this.data.getRankings();\n        var maxElems = d3.max(rankings, function (d) { return d.getOrder().length; }) || 0;\n        var height = this.options.rowHeight * maxElems;\n        var visibleRange = this.slicer(0, maxElems, function (i) { return i * _this.options.rowHeight; });\n        var orderSlicer = function (order) {\n            if (visibleRange.from === 0 && order.length <= visibleRange.to) {\n                return order;\n            }\n            return order.slice(visibleRange.from, Math.min(order.length, visibleRange.to));\n        };\n        var context = this.createContextImpl(visibleRange.from);\n        var orders = rankings.map(function (r) { return orderSlicer(r.getOrder()); });\n        var data = this.data.fetch(orders);\n        var padding = this.options.columnPadding;\n        var totalWidth = 0;\n        var rdata = rankings.map(function (r, i) {\n            var cols = r.children.filter(function (d) { return !d.isHidden(); });\n            var rankingShift = totalWidth;\n            var width = 0;\n            var colData = cols.map(function (o) {\n                var colShift = width;\n                width += (o.getCompressed() ? Column.COMPRESSED_WIDTH : o.getWidth()) + padding;\n                if (isMultiLevelColumn(o) && !o.getCollapsed() && !o.getCompressed()) {\n                    width += padding * (o.length - 1);\n                }\n                return {\n                    column: o,\n                    renderer: context.renderer(o),\n                    shift: colShift\n                };\n            });\n            totalWidth += width;\n            totalWidth += _this.options.slopeWidth;\n            var frozen = colData.slice(0, _this.options.freezeCols);\n            return {\n                id: r.id,\n                ranking: r,\n                order: orders[i],\n                shift: rankingShift,\n                width: width,\n                //compute frozen columns just for the first one\n                frozen: frozen,\n                frozenWidth: Math.max.apply(Math, (frozen.map(function (d) { return d.shift + d.column.getWidth(); }))),\n                columns: colData.slice(_this.options.freezeCols),\n                data: data[i]\n            };\n        });\n        //one to often\n        totalWidth -= this.options.slopeWidth;\n        this.updateImpl(rdata, context, totalWidth, height, reason).then(this.fireFinished.bind(this));\n    };\n    ABodyRenderer.EVENT_HOVER_CHANGED = 'hoverChanged';\n    ABodyRenderer.EVENT_RENDER_FINISHED = 'renderFinished';\n    return ABodyRenderer;\n}(AEventDispatcher));\nexport default ABodyRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/ABodyRenderer.ts\n// module id = 16\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ascending } from 'd3';\nimport ValueColumn from './ValueColumn';\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'S'; }\n    return { type: 'selection', label: label };\n}\n/**\n * a checkbox column for selections\n */\nvar SelectionColumn = (function (_super) {\n    __extends(SelectionColumn, _super);\n    function SelectionColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.setCompressed(true);\n    }\n    SelectionColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([SelectionColumn.EVENT_SELECT]);\n    };\n    SelectionColumn.prototype.setValue = function (row, index, value) {\n        var old = this.getValue(row, index);\n        if (old === value) {\n            return true;\n        }\n        return this.setImpl(row, index, value);\n    };\n    SelectionColumn.prototype.setImpl = function (row, index, value) {\n        if (this.desc.setter) {\n            this.desc.setter(row, index, value);\n        }\n        this.fire(SelectionColumn.EVENT_SELECT, row, value);\n        return true;\n    };\n    SelectionColumn.prototype.toggleValue = function (row, index) {\n        var old = this.getValue(row, index);\n        this.setImpl(row, index, !old);\n        return !old;\n    };\n    SelectionColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        return ascending(this.getValue(a, aIndex), this.getValue(b, bIndex));\n    };\n    SelectionColumn.EVENT_SELECT = 'select';\n    return SelectionColumn;\n}(ValueColumn));\nexport default SelectionColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/SelectionColumn.ts\n// module id = 17\n// module chunks = 0 1","/**\n * main module of LineUp.js containing the main class and exposes all other modules\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport DataProvider from './provider/ADataProvider';\nimport { renderers as defaultRenderers } from './renderer';\nimport { dummyRankingButtonHook, PoolRenderer, HeaderRenderer, createBodyRenderer } from './ui';\nimport { default as ABodyRenderer } from './ui/ABodyRenderer';\nimport { AEventDispatcher, ContentScroller, merge } from './utils';\nimport { scale as d3scale, selection, select } from 'd3';\n/**\n * main LineUp class managing data and rendering\n */\nvar LineUp = (function (_super) {\n    __extends(LineUp, _super);\n    function LineUp(container, data, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        _super.call(this);\n        this.data = data;\n        /**\n         * default config of LineUp with all available options\n         */\n        this.config = {\n            /**\n             * a prefix used for all generated html ids\n             */\n            idPrefix: Math.random().toString(36).slice(-8).substr(0, 3),\n            /**\n             * options related to the header html layout\n             */\n            header: {\n                /**\n                 * standard height of the header\n                 */\n                headerHeight: 20,\n                /**\n                 * height of the header including histogram\n                 */\n                headerHistogramHeight: 40,\n                /**\n                 * should labels be automatically rotated if they doesn't fit?\n                 */\n                autoRotateLabels: false,\n                /**\n                 * space reserved if a label is rotated\n                 */\n                rotationHeight: 50,\n                /**\n                 * the degrees to rotate a label\n                 */\n                rotationDegree: -20,\n                /**\n                 * hook for adding buttons to rankings in the header\n                 */\n                rankingButtons: dummyRankingButtonHook,\n                /**\n                 * templates for link patterns\n                 */\n                linkTemplates: []\n            },\n            /**\n             * old name for header\n             */\n            htmlLayout: {},\n            /**\n             * visual representation options\n             */\n            renderingOptions: {\n                /**\n                 * show combined bars as stacked bars\n                 */\n                stacked: true,\n                /**\n                 * use animation for reordering\n                 */\n                animation: true,\n                /**\n                 * show histograms of the headers (just settable at the beginning)\n                 */\n                histograms: false,\n                /**\n                 * show a mean line for single numberial columns\n                 */\n                meanLine: false,\n            },\n            /**\n             * options related to the rendering of the body\n             */\n            body: {\n                renderer: 'svg',\n                rowHeight: 18,\n                rowPadding: 1,\n                rowBarPadding: 1,\n                /**\n                 * whether just the visible rows or all rows should be rendered - rendering performance (default: true)\n                 */\n                visibleRowsOnly: true,\n                /**\n                 * number of backup rows to keep to avoid updating on every small scroll thing\n                 */\n                backupScrollRows: 4,\n                animationDuration: 1000,\n                //number of cols that should be frozen on the left side\n                freezeCols: 0,\n                actions: []\n            },\n            /**\n             * old name for body\n             */\n            svgLayout: {},\n            /**\n             *  enables manipulation features, remove column, reorder,...\n             */\n            manipulative: true,\n            /**\n             * automatically add a column pool at the end\n             */\n            pool: false,\n            /**\n             * the renderers to use for rendering the columns\n             */\n            renderers: merge({}, defaultRenderers)\n        };\n        this.body = null;\n        this.header = null;\n        this.pools = [];\n        this.contentScroller = null;\n        /**\n         * local variable that is used by update()\n         * @type {boolean}\n         */\n        this.isUpdateInitialized = false;\n        this.$container = container instanceof selection ? container : select(container);\n        this.$container = this.$container.append('div').classed('lu', true);\n        this.config.svgLayout = this.config.body;\n        this.config.htmlLayout = this.config.header;\n        merge(this.config, config);\n        this.data.on(DataProvider.EVENT_SELECTION_CHANGED + '.main', this.triggerSelection.bind(this));\n        this.data.on(DataProvider.EVENT_JUMP_TO_NEAREST + '.main', this.jumpToNearest.bind(this));\n        this.header = new HeaderRenderer(data, this.node, merge({}, this.config.header, {\n            idPrefix: this.config.idPrefix,\n            manipulative: this.config.manipulative,\n            histograms: this.config.renderingOptions.histograms,\n            freezeCols: this.config.body.freezeCols,\n        }));\n        this.body = createBodyRenderer(this.config.body.renderer, data, this.node, this.slice.bind(this), merge({}, this.config.body, {\n            meanLine: this.config.renderingOptions.meanLine,\n            animation: this.config.renderingOptions.animation,\n            stacked: this.config.renderingOptions.stacked,\n            idPrefix: this.config.idPrefix,\n            renderers: this.config.renderers\n        }));\n        //share hist caches\n        this.body.histCache = this.header.sharedHistCache;\n        this.forward(this.body, LineUp.EVENT_HOVER_CHANGED);\n        if (this.config.pool && this.config.manipulative) {\n            this.addPool(new PoolRenderer(data, this.node, this.config));\n        }\n        if (this.config.body.visibleRowsOnly) {\n            this.contentScroller = new ContentScroller(this.$container.node(), this.body.node, {\n                backupRows: this.config.body.backupScrollRows,\n                rowHeight: this.config.body.rowHeight,\n                topShift: function () { return _this.header.currentHeight(); }\n            });\n            this.contentScroller.on(ContentScroller.EVENT_SCROLL, function (top, left) {\n                //in two svg mode propagate horizontal shift\n                //console.log(top, left,'ss');\n                _this.header.$node.style('transform', 'translate(' + 0 + 'px,' + top + 'px)');\n                if (_this.config.body.freezeCols > 0) {\n                    _this.header.updateFreeze(left);\n                    _this.body.updateFreeze(left);\n                }\n            });\n            this.contentScroller.on(ContentScroller.EVENT_REDRAW, this.body.scrolled.bind(this.body));\n        }\n    }\n    LineUp.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([LineUp.EVENT_HOVER_CHANGED, LineUp.EVENT_SELECTION_CHANGED, LineUp.EVENT_MULTISELECTION_CHANGED, LineUp.EVENT_UPDATE_START, LineUp.EVENT_UPDATE_FINISHED]);\n    };\n    LineUp.prototype.addPool = function (pool_node, config) {\n        if (config === void 0) { config = this.config; }\n        if (pool_node instanceof PoolRenderer) {\n            this.pools.push(pool_node);\n        }\n        else {\n            this.pools.push(new PoolRenderer(this.data, pool_node, config));\n        }\n        return this.pools[this.pools.length - 1];\n    };\n    Object.defineProperty(LineUp.prototype, \"node\", {\n        /**\n         * returns the main lineup DOM element\n         * @returns {Element}\n         */\n        get: function () {\n            return this.$container.node();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LineUp.prototype.slice = function (start, length, row2y) {\n        if (this.contentScroller) {\n            return this.contentScroller.select(start, length, row2y);\n        }\n        return { from: start, to: length };\n    };\n    /**\n     * destroys the DOM elements created by this lineup instance, this should be the last call to this lineup instance\n     */\n    LineUp.prototype.destroy = function () {\n        this.pools.forEach(function (p) { return p.remove(); });\n        this.$container.remove();\n        if (this.contentScroller) {\n            this.contentScroller.destroy();\n        }\n    };\n    /**\n     * sorts LineUp by he given column\n     * @param column callback function finding the column to sort\n     * @param ascending\n     * @returns {boolean}\n     */\n    LineUp.prototype.sortBy = function (column, ascending) {\n        if (ascending === void 0) { ascending = false; }\n        var col = this.data.find(column);\n        if (col) {\n            col.sortByMe(ascending);\n        }\n        return col !== null;\n    };\n    LineUp.prototype.dump = function () {\n        return this.data.dump();\n    };\n    LineUp.prototype.changeDataStorage = function (data, dump) {\n        if (this.data) {\n            this.data.on([DataProvider.EVENT_SELECTION_CHANGED + '.main', DataProvider.EVENT_JUMP_TO_NEAREST + '.main'], null);\n        }\n        this.data = data;\n        if (dump) {\n            this.data.restore(dump);\n        }\n        this.data.on(DataProvider.EVENT_SELECTION_CHANGED + '.main', this.triggerSelection.bind(this));\n        this.data.on(DataProvider.EVENT_JUMP_TO_NEAREST + '.main', this.jumpToNearest.bind(this));\n        this.header.changeDataStorage(data);\n        this.body.changeDataStorage(data);\n        this.pools.forEach(function (p) { return p.changeDataStorage(data); });\n        this.update();\n    };\n    LineUp.prototype.triggerSelection = function (dataIndices) {\n        this.fire(LineUp.EVENT_SELECTION_CHANGED, dataIndices.length > 0 ? dataIndices[0] : -1);\n        this.fire(LineUp.EVENT_MULTISELECTION_CHANGED, dataIndices);\n    };\n    LineUp.prototype.jumpToNearest = function (dataIndices) {\n        var _this = this;\n        var ranking = this.data.getRankings()[0];\n        if (dataIndices.length === 0 || ranking === undefined) {\n            return;\n        }\n        var order = ranking.getOrder();\n        //relative order\n        var indices = dataIndices.map(function (d) { return order.indexOf(d); }).sort(function (a, b) { return a - b; });\n        if (this.contentScroller) {\n            this.contentScroller.scrollIntoView(0, order.length, indices[0], function (i) { return i * _this.config.body.rowHeight; });\n        }\n        else {\n            var container = this.$container.node();\n            container.scrollTop = indices[0] * this.config.body.rowHeight;\n        }\n        //fake hover in 100ms - TODO right timing\n        setTimeout(function () {\n            _this.body.fakeHover(order[indices[0]]);\n        }, 100);\n    };\n    LineUp.prototype.restore = function (dump) {\n        this.changeDataStorage(this.data, dump);\n    };\n    LineUp.prototype.update = function () {\n        var _this = this;\n        // HACK: when calling update for the first time the BodyRenderer\n        // fires 3x the `renderFinished` event. However, we want to wait for\n        // the last event before firing LineUp.EVENT_UPDATE_FINISHED.\n        // For any further call of update() the body render will fire the\n        // `renderFinished` event only once\n        var waitForBodyRenderer = (this.isUpdateInitialized) ? 1 : 3;\n        this.isUpdateInitialized = true;\n        this.fire(LineUp.EVENT_UPDATE_START);\n        this.header.update();\n        this.body.update();\n        this.pools.forEach(function (p) { return p.update(); });\n        this.body.on(ABodyRenderer.EVENT_RENDER_FINISHED + '.main', function () {\n            waitForBodyRenderer -= 1;\n            if (waitForBodyRenderer === 0) {\n                _this.fire(LineUp.EVENT_UPDATE_FINISHED);\n            }\n        });\n    };\n    LineUp.prototype.changeRenderingOption = function (option, value) {\n        this.config.renderingOptions[option] = value;\n        if (option === 'animation' || option === 'stacked') {\n            this.body.setOption(option, value);\n            this.body.update();\n        }\n    };\n    /**\n     * triggered when the mouse is over a specific row\n     * @argument data_index:number the selected data index or <0 if no row\n     */\n    LineUp.EVENT_HOVER_CHANGED = ABodyRenderer.EVENT_HOVER_CHANGED;\n    /**\n     * triggered when the user click on a row\n     * @argument data_index:number the selected data index or <0 if no row\n     */\n    LineUp.EVENT_SELECTION_CHANGED = DataProvider.EVENT_SELECTION_CHANGED;\n    /**\n     * triggered when the user selects one or more rows\n     * @argument dataIndices:number[] the selected data indices\n     */\n    LineUp.EVENT_MULTISELECTION_CHANGED = 'multiSelectionChanged';\n    /**\n     * triggered when LineUpJS.update() was called\n     */\n    LineUp.EVENT_UPDATE_START = 'updateStart';\n    /**\n     * triggered when LineUpJS.update() was called and the rendering the body has finished\n     */\n    LineUp.EVENT_UPDATE_FINISHED = 'updateFinished';\n    return LineUp;\n}(AEventDispatcher));\nexport default LineUp;\n/**\n * assigns colors to colmns if they are numbers and not yet defined\n * @param columns\n * @returns {model_.IColumnDesc[]}\n */\nexport function deriveColors(columns) {\n    var colors = d3scale.category10().range().slice();\n    columns.forEach(function (col) {\n        switch (col.type) {\n            case 'number':\n                col.color = colors.shift();\n                break;\n        }\n    });\n    return columns;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lineup.ts\n// module id = 18\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\nimport StringColumn from './StringColumn';\n/**\n * a string column in which the label is a text but the value a link\n */\nvar LinkColumn = (function (_super) {\n    __extends(LinkColumn, _super);\n    function LinkColumn(id, desc) {\n        _super.call(this, id, desc);\n        /**\n         * a pattern used for generating the link, $1 is replaced with the actual value\n         * @type {null}\n         */\n        this.link = null;\n        this.link = desc.link;\n    }\n    Object.defineProperty(LinkColumn.prototype, \"headerCssClass\", {\n        get: function () {\n            return this.link == null ? 'link' : 'link link_pattern';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([LinkColumn.EVENT_LINK_CHANGED]);\n    };\n    LinkColumn.prototype.setLink = function (link) {\n        /* tslint:disable */\n        if (link == this.link) {\n            return;\n        }\n        /* tslint:enable */\n        this.fire([LinkColumn.EVENT_LINK_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.link, this.link = link);\n    };\n    LinkColumn.prototype.getLink = function () {\n        return this.link || '';\n    };\n    LinkColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        /* tslint:disable */\n        if (this.link != this.desc.link) {\n            r.link = this.link;\n        }\n        /* tslint:enable */\n        return r;\n    };\n    LinkColumn.prototype.restore = function (dump, factory) {\n        _super.prototype.restore.call(this, dump, factory);\n        if (dump.link) {\n            this.link = dump.link;\n        }\n    };\n    LinkColumn.prototype.getLabel = function (row, index) {\n        var v = _super.prototype.getRaw.call(this, row, index);\n        if (v && v.alt) {\n            return v.alt;\n        }\n        return '' + v;\n    };\n    LinkColumn.prototype.isLink = function (row, index) {\n        if (this.link) {\n            return true;\n        }\n        //get original value\n        var v = _super.prototype.getRaw.call(this, row, index);\n        //convert to link\n        return v && v.href != null;\n    };\n    LinkColumn.prototype.getValue = function (row, index) {\n        //get original value\n        var v = _super.prototype.getRaw.call(this, row, index);\n        //convert to link\n        if (v && v.href) {\n            return v.href;\n        }\n        else if (this.link) {\n            return this.link.replace(/\\$1/g, v || '');\n        }\n        return v;\n    };\n    LinkColumn.EVENT_LINK_CHANGED = 'linkChanged';\n    return LinkColumn;\n}(StringColumn));\nexport default LinkColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/LinkColumn.ts\n// module id = 19\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { max as d3max } from 'd3';\nimport CompositeNumberColumn from './CompositeNumberColumn';\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'Max'; }\n    return { type: 'max', label: label };\n}\n/**\n * combines multiple columns by using the maximal value\n */\nvar MaxColumn = (function (_super) {\n    __extends(MaxColumn, _super);\n    function MaxColumn() {\n        _super.apply(this, arguments);\n    }\n    MaxColumn.prototype.getColor = function (row, index) {\n        //compute the index of the maximal one\n        var c = this._children;\n        if (c.length === 0) {\n            return this.color;\n        }\n        var max_i = 0, max_v = c[0].getValue(row, index);\n        for (var i = 1; i < c.length; ++i) {\n            var v = c[i].getValue(row, index);\n            if (v > max_v) {\n                max_i = i;\n                max_v = v;\n            }\n        }\n        return c[max_i].color;\n    };\n    MaxColumn.prototype.compute = function (row, index) {\n        return d3max(this._children, function (d) { return d.getValue(row, index); });\n    };\n    return MaxColumn;\n}(CompositeNumberColumn));\nexport default MaxColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MaxColumn.ts\n// module id = 20\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { mean as d3mean } from 'd3';\nimport CompositeNumberColumn from './CompositeNumberColumn';\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'Mean'; }\n    return { type: 'mean', label: label };\n}\nvar MeanColumn = (function (_super) {\n    __extends(MeanColumn, _super);\n    function MeanColumn() {\n        _super.apply(this, arguments);\n    }\n    MeanColumn.prototype.compute = function (row, index) {\n        return d3mean(this._children, function (d) { return d.getValue(row, index); });\n    };\n    return MeanColumn;\n}(CompositeNumberColumn));\nexport default MeanColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MeanColumn.ts\n// module id = 21\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { min as d3min } from 'd3';\nimport CompositeNumberColumn from './CompositeNumberColumn';\n/**\n * factory for creating a description creating a min column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'Min'; }\n    return { type: 'min', label: label };\n}\nvar MinColumn = (function (_super) {\n    __extends(MinColumn, _super);\n    function MinColumn() {\n        _super.apply(this, arguments);\n    }\n    MinColumn.prototype.getColor = function (row, index) {\n        //compute the index of the maximal one\n        var c = this._children;\n        if (c.length === 0) {\n            return this.color;\n        }\n        var min_i = 0, min_v = c[0].getValue(row, index);\n        for (var i = 1; i < c.length; ++i) {\n            var v = c[i].getValue(row, index);\n            if (v < min_v) {\n                min_i = i;\n                min_v = v;\n            }\n        }\n        return c[min_i].color;\n    };\n    MinColumn.prototype.compute = function (row, index) {\n        return d3min(this._children, function (d) { return d.getValue(row, index); });\n    };\n    return MinColumn;\n}(CompositeNumberColumn));\nexport default MinColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MinColumn.ts\n// module id = 22\n// module chunks = 0 1","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport * as d3 from 'd3';\nimport ValueColumn from './ValueColumn';\nexport var CustomSortCalculation = (function () {\n    function CustomSortCalculation(a_val, b_val) {\n        this.a_val = a_val;\n        this.b_val = b_val;\n        this.b_val = b_val;\n        this.a_val = a_val;\n    }\n    CustomSortCalculation.prototype.sum = function () {\n        return (d3.sum(this.a_val) - d3.sum(this.b_val));\n    };\n    CustomSortCalculation.prototype.min = function () {\n        return (d3.min(this.a_val) - d3.min(this.b_val));\n    };\n    CustomSortCalculation.prototype.max = function () {\n        return (d3.max(this.a_val) - d3.max(this.b_val));\n    };\n    CustomSortCalculation.prototype.mean = function () {\n        return (d3.mean(this.a_val) - d3.mean(this.b_val));\n    };\n    CustomSortCalculation.prototype.median = function () {\n        return (d3.median(this.a_val)) - (d3.median(this.b_val));\n    };\n    CustomSortCalculation.prototype.q1 = function () {\n        return (d3.quantile(this.a_val, 0.25)) - (d3.quantile(this.b_val, 0.25));\n    };\n    CustomSortCalculation.prototype.q3 = function () {\n        return (d3.quantile(this.a_val, 0.75)) - (d3.quantile(this.b_val, 0.75));\n    };\n    return CustomSortCalculation;\n}());\n// function getPercentile(data, percentile) {\n//\n//       var index = (percentile / 100) * data.length;\n//       var result;\n//       if (Math.floor(index) === index) {\n//         result = (data[(index - 1)] + data[index]) / 2;\n//       } else {\n//         result = data[Math.floor(index)];\n//       }\n//       return result;\n//     }\nfunction numSort(a, b) {\n    return a - b;\n}\nvar MultiValueColumn = (function (_super) {\n    __extends(MultiValueColumn, _super);\n    function MultiValueColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.colorScale = d3.scale.linear();\n        this.xposScale = d3.scale.linear();\n        this.yposScale = d3.scale.linear();\n        this.verticalBarScale = d3.scale.linear();\n        this.boxPlotScale = d3.scale.linear();\n        this.colorrange = desc.colorrange || ['blue', 'red'];\n        this.min = d3.min(desc.domain);\n        this.max = d3.max(desc.domain);\n        this.bins = desc.datalength;\n        this.threshold = desc.threshold || 0;\n        this.sortBy = desc.sort || 'min';\n        this.verticalBarHeight = 13;\n        this.rendererList = [{ type: 'heatmapcustom', label: 'Heatmap' },\n            { type: 'boxplot', label: 'Boxplot' },\n            { type: 'sparkline', label: 'Sparkline' },\n            { type: 'threshold', label: 'Threshold' },\n            { type: 'verticalbar', label: 'VerticalBar' }];\n        this.defineColor();\n        this.boxPlotWidth();\n    }\n    MultiValueColumn.prototype.defineColor = function () {\n        if (this.min < 0) {\n            this.colorScale\n                .domain([this.min, 0, this.max])\n                .range([this.colorrange[0], 'white', this.colorrange[1]]);\n        }\n        else {\n            this.colorScale\n                .domain([this.min, this.max])\n                .range(['white', this.colorrange[1]]);\n        }\n    };\n    MultiValueColumn.prototype.boxPlotWidth = function () {\n        this.boxPlotScale\n            .domain([this.min, this.max])\n            .range([0, this.getWidth()]);\n    };\n    MultiValueColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        this.sortBy = this.getUserSortBy();\n        var a_val = this.getValue(a, aIndex);\n        var b_val = this.getValue(b, bIndex);\n        var sort = new CustomSortCalculation(a_val, b_val);\n        var f = sort[this.sortBy].bind(sort);\n        return f();\n    };\n    MultiValueColumn.prototype.getLabel = function (row, index) {\n        return '' + this.getValue(row, index);\n    };\n    MultiValueColumn.prototype.getRaw = function (row, index) {\n        return this.accessor(row, index, this.id, this.desc, this.findMyRanker());\n    };\n    MultiValueColumn.prototype.getValue = function (row, index) {\n        var v = this.getRaw(row, index);\n        // console.log(v)\n        return (v);\n    };\n    MultiValueColumn.prototype.getColor = function (data) {\n        return this.colorScale(data);\n    };\n    MultiValueColumn.prototype.calculateCellDimension = function () {\n        return (this.getWidth() / this.bins);\n    };\n    MultiValueColumn.prototype.getxScale = function (data) {\n        this.xposScale\n            .domain([0, this.bins - 1])\n            .range([0, this.getWidth()]);\n        return this.xposScale(data);\n    };\n    MultiValueColumn.prototype.getyScale = function (data, rowheight) {\n        this.yposScale\n            .domain([this.min, this.max])\n            .range([rowheight, 0]);\n        return this.yposScale(data);\n    };\n    MultiValueColumn.prototype.getbinaryColor = function () {\n        return this.colorrange;\n    };\n    MultiValueColumn.prototype.getthresholdValue = function () {\n        return this.threshold;\n    };\n    MultiValueColumn.prototype.getVerticalBarHeight = function (data, rowheight) {\n        if (this.min < this.threshold) {\n            this.verticalBarScale\n                .domain([this.min, this.max])\n                .range([0, rowheight / 2]);\n            this.verticalBarHeight = (rowheight / 2 - this.verticalBarScale(data));\n        }\n        else {\n            this.verticalBarScale\n                .domain([this.min, this.max])\n                .range([0, rowheight]);\n            this.verticalBarHeight = this.verticalBarScale(data);\n        }\n        return this.verticalBarHeight;\n    };\n    MultiValueColumn.prototype.getyposVerticalBar = function (data, rowheight) {\n        if (this.min < this.threshold) {\n            this.ypositionVerticalBar = (data < this.threshold) ? (rowheight / 2) : rowheight / 2 - this.getVerticalBarHeight(data, rowheight); // For positive and negative value\n        }\n        else {\n            this.ypositionVerticalBar = rowheight - this.getVerticalBarHeight(data, rowheight);\n        }\n        return this.ypositionVerticalBar;\n    };\n    MultiValueColumn.prototype.getboxPlotData = function (data) {\n        var minval_arr = Math.min.apply(Math, data);\n        var maxval_arr = Math.max.apply(Math, data);\n        data.sort(numSort);\n        var q1 = this.boxPlotScale(d3.quantile(data, 0.25));\n        var median = this.boxPlotScale(d3.quantile(data, 0.50));\n        var q3 = this.boxPlotScale(d3.quantile(data, 0.75));\n        var min_val = this.boxPlotScale(minval_arr);\n        var max_val = this.boxPlotScale(maxval_arr);\n        var boxdata = { min: min_val, median: median, q1: q1, q3: q3, max: max_val };\n        return (boxdata);\n    };\n    MultiValueColumn.prototype.getUserSortBy = function () {\n        return this.sortBy;\n    };\n    MultiValueColumn.prototype.setUserSortBy = function (rank) {\n        var ascending = false;\n        switch (rank) {\n            case 'min':\n                ascending = true;\n                break;\n            case 'max':\n                ascending = false;\n                break;\n            case 'mean':\n                ascending = true;\n                break;\n            case 'median':\n                ascending = false;\n                break;\n            case 'q1':\n                ascending = true;\n                break;\n            case 'q3':\n                ascending = false;\n                break;\n            default:\n                ascending = false;\n        }\n        this.sortByMe(ascending);\n    };\n    MultiValueColumn.prototype.getRendererList = function () {\n        return this.rendererList;\n    };\n    return MultiValueColumn;\n}(ValueColumn));\nexport default MultiValueColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MultiValueColumn.ts\n// module id = 23\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport MultiLevelCompositeColumn from './MultiLevelCompositeColumn';\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createDesc(label) {\n    if (label === void 0) { label = 'Nested'; }\n    return { type: 'nested', label: label };\n}\n/**\n * a nested column is a composite column where the sorting order is determined by the nested ordering of the children\n * i.e., sort by the first child if equal sort by the second child,...\n */\nvar NestedColumn = (function (_super) {\n    __extends(NestedColumn, _super);\n    function NestedColumn() {\n        _super.apply(this, arguments);\n    }\n    NestedColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        var c = this.children;\n        for (var _i = 0, c_1 = c; _i < c_1.length; _i++) {\n            var ci = c_1[_i];\n            var ci_result = ci.compare(a, b, aIndex, bIndex);\n            if (ci_result !== 0) {\n                return ci_result;\n            }\n        }\n        return 0;\n    };\n    NestedColumn.prototype.getLabel = function (row, index) {\n        return this.children.map(function (d) { return d.getLabel(row, index); }).join(';');\n    };\n    NestedColumn.prototype.getValue = function (row, index) {\n        return this.children.map(function (d) { return d.getValue(row, index); }).join(';');\n    };\n    return NestedColumn;\n}(MultiLevelCompositeColumn));\nexport default NestedColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/NestedColumn.ts\n// module id = 24\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport * as d3 from 'd3';\nimport { forEach } from '../utils';\nimport { matchColumns } from '../renderer';\nimport ABodyRenderer from './ABodyRenderer';\nvar ABodyDOMRenderer = (function (_super) {\n    __extends(ABodyDOMRenderer, _super);\n    function ABodyDOMRenderer(data, parent, slicer, domMapping, options) {\n        if (options === void 0) { options = {}; }\n        _super.call(this, data, parent, slicer, domMapping.root, options);\n        this.domMapping = domMapping;\n        this.currentFreezeLeft = 0;\n    }\n    ABodyDOMRenderer.prototype.animated = function ($rows) {\n        if (this.options.animationDuration > 0 && this.options.animation) {\n            return $rows.transition().duration(this.options.animationDuration);\n        }\n        return $rows;\n    };\n    ABodyDOMRenderer.prototype.renderRankings = function ($body, data, context, height) {\n        var _this = this;\n        var that = this;\n        var domMapping = this.domMapping;\n        var g = this.domMapping.g;\n        var $rankings = $body.selectAll(g + '.ranking').data(data, function (d) { return d.id; });\n        var $rankings_enter = $rankings.enter().append(g)\n            .attr('class', 'ranking')\n            .call(domMapping.transform, function (d) { return [d.shift, 0]; });\n        $rankings_enter.append(g).attr('class', 'rows');\n        $rankings_enter.append(g).attr('class', 'meanlines').attr('clip-path', \"url(#c\" + this.options.idPrefix + \"Freeze)\");\n        //animated shift\n        this.animated($rankings).call(domMapping.transform, function (d, i) { return [d.shift, 0]; });\n        var toWait = [];\n        {\n            var $rows = $rankings.select(g + '.rows').selectAll(g + '.row').data(function (d) { return d.order; }, String);\n            var $rows_enter = $rows.enter().append(g).attr('class', 'row');\n            $rows_enter.call(domMapping.transform, function (d, i) { return [0, context.cellPrevY(i)]; });\n            $rows_enter.append(domMapping.bg).attr('class', 'bg');\n            $rows_enter\n                .on('mouseenter', function (d) { return _this.mouseOver(d, true); })\n                .on('mouseleave', function (d) { return _this.mouseOver(d, false); })\n                .on('click', function (d) { return _this.select(d, d3.event.ctrlKey); });\n            //create templates\n            var createTemplates_1 = function (node, columns) {\n                matchColumns(node, columns);\n                //set transform\n                columns.forEach(function (col, ci) {\n                    var cnode = node.childNodes[ci];\n                    domMapping.translate(cnode, col.shift, 0);\n                });\n            };\n            $rows_enter.append(g).attr('class', 'cols').attr('clip-path', \"url(#c\" + this.options.idPrefix + \"Freeze)\").each(function (d, i, j) {\n                createTemplates_1(this, data[j].columns);\n            });\n            $rows_enter.append(g).attr('class', 'frozen').call(this.domMapping.transform, function () { return [_this.currentFreezeLeft, 0]; }).each(function (d, i, j) {\n                createTemplates_1(this, data[j].frozen);\n            });\n            $rows\n                .attr('class', function (d, i) { return 'row ' + (i % 2 === 0 ? 'even' : ''); })\n                .attr('data-data-index', function (d) { return d; })\n                .classed('selected', function (d) { return _this.data.isSelected(d); });\n            //.classed('highlighted', (d) => this.data.isHighlighted(d.d));\n            //animated reordering\n            this.animated($rows).call(domMapping.transform, function (d, i) { return [0, context.cellY(i)]; });\n            //update background helper\n            $rows.select(domMapping.bg).attr('class', 'bg')\n                .call(domMapping.updateBG, function (d, i, j) { return [data[j].width, context.rowHeight(i)]; });\n            var updateColumns_1 = function (node, r, i, columns) {\n                //update nodes and create templates\n                return r.data[i].then(function (row) {\n                    matchColumns(node, columns);\n                    columns.forEach(function (col, ci) {\n                        var cnode = node.childNodes[ci];\n                        domMapping.translate(cnode, col.shift, 0);\n                        col.renderer.update(cnode, row, i);\n                    });\n                });\n            };\n            //update columns\n            $rows.select(g + '.cols').each(function (d, i, j) {\n                toWait.push(updateColumns_1(this, data[j], i, data[j].columns));\n            });\n            //order for frozen in html + set the size in html to have a proper background instead of a clip-path\n            var maxFrozen_1 = data.length === 0 || data[0].frozen.length === 0 ? 0 : d3.max(data[0].frozen, function (f) { return f.shift + f.column.getWidth(); });\n            $rows.select(g + '.frozen').each(function (d, i, j) {\n                domMapping.setSize(this, maxFrozen_1, that.options.rowHeight);\n                toWait.push(updateColumns_1(this, data[j], i, data[j].frozen));\n            });\n            $rows.exit().remove();\n        }\n        {\n            var $meanlines = $rankings.select(g + '.meanlines').selectAll(domMapping.meanLine + '.meanline').data(function (d) { return d.columns.filter(function (c) { return _this.showMeanLine(c.column); }); });\n            $meanlines.enter().append(domMapping.meanLine).attr('class', 'meanline');\n            $meanlines.each(function (d, i, j) {\n                var h = that.histCache.get(d.column.id);\n                var $mean = d3.select(this);\n                if (!h) {\n                    return;\n                }\n                h.then(function (stats) {\n                    var x_pos = d.shift + d.column.getWidth() * stats.mean;\n                    domMapping.updateMeanLine($mean, isNaN(x_pos) ? 0 : x_pos, height);\n                });\n            });\n            $meanlines.exit().remove();\n        }\n        $rankings.exit().remove();\n        return Promise.all(toWait);\n    };\n    ABodyDOMRenderer.prototype.select = function (dataIndex, additional) {\n        if (additional === void 0) { additional = false; }\n        var selected = _super.prototype.select.call(this, dataIndex, additional);\n        this.$node.selectAll(\"[data-data-index=\\\"\" + dataIndex + \"\\\"\").classed('selected', selected);\n        return selected;\n    };\n    ABodyDOMRenderer.prototype.drawSelection = function () {\n        var indices = this.data.getSelection();\n        forEach(this.node, '.selected', function (d) { return d.classList.remove('selected'); });\n        if (indices.length === 0) {\n            return;\n        }\n        else {\n            var q = indices.map(function (d) { return (\"[data-data-index=\\\"\" + d + \"\\\"]\"); }).join(',');\n            forEach(this.node, q, function (d) { return d.classList.add('selected'); });\n        }\n    };\n    ABodyDOMRenderer.prototype.mouseOver = function (dataIndex, hover) {\n        if (hover === void 0) { hover = true; }\n        _super.prototype.mouseOver.call(this, dataIndex, hover);\n        function setClass(item) {\n            item.classList.add('hover');\n        }\n        forEach(this.node, '.hover', function (d) { return d.classList.remove('hover'); });\n        if (hover) {\n            forEach(this.node, \"[data-data-index=\\\"\" + dataIndex + \"\\\"]\", setClass);\n        }\n    };\n    ABodyDOMRenderer.prototype.renderSlopeGraphs = function ($parent, data, context, height) {\n        var _this = this;\n        var slopes = data.slice(1).map(function (d, i) { return ({ left: data[i].order, left_i: i, right: d.order, right_i: i + 1 }); });\n        var $slopes = $parent.selectAll(this.domMapping.slopes + '.slopegraph').data(slopes);\n        $slopes.enter().append(this.domMapping.slopes).attr('class', 'slopegraph');\n        //$slopes.attr('transform', (d, i) => `translate(${(shifts[i + 1].shift - this.options.slopeWidth)},0)`);\n        $slopes.call(this.domMapping.updateSlopes, this.options.slopeWidth, height, function (d, i) { return ((data[i + 1].shift - _this.options.slopeWidth)); });\n        var $lines = $slopes.selectAll('line.slope').data(function (d) {\n            var cache = {};\n            d.right.forEach(function (data_index, pos) { return cache[data_index] = pos; });\n            return d.left.map(function (data_index, pos) { return ({\n                data_index: data_index,\n                lpos: pos,\n                rpos: cache[data_index]\n            }); }).filter(function (d) { return d.rpos != null; });\n        });\n        $lines.enter().append('line').attr({\n            'class': 'slope',\n            x2: this.options.slopeWidth\n        }).on('mouseenter', function (d) { return _this.mouseOver(d.data_index, true); })\n            .on('mouseleave', function (d) { return _this.mouseOver(d.data_index, false); });\n        $lines.attr('data-data-index', function (d) { return d.data_index; });\n        $lines.attr({\n            y1: function (d) { return context.rowHeight(d.lpos) * 0.5 + context.cellY(d.lpos); },\n            y2: function (d) { return context.rowHeight(d.rpos) * 0.5 + context.cellY(d.rpos); }\n        });\n        $lines.exit().remove();\n        $slopes.exit().remove();\n    };\n    ABodyDOMRenderer.prototype.updateFreeze = function (left) {\n        var _this = this;\n        forEach(this.node, this.domMapping.g + '.row .frozen', function (row) {\n            _this.domMapping.translate(row, left, 0);\n        });\n        var item = this.node.querySelector(\"clipPath#c\" + this.options.idPrefix + \"Freeze\");\n        if (item) {\n            this.domMapping.translate(item, left, 0);\n        }\n        this.currentFreezeLeft = left;\n    };\n    ABodyDOMRenderer.prototype.updateClipPaths = function (data, context, height) {\n        //no clip paths in HTML\n    };\n    ABodyDOMRenderer.prototype.createContextImpl = function (index_shift) {\n        return this.createContext(index_shift, this.domMapping.creator);\n    };\n    ABodyDOMRenderer.prototype.updateImpl = function (data, context, width, height, reason) {\n        // - ... added one to often\n        this.domMapping.setSize(this.node, Math.max(0, width), height);\n        var $body = this.$node.select(this.domMapping.g + '.body');\n        if ($body.empty()) {\n            $body = this.$node.append(this.domMapping.g).classed('body', true);\n        }\n        this.renderSlopeGraphs($body, data, context, height);\n        this.updateClipPaths(data, context, height);\n        return this.renderRankings($body, data, context, height);\n    };\n    return ABodyDOMRenderer;\n}(ABodyRenderer));\nexport default ABodyDOMRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/ADOMBodyRenderer.ts\n// module id = 25\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nimport * as d3 from 'd3';\nimport { merge, dropAble, delayedCall, forEach } from '../utils';\nimport Column from '../model/Column';\nimport StringColumn from '../model/StringColumn';\nimport Ranking from '../model/Ranking';\nimport { isMultiLevelColumn } from '../model/CompositeColumn';\nimport NumberColumn, { isNumberColumn } from '../model/NumberColumn';\nimport { isCategoricalColumn } from '../model/CategoricalColumn';\nimport RankColumn from '../model/RankColumn';\nimport StackColumn from '../model/StackColumn';\nimport LinkColumn from '../model/LinkColumn';\nimport ScriptColumn from '../model/ScriptColumn';\nimport DataProvider from '../provider/ADataProvider';\nimport MultiValueColumn from '../model/MultiValueColumn';\nimport { filterDialogs, openEditWeightsDialog, openEditLinkDialog, openEditScriptDialog, openRenameDialog, openSearchDialog, sortDialog, renderertypedialog } from '../ui_dialogs';\n/**\n * utility function to generate the tooltip text with description\n * @param col the column\n */\nexport function toFullTooltip(col) {\n    var base = col.label;\n    if (col.description != null && col.description !== '') {\n        base += '\\n' + col.description;\n    }\n    return base;\n}\nexport function dummyRankingButtonHook() {\n    return null;\n}\nvar HeaderRenderer = (function () {\n    function HeaderRenderer(data, parent, options) {\n        var _this = this;\n        this.data = data;\n        this.options = {\n            idPrefix: '',\n            slopeWidth: 150,\n            columnPadding: 5,\n            headerHistogramHeight: 40,\n            headerHeight: 20,\n            manipulative: true,\n            histograms: false,\n            filterDialogs: filterDialogs(),\n            linkTemplates: [],\n            searchAble: function (col) { return col instanceof StringColumn; },\n            sortOnLabel: true,\n            autoRotateLabels: false,\n            rotationHeight: 50,\n            rotationDegree: -20,\n            freezeCols: 0,\n            rankingButtons: dummyRankingButtonHook\n        };\n        this.histCache = new Map();\n        this.dragHandler = d3.behavior.drag()\n            .on('dragstart', function () {\n            d3.select(this).classed('dragging', true);\n            d3.event.sourceEvent.stopPropagation();\n            d3.event.sourceEvent.preventDefault();\n        })\n            .on('drag', function (d) {\n            //the new width\n            var newValue = Math.max(d3.mouse(this.parentNode)[0], 2);\n            d.setWidth(newValue);\n            d3.event.sourceEvent.stopPropagation();\n            d3.event.sourceEvent.preventDefault();\n        })\n            .on('dragend', function (d) {\n            d3.select(this).classed('dragging', false);\n            d3.event.sourceEvent.stopPropagation();\n            d3.event.sourceEvent.preventDefault();\n        });\n        this.dropHandler = dropAble(['application/caleydo-lineup-column-ref', 'application/caleydo-lineup-column'], function (data, d, copy) {\n            var col = null;\n            if ('application/caleydo-lineup-column-ref' in data) {\n                var id = data['application/caleydo-lineup-column-ref'];\n                col = _this.data.find(id);\n                if (copy) {\n                    col = _this.data.clone(col);\n                }\n                else {\n                    col.removeMe();\n                }\n            }\n            else {\n                var desc = JSON.parse(data['application/caleydo-lineup-column']);\n                col = _this.data.create(_this.data.fromDescRef(desc));\n            }\n            if (d instanceof Column) {\n                return d.insertAfterMe(col) != null;\n            }\n            else {\n                var r = _this.data.getLastRanking();\n                return r.push(col) !== null;\n            }\n        });\n        merge(this.options, options);\n        this.$node = d3.select(parent).append('div').classed('lu-header', true);\n        this.$node.append('div').classed('drop', true).call(this.dropHandler);\n        this.changeDataStorage(data);\n    }\n    HeaderRenderer.prototype.changeDataStorage = function (data) {\n        var _this = this;\n        if (this.data) {\n            this.data.on([DataProvider.EVENT_DIRTY_HEADER + '.headerRenderer', DataProvider.EVENT_ORDER_CHANGED + '.headerRenderer', DataProvider.EVENT_SELECTION_CHANGED + '.headerRenderer'], null);\n        }\n        this.data = data;\n        data.on(DataProvider.EVENT_DIRTY_HEADER + '.headerRenderer', delayedCall(this.update.bind(this), 1));\n        if (this.options.histograms) {\n            data.on(DataProvider.EVENT_ORDER_CHANGED + '.headerRenderer', function () {\n                _this.updateHist();\n                _this.update();\n            });\n            data.on(DataProvider.EVENT_SELECTION_CHANGED + '.headerRenderer', delayedCall(this.drawSelection.bind(this), 1));\n        }\n    };\n    Object.defineProperty(HeaderRenderer.prototype, \"sharedHistCache\", {\n        get: function () {\n            return this.histCache;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * defines the current header height in pixel\n     * @returns {number}\n     */\n    HeaderRenderer.prototype.currentHeight = function () {\n        return parseInt(this.$node.style('height'), 10);\n    };\n    HeaderRenderer.prototype.updateHist = function () {\n        var _this = this;\n        var rankings = this.data.getRankings();\n        rankings.forEach(function (ranking) {\n            var order = ranking.getOrder();\n            var cols = ranking.flatColumns;\n            var histo = order == null ? null : _this.data.stats(order);\n            cols.filter(function (d) { return d instanceof NumberColumn && !d.isHidden(); }).forEach(function (col) {\n                _this.histCache.set(col.id, histo === null ? null : histo.stats(col));\n            });\n            cols.filter(function (d) { return isCategoricalColumn(d) && !d.isHidden(); }).forEach(function (col) {\n                _this.histCache.set(col.id, histo === null ? null : histo.hist(col));\n            });\n        });\n    };\n    /**\n     * update the selection in the histograms\n     */\n    HeaderRenderer.prototype.drawSelection = function () {\n        var _this = this;\n        if (!this.options.histograms) {\n            return;\n        }\n        //highlight the bins in the histograms\n        var node = this.$node.node();\n        forEach(node, 'div.bar', function (d) { return d.classList.remove('selected'); });\n        var indices = this.data.getSelection();\n        if (indices.length <= 0) {\n            return;\n        }\n        this.data.view(indices).then(function (data) {\n            //get the data\n            var rankings = _this.data.getRankings();\n            rankings.forEach(function (ranking) {\n                var cols = ranking.flatColumns;\n                //find all number histograms\n                cols.filter(function (d) { return d instanceof NumberColumn && !d.isHidden(); }).forEach(function (col) {\n                    var bars = [].slice.call(node.querySelectorAll(\"div.header[data-id=\\\"\" + col.id + \"\\\"] div.bar\"));\n                    data.forEach(function (d, i) {\n                        var v = col.getValue(d, indices[i]);\n                        //choose the right bin\n                        for (var i_1 = 1; i_1 < bars.length; ++i_1) {\n                            var bar = bars[i_1];\n                            if (bar.dataset.x > v) {\n                                bars[i_1 - 1].classList.add('selected');\n                                break;\n                            }\n                            else if (i_1 === bars.length - 1) {\n                                bar.classList.add('selected');\n                                break;\n                            }\n                        }\n                    });\n                });\n                cols.filter(function (d) { return isCategoricalColumn(d) && !d.isHidden(); }).forEach(function (col) {\n                    var header = node.querySelector(\"div.header[data-id=\\\"\" + col.id + \"\\\"]\");\n                    data.forEach(function (d, i) {\n                        var cats = col.getCategories(d, indices[i]);\n                        (cats || []).forEach(function (cat) {\n                            header.querySelector(\"div.bar[data-cat=\\\"\" + cat + \"\\\"]\").classList.add('selected');\n                        });\n                    });\n                });\n            });\n        });\n    };\n    HeaderRenderer.prototype.renderRankingButtons = function (rankings, rankingsOffsets) {\n        var $rankingbuttons = this.$node.selectAll('div.rankingbuttons').data(rankings);\n        $rankingbuttons.enter().append('div')\n            .classed('rankingbuttons', true)\n            .call(this.options.rankingButtons);\n        $rankingbuttons.style('left', function (d, i) { return rankingsOffsets[i] + 'px'; });\n        $rankingbuttons.exit().remove();\n    };\n    HeaderRenderer.prototype.update = function () {\n        var _this = this;\n        var that = this;\n        var rankings = this.data.getRankings();\n        var shifts = [], offset = 0, rankingOffsets = [];\n        rankings.forEach(function (ranking) {\n            offset += ranking.flatten(shifts, offset, 1, _this.options.columnPadding) + _this.options.slopeWidth;\n            rankingOffsets.push(offset - _this.options.slopeWidth);\n        });\n        //real width\n        offset -= this.options.slopeWidth;\n        var totalWidth = offset;\n        // fix for #179\n        this.$node.select('div.drop').style('width', totalWidth + 'px');\n        var columns = shifts.map(function (d) { return d.col; });\n        //update all if needed\n        if (this.options.histograms && this.histCache.size === 0 && rankings.length > 0) {\n            this.updateHist();\n        }\n        this.renderColumns(columns, shifts);\n        if (this.options.rankingButtons !== dummyRankingButtonHook) {\n            this.renderRankingButtons(rankings, rankingOffsets);\n        }\n        function countMultiLevel(c) {\n            if (isMultiLevelColumn(c) && !c.getCollapsed() && !c.getCompressed()) {\n                return 1 + Math.max.apply(Math, c.children.map(countMultiLevel));\n            }\n            return 1;\n        }\n        var levels = Math.max.apply(Math, columns.map(countMultiLevel));\n        var height = (this.options.histograms ? this.options.headerHistogramHeight : this.options.headerHeight) + (levels - 1) * this.options.headerHeight;\n        if (this.options.autoRotateLabels) {\n            //check if we have overflows\n            var rotatedAny = false;\n            this.$node.selectAll('div.header')\n                .style('height', height + 'px').select('div.lu-label').each(function (d) {\n                var w = this.querySelector('span.lu-label').offsetWidth;\n                var actWidth = d.getWidth();\n                if (w > (actWidth + 30)) {\n                    d3.select(this).style('transform', \"rotate(\" + that.options.rotationDegree + \"deg)\");\n                    rotatedAny = true;\n                }\n                else {\n                    d3.select(this).style('transform', null);\n                }\n            });\n            this.$node.selectAll('div.header').style('margin-top', rotatedAny ? this.options.rotationHeight + 'px' : null);\n            height += rotatedAny ? this.options.rotationHeight : 0;\n        }\n        this.$node.style('height', height + 'px');\n    };\n    HeaderRenderer.prototype.createToolbar = function ($node) {\n        var _this = this;\n        var filterDialogs = this.options.filterDialogs, provider = this.data, that = this;\n        var $regular = $node.filter(function (d) { return !(d instanceof Ranking); }), $stacked = $node.filter(function (d) { return d instanceof StackColumn; }), $multilevel = $node.filter(function (d) { return isMultiLevelColumn(d); });\n        //edit weights\n        $stacked.append('i').attr('class', 'fa fa-tasks').attr('title', 'Edit Weights').on('click', function (d) {\n            openEditWeightsDialog(d, d3.select(this.parentNode.parentNode));\n            d3.event.stopPropagation();\n        });\n        //rename\n        $regular.append('i').attr('class', 'fa fa-pencil-square-o').attr('title', 'Rename').on('click', function (d) {\n            openRenameDialog(d, d3.select(this.parentNode.parentNode));\n            d3.event.stopPropagation();\n        });\n        //clone\n        $regular.append('i').attr('class', 'fa fa-code-fork').attr('title', 'Generate Snapshot').on('click', function (d) {\n            provider.takeSnapshot(d);\n            d3.event.stopPropagation();\n        });\n        //Heatmap Sort\n        $node.filter(function (d) { return d instanceof MultiValueColumn; }).append('i').attr('class', 'fa fa-sort').attr('title', 'Sort By').on('click', function (d) {\n            sortDialog(d, d3.select(this.parentNode.parentNode));\n            d3.event.stopPropagation();\n        });\n        //\n        // $node.filter((d) => d instanceof MultiValueColumn).append('i').attr('class', 'fa fa-sort').attr('title', 'Sort By').on('click', function (d) {\n        //   sortDialogSparkline(<MultiValueColumn>d, d3.select(this.parentNode.parentNode));\n        //   (<MouseEvent>d3.event).stopPropagation();\n        // });\n        //\n        //\n        // $node.filter((d) => d instanceof MultiValueColumn).append('i').attr('class', 'fa fa-sort').attr('title', 'Sort By').on('click', function (d) {\n        //   sortDialogBoxplot(<MultiValueColumn>d, d3.select(this.parentNode.parentNode));\n        //   (<MouseEvent>d3.event).stopPropagation();\n        // });\n        //\n        //\n        // $node.filter((d) => d instanceof MultiValueColumn).append('i').attr('class', 'fa fa-sort').attr('title', 'Sort By').on('click', function (d) {\n        //   sortDialogThresholdBar(<MultiValueColumn>d, d3.select(this.parentNode.parentNode));\n        //   (<MouseEvent>d3.event).stopPropagation();\n        // });\n        //\n        //\n        // $node.filter((d) => d instanceof MultiValueColumn).append('i').attr('class', 'fa fa-sort').attr('title', 'Sort By').on('click', function (d) {\n        //\n        //   sortDialogVerticalBar(<MultiValueColumn>d, d3.select(this.parentNode.parentNode));\n        //   (<MouseEvent>d3.event).stopPropagation();\n        // });\n        //Renderer Change\n        $node.filter(function (d) { return d instanceof MultiValueColumn || d instanceof NumberColumn; }).append('i').attr('class', 'fa fa-exchange').attr('title', 'Change Visualization').on('click', function (d) {\n            renderertypedialog(d, d3.select(this.parentNode.parentNode));\n            d3.event.stopPropagation();\n        });\n        //edit link\n        $node.filter(function (d) { return d instanceof LinkColumn; }).append('i').attr('class', 'fa fa-external-link').attr('title', 'Edit Link Pattern').on('click', function (d) {\n            openEditLinkDialog(d, d3.select(this.parentNode.parentNode), [].concat(d.desc.templates || [], that.options.linkTemplates), that.options.idPrefix);\n            d3.event.stopPropagation();\n        });\n        //edit script\n        $node.filter(function (d) { return d instanceof ScriptColumn; }).append('i').attr('class', 'fa fa-gears').attr('title', 'Edit Combine Script').on('click', function (d) {\n            openEditScriptDialog(d, d3.select(this.parentNode.parentNode));\n            d3.event.stopPropagation();\n        });\n        //filter\n        $node.filter(function (d) { return filterDialogs.hasOwnProperty(d.desc.type); }).append('i').attr('class', 'fa fa-filter').attr('title', 'Filter').on('click', function (d) {\n            filterDialogs[d.desc.type](d, d3.select(this.parentNode.parentNode), provider, that.options.idPrefix);\n            d3.event.stopPropagation();\n        });\n        //search\n        $node.filter(function (d) { return _this.options.searchAble(d); }).append('i').attr('class', 'fa fa-search').attr('title', 'Search').on('click', function (d) {\n            openSearchDialog(d, d3.select(this.parentNode.parentNode), provider);\n            d3.event.stopPropagation();\n        });\n        //collapse\n        $regular.append('i')\n            .attr('class', 'fa')\n            .classed('fa-toggle-left', function (d) { return !d.getCompressed(); })\n            .classed('fa-toggle-right', function (d) { return d.getCompressed(); })\n            .attr('title', '(Un)Collapse')\n            .on('click', function (d) {\n            d.setCompressed(!d.getCompressed());\n            d3.select(this)\n                .classed('fa-toggle-left', !d.getCompressed())\n                .classed('fa-toggle-right', d.getCompressed());\n            d3.event.stopPropagation();\n        });\n        //compress\n        $multilevel.append('i')\n            .attr('class', 'fa')\n            .classed('fa-compress', function (d) { return !d.getCollapsed(); })\n            .classed('fa-expand', function (d) { return d.getCollapsed(); })\n            .attr('title', 'Compress/Expand')\n            .on('click', function (d) {\n            d.setCollapsed(!d.getCollapsed());\n            d3.select(this)\n                .classed('fa-compress', !d.getCollapsed())\n                .classed('fa-expand', d.getCollapsed());\n            d3.event.stopPropagation();\n        });\n        //remove\n        $node.append('i').attr('class', 'fa fa-times').attr('title', 'Hide').on('click', function (d) {\n            if (d instanceof RankColumn) {\n                provider.removeRanking(d.findMyRanker());\n                if (provider.getRankings().length === 0) {\n                    provider.pushRanking();\n                }\n            }\n            else {\n                d.removeMe();\n            }\n            d3.event.stopPropagation();\n        });\n    };\n    HeaderRenderer.prototype.updateFreeze = function (left) {\n        var numColumns = this.options.freezeCols;\n        this.$node.selectAll('div.header')\n            .style('z-index', function (d, i) { return i < numColumns ? 1 : null; })\n            .style('transform', function (d, i) { return i < numColumns ? \"translate(\" + left + \"px,0)\" : null; });\n    };\n    HeaderRenderer.prototype.renderColumns = function (columns, shifts, $base, clazz) {\n        var _this = this;\n        if ($base === void 0) { $base = this.$node; }\n        if (clazz === void 0) { clazz = 'header'; }\n        var that = this;\n        var $headers = $base.selectAll('div.' + clazz).data(columns, function (d) { return d.id; });\n        var $headers_enter = $headers.enter().append('div').attr('class', clazz)\n            .on('click', function (d) {\n            var mevent = d3.event;\n            if (_this.options.manipulative && !mevent.defaultPrevented && mevent.currentTarget === mevent.target) {\n                d.toggleMySorting();\n            }\n        });\n        var $header_enter_div = $headers_enter.append('div').classed('lu-label', true)\n            .on('click', function (d) {\n            var mevent = d3.event;\n            if (_this.options.manipulative && !mevent.defaultPrevented) {\n                d.toggleMySorting();\n            }\n        })\n            .on('dragstart', function (d) {\n            var e = d3.event;\n            e.dataTransfer.effectAllowed = 'copyMove'; //none, copy, copyLink, copyMove, link, linkMove, move, all\n            e.dataTransfer.setData('text/plain', d.label);\n            e.dataTransfer.setData('application/caleydo-lineup-column-ref', d.id);\n            var ref = JSON.stringify(_this.data.toDescRef(d.desc));\n            e.dataTransfer.setData('application/caleydo-lineup-column', ref);\n            if (isNumberColumn(d)) {\n                e.dataTransfer.setData('application/caleydo-lineup-column-number', ref);\n                e.dataTransfer.setData('application/caleydo-lineup-column-number-ref', d.id);\n            }\n        });\n        $header_enter_div.append('i').attr('class', 'fa fa sort_indicator');\n        $header_enter_div.append('span').classed('lu-label', true).attr({\n            'draggable': this.options.manipulative\n        });\n        if (this.options.manipulative) {\n            $headers_enter.append('div').classed('handle', true)\n                .call(this.dragHandler)\n                .style('width', this.options.columnPadding + 'px')\n                .call(this.dropHandler);\n            $headers_enter.append('div').classed('toolbar', true).call(this.createToolbar.bind(this));\n        }\n        if (this.options.histograms) {\n            $headers_enter.append('div').classed('histogram', true);\n        }\n        $headers.style({\n            width: function (d, i) { return (shifts[i].width + _this.options.columnPadding) + 'px'; },\n            left: function (d, i) { return shifts[i].offset + 'px'; },\n            'background-color': function (d) { return d.color; }\n        });\n        $headers.attr({\n            'class': function (d) { return (clazz + \" \" + (d.cssClass || '') + \" \" + (d.getCompressed() ? 'compressed' : '') + \" \" + d.headerCssClass + \" \" + (_this.options.autoRotateLabels ? 'rotateable' : '') + \" \" + (d.isFiltered() ? 'filtered' : '')); },\n            title: function (d) { return toFullTooltip(d); },\n            'data-id': function (d) { return d.id; }\n        });\n        $headers.select('i.sort_indicator').attr('class', function (d) {\n            var r = d.findMyRanker();\n            if (r && r.getSortCriteria().col === d) {\n                return 'sort_indicator fa fa-sort-' + (r.getSortCriteria().asc ? 'asc' : 'desc');\n            }\n            return 'sort_indicator fa';\n        });\n        $headers.select('span.lu-label').text(function (d) { return d.label; });\n        $headers.filter(function (d) { return isMultiLevelColumn(d); }).each(function (col) {\n            if (col.getCollapsed() || col.getCompressed()) {\n                d3.select(this).selectAll('div.' + clazz + '_i').remove();\n            }\n            else {\n                var s_shifts = [];\n                col.flatten(s_shifts, 0, 1, that.options.columnPadding);\n                var s_columns = s_shifts.map(function (d) { return d.col; });\n                that.renderColumns(s_columns, s_shifts, d3.select(this), clazz + (clazz.substr(clazz.length - 2) !== '_i' ? '_i' : ''));\n            }\n        }).select('div.lu-label').call(dropAble(['application/caleydo-lineup-column-number-ref', 'application/caleydo-lineup-column-number'], function (data, d, copy) {\n            var col = null;\n            if ('application/caleydo-lineup-column-number-ref' in data) {\n                var id = data['application/caleydo-lineup-column-number-ref'];\n                col = _this.data.find(id);\n                if (copy) {\n                    col = _this.data.clone(col);\n                }\n                else if (col) {\n                    col.removeMe();\n                }\n            }\n            else {\n                var desc = JSON.parse(data['application/caleydo-lineup-column-number']);\n                col = _this.data.create(_this.data.fromDescRef(desc));\n            }\n            return d.push(col) != null;\n        }));\n        if (this.options.histograms) {\n            $headers.filter(function (d) { return isCategoricalColumn(d); }).each(function (col) {\n                var $this = d3.select(this).select('div.histogram');\n                var hist = that.histCache.get(col.id);\n                if (hist) {\n                    hist.then(function (stats) {\n                        var $bars = $this.selectAll('div.bar').data(stats.hist);\n                        $bars.enter().append('div').classed('bar', true);\n                        var sx = d3.scale.ordinal().domain(col.categories).rangeBands([0, 100], 0.1);\n                        var sy = d3.scale.linear().domain([0, stats.maxBin]).range([0, 100]);\n                        $bars.style({\n                            left: function (d) { return sx(d.cat) + '%'; },\n                            width: function (d) { return sx.rangeBand() + '%'; },\n                            top: function (d) { return (100 - sy(d.y)) + '%'; },\n                            height: function (d) { return sy(d.y) + '%'; },\n                            'background-color': function (d) { return col.colorOf(d.cat); }\n                        }).attr({\n                            title: function (d) { return (d.cat + \": \" + d.y); },\n                            'data-cat': function (d) { return d.cat; }\n                        });\n                        $bars.exit().remove();\n                    });\n                }\n            });\n            $headers.filter(function (d) { return d instanceof NumberColumn; }).each(function (col) {\n                var $this = d3.select(this).select('div.histogram');\n                var hist = that.histCache.get(col.id);\n                if (hist) {\n                    hist.then(function (stats) {\n                        var $bars = $this.selectAll('div.bar').data(stats.hist);\n                        $bars.enter().append('div').classed('bar', true);\n                        var sx = d3.scale.ordinal().domain(d3.range(stats.hist.length).map(String)).rangeBands([0, 100], 0.1);\n                        var sy = d3.scale.linear().domain([0, stats.maxBin]).range([0, 100]);\n                        $bars.style({\n                            left: function (d, i) { return sx(String(i)) + '%'; },\n                            width: function (d, i) { return sx.rangeBand() + '%'; },\n                            top: function (d) { return (100 - sy(d.y)) + '%'; },\n                            height: function (d) { return sy(d.y) + '%'; }\n                        }).attr({\n                            title: function (d, i) { return (\"Bin \" + i + \": \" + d.y); },\n                            'data-x': function (d) { return d.x; }\n                        });\n                        $bars.exit().remove();\n                        var $mean = $this.select('div.mean');\n                        if ($mean.empty()) {\n                            $mean = $this.append('div').classed('mean', true);\n                        }\n                        $mean.style('left', (stats.mean * 100) + '%');\n                    });\n                }\n            });\n        }\n        $headers.exit().remove();\n    };\n    return HeaderRenderer;\n}());\nexport default HeaderRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/HeaderRenderer.ts\n// module id = 26\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nexport { default as HeaderRenderer, IRankingHook, dummyRankingButtonHook } from './HeaderRenderer';\nexport { default as PoolRenderer } from './PoolRenderer';\nexport { ISlicer, IBodyRenderer } from './ABodyRenderer';\nimport SVGBodyRenderer from './SVGBodyRenderer';\nimport HTMLBodyRenderer from './HTMLBodyRenderer';\nimport CanvasBodyRenderer from './CanvasBodyRenderer';\nexport function createBodyRenderer(type, data, parent, slicer, options) {\n    if (type === void 0) { type = 'svg'; }\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case 'svg':\n            return new SVGBodyRenderer(data, parent, slicer, options);\n        case 'html':\n            return new HTMLBodyRenderer(data, parent, slicer, options);\n        case 'canvas':\n            return new CanvasBodyRenderer(data, parent, slicer, options);\n        default:\n            return new SVGBodyRenderer(data, parent, slicer, options);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/index.ts\n// module id = 27\n// module chunks = 0 1","/**\n * a set of simple dialogs for LineUp\n *\n * Created by Samuel Gratzl on 24.08.2015.\n */\nimport StringColumn from './model/StringColumn';\nimport ScriptColumn from './model/ScriptColumn';\nimport NumberColumn from './model/NumberColumn';\nimport { offset } from './utils';\nimport MappingEditor from './mappingeditor';\nimport { select, event as d3event, scale as d3scale, behavior } from 'd3';\nimport * as d3 from 'd3';\nexport function dialogForm(title, body, buttonsWithLabel) {\n    if (buttonsWithLabel === void 0) { buttonsWithLabel = false; }\n    return '<span style=\"font-weight: bold\" class=\"lu-popup-title\">' + title + '</span>' +\n        '<form onsubmit=\"return false\">' +\n        body + '<button type = \"submit\" class=\"ok fa fa-check\" title=\"ok\"></button>' +\n        '<button type = \"reset\" class=\"cancel fa fa-times\" title=\"cancel\"></button>' +\n        '<button type = \"button\" class=\"reset fa fa-undo\" title=\"reset\"></button></form>';\n}\nexport function sortdialogForm(title, body, buttonsWithLabel) {\n    if (buttonsWithLabel === void 0) { buttonsWithLabel = false; }\n    return '<span style=\"font-weight: bold\" class=\"lu-popup-title\">' + title + '</span>' +\n        '<form onsubmit=\"return false\">' + body;\n}\n/**\n * creates a simple popup dialog under the given attachment\n * @param attachment\n * @param title\n * @param body\n * @returns {Selection<any>}\n */\nexport function makePopup(attachement, title, body) {\n    var pos = offset(attachement.node());\n    var $popup = select('body').append('div')\n        .attr({\n        'class': 'lu-popup2'\n    }).style({\n        left: pos.left + 'px',\n        top: pos.top + 'px'\n    }).html(dialogForm(title, body));\n    function movePopup() {\n        //.style(\"left\", (this.parentElement.offsetLeft + (<any>event).dx) + 'px')\n        //.style(\"top\", (this.parentElement.offsetTop + event.dy) + 'px');\n        //const mouse = d3.mouse(this.parentElement);\n        $popup.style({\n            left: (this.parentElement.offsetLeft + d3event.dx) + 'px',\n            top: (this.parentElement.offsetTop + d3event.dy) + 'px'\n        });\n    }\n    $popup.select('span.lu-popup-title').call(behavior.drag().on('drag', movePopup));\n    $popup.on('keydown', function () {\n        if (d3event.which === 27) {\n            $popup.remove();\n        }\n    });\n    var auto = $popup.select('input[autofocus]').node();\n    if (auto) {\n        auto.focus();\n    }\n    return $popup;\n}\nexport function makesortPopup(attachement, title, body) {\n    var pos = offset(attachement.node());\n    var $popup = select('body').append('div')\n        .attr({\n        'class': 'lu-popup2'\n    }).style({\n        left: pos.left + 'px',\n        top: pos.top + 'px'\n    }).html(sortdialogForm(title, body));\n    function movePopup() {\n        //.style(\"left\", (this.parentElement.offsetLeft + (<any>event).dx) + 'px')\n        //.style(\"top\", (this.parentElement.offsetTop + event.dy) + 'px');\n        //const mouse = d3.mouse(this.parentElement);\n        $popup.style({\n            left: (this.parentElement.offsetLeft + d3event.dx) + 'px',\n            top: (this.parentElement.offsetTop + d3event.dy) + 'px'\n        });\n    }\n    $popup.select('span.lu-popup-title').call(behavior.drag().on('drag', movePopup));\n    $popup.on('keydown', function () {\n        if (d3event.which === 27) {\n            $popup.remove();\n        }\n    });\n    var auto = $popup.select('input[autofocus]').node();\n    if (auto) {\n        auto.focus();\n    }\n    return $popup;\n}\n/**\n * opens a rename dialog for the given column\n * @param column the column to rename\n * @param $header the visual header element of this column\n */\nexport function openRenameDialog(column, $header) {\n    var popup = makePopup($header, 'Rename Column', \"\\n    <input type=\\\"text\\\" size=\\\"15\\\" value=\\\"\" + column.label + \"\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\"><br>\\n    <input type=\\\"color\\\" size=\\\"15\\\" value=\\\"\" + column.color + \"\\\" required=\\\"required\\\"><br>\\n    <textarea rows=\\\"5\\\">\" + column.description + \"</textarea><br>\");\n    popup.select('.ok').on('click', function () {\n        var newValue = popup.select('input[type=\"text\"]').property('value');\n        var newColor = popup.select('input[type=\"color\"]').property('value');\n        var newDescription = popup.select('textarea').property('value');\n        column.setMetaData({ label: newValue, color: newColor, description: newDescription });\n        popup.remove();\n    });\n    popup.select('.cancel').on('click', function () {\n        popup.remove();\n    });\n}\n/**\n * opens a dialog for editing the link of a column\n * @param column the column to rename\n * @param $header the visual header element of this column\n */\nexport function openEditLinkDialog(column, $header, templates, idPrefix) {\n    if (templates === void 0) { templates = []; }\n    var t = \"<input type=\\\"text\\\" size=\\\"15\\\" value=\\\"\" + column.getLink() + \"\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\" \" + (templates.length > 0 ? 'list=\"ui' + idPrefix + 'lineupPatternList\"' : '') + \"><br>\";\n    if (templates.length > 0) {\n        t += '<datalist id=\"ui${idPrefix}lineupPatternList\">' + templates.map(function (t) { return (\"<option value=\\\"\" + t + \"\\\">\"); }) + '</datalist>';\n    }\n    var popup = makePopup($header, 'Edit Link ($ as Placeholder)', t);\n    popup.select('.ok').on('click', function () {\n        var newValue = popup.select('input[type=\"text\"]').property('value');\n        column.setLink(newValue);\n        popup.remove();\n    });\n    popup.select('.cancel').on('click', function () {\n        popup.remove();\n    });\n}\n// Renderer type change\nexport function renderertypedialog(column, $header) {\n    var renderertype = column.rendererType();\n    var rendererTypelist = column.getRendererList();\n    var popup = makesortPopup($header, 'Change Visualization </br>', rendererTypelist.map(function (d, i) {\n        return \"<input type=\\\"radio\\\" name=\\\"renderertype\\\" value=\" + d.type + \"  \" + ((renderertype === d.type) ? 'checked' : '') + \"> \" + d.label + \"<br>\";\n    }).join('\\n'));\n    function thiselement() {\n        return this === d3.event.target;\n    }\n    var that;\n    var renderercontent = d3.selectAll('input[name=\"renderertype\"]');\n    renderercontent.on('change', function () {\n        that = this;\n        renderertype = that.value;\n        column.setRendererType(that.value);\n    });\n    d3.select('body').on('click', function () {\n        var outside = renderercontent.filter(thiselement).empty();\n        if (outside) {\n            popup.remove();\n            d3.select(this).on('click', null);\n        }\n    });\n}\n// Sort  Dialog.\nexport function sortDialog(column, $header) {\n    var rank = column.getUserSortBy();\n    var valuestring = ['min', 'max', 'mean', 'median', 'q1', 'q3'];\n    var sortlabel = ['Min', 'Max', 'Mean', 'Median', 'Q1', 'Q3'];\n    var popup = makesortPopup($header, 'Sort By <br>', valuestring.map(function (d, i) {\n        return \"<input type=\\\"radio\\\" name=\\\"multivaluesort\\\" value=\" + d + \"  \" + ((rank === d) ? 'checked' : '') + \" > \" + sortlabel[i] + \" <br>\";\n    }).join('\\n'));\n    function thiselement() {\n        return this === d3.event.target;\n    }\n    var that;\n    var sortcontent = d3.selectAll('input[name=multivaluesort]');\n    sortcontent.on('change', function () {\n        that = this;\n        rank = that.value;\n        column.setUserSortBy(rank);\n    });\n    d3.select('body').on('click', function () {\n        var outside = sortcontent.filter(thiselement).empty();\n        if (outside) {\n            popup.remove();\n            d3.select(this).on('click', null);\n        }\n    });\n}\n/**\n * opens a search dialog for the given column\n * @param column the column to rename\n * @param $header the visual header element of this column\n * @param provider the data provider for the actual search\n */\nexport function openSearchDialog(column, $header, provider) {\n    var popup = makePopup($header, 'Search', '<input type=\"text\" size=\"15\" value=\"\" required=\"required\" autofocus=\"autofocus\"><br><label><input type=\"checkbox\">RegExp</label><br>');\n    popup.select('input[type=\"text\"]').on('input', function () {\n        var search = this.value;\n        if (search.length >= 3) {\n            var isRegex = popup.select('input[type=\"checkbox\"]').property('checked');\n            if (isRegex) {\n                search = new RegExp(search);\n            }\n            provider.searchAndJump(search, column);\n        }\n    });\n    function updateImpl() {\n        var search = popup.select('input[type=\"text\"]').property('value');\n        var isRegex = popup.select('input[type=\"text\"]').property('checked');\n        if (search.length > 0) {\n            if (isRegex) {\n                search = new RegExp(search);\n            }\n            provider.searchAndJump(search, column);\n        }\n        popup.remove();\n    }\n    popup.select('input[type=\"checkbox\"]').on('change', updateImpl);\n    popup.select('.ok').on('click', updateImpl);\n    popup.select('.cancel').on('click', function () {\n        popup.remove();\n    });\n}\n/**\n * opens a dialog for editing the weights of a stack column\n * @param column the column to filter\n * @param $header the visual header element of this column\n */\nexport function openEditWeightsDialog(column, $header) {\n    var weights = column.getWeights(), children = column.children.map(function (d, i) { return ({ col: d, weight: weights[i] * 100 }); });\n    //map weights to pixels\n    var scale = d3scale.linear().domain([0, 100]).range([0, 120]);\n    var $popup = makePopup($header, 'Edit Weights', '<table></table>');\n    //show as a table with inputs and bars\n    var $rows = $popup.select('table').selectAll('tr').data(children);\n    var $rows_enter = $rows.enter().append('tr');\n    $rows_enter.append('td')\n        .append('input').attr({\n        type: 'number',\n        value: function (d) { return d.weight; },\n        min: 0,\n        max: 100,\n        size: 5\n    }).on('input', function (d) {\n        d.weight = +this.value;\n        redraw();\n    });\n    $rows_enter.append('td').append('div')\n        .attr('class', function (d) { return 'bar ' + d.col.cssClass; })\n        .style('background-color', function (d) { return d.col.color; });\n    $rows_enter.append('td').text(function (d) { return d.col.label; });\n    function redraw() {\n        $rows.select('.bar').transition().style('width', function (d) { return scale(d.weight) + 'px'; });\n    }\n    redraw();\n    $popup.select('.cancel').on('click', function () {\n        column.setWeights(weights);\n        $popup.remove();\n    });\n    $popup.select('.reset').on('click', function () {\n        children.forEach(function (d, i) { return d.weight = weights[i] * 100; });\n        $rows.select('input').property('value', function (d) { return d.weight; });\n        redraw();\n    });\n    $popup.select('.ok').on('click', function () {\n        column.setWeights(children.map(function (d) { return d.weight; }));\n        $popup.remove();\n    });\n}\n/**\n * flags the header to be filtered\n * @param $header\n * @param filtered\n */\nfunction markFiltered($header, filtered) {\n    if (filtered === void 0) { filtered = false; }\n    $header.classed('filtered', filtered);\n}\nfunction sortbyName(prop) {\n    return function (a, b) {\n        var av = a[prop], bv = b[prop];\n        if (av.toLowerCase() < bv.toLowerCase()) {\n            return -1;\n        }\n        if (av.toLowerCase() > bv.toLowerCase()) {\n            return 1;\n        }\n        return 0;\n    };\n}\n/**\n * opens a dialog for filtering a categorical column\n * @param column the column to rename\n * @param $header the visual header element of this column\n */\nfunction openCategoricalFilter(column, $header) {\n    var bak = column.getFilter() || [];\n    var popup = makePopup($header, 'Edit Filter', '<div class=\"selectionTable\"><table><thead><th class=\"selectAll\"></th><th>Category</th></thead><tbody></tbody></table></div>');\n    // list all data rows !\n    var colors = column.categoryColors, labels = column.categoryLabels;\n    var trData = column.categories.map(function (d, i) {\n        return { cat: d, label: labels[i], isChecked: bak.length === 0 || bak.indexOf(d) >= 0, color: colors[i] };\n    }).sort(sortbyName('label'));\n    var $rows = popup.select('tbody').selectAll('tr').data(trData);\n    var $rows_enter = $rows.enter().append('tr');\n    $rows_enter.append('td').attr('class', 'checkmark');\n    $rows_enter.append('td').attr('class', 'datalabel').text(function (d) { return d.label; });\n    $rows_enter.on('click', function (d) {\n        d.isChecked = !d.isChecked;\n        redraw();\n    });\n    function redraw() {\n        $rows.select('.checkmark').html(function (d) { return '<i class=\"fa fa-' + ((d.isChecked) ? 'check-' : '') + 'square-o\"></i>'; });\n        $rows.select('.datalabel').style('opacity', function (d) { return d.isChecked ? '1.0' : '.8'; });\n    }\n    redraw();\n    var isCheckedAll = true;\n    function redrawSelectAll() {\n        popup.select('.selectAll').html(function (d) { return '<i class=\"fa fa-' + ((isCheckedAll) ? 'check-' : '') + 'square-o\"></i>'; });\n        popup.select('thead').on('click', function (d) {\n            isCheckedAll = !isCheckedAll;\n            trData.forEach(function (row) { return row.isChecked = isCheckedAll; });\n            redraw();\n            redrawSelectAll();\n        });\n    }\n    redrawSelectAll();\n    function updateData(filter) {\n        markFiltered($header, filter && filter.length > 0 && filter.length < trData.length);\n        column.setFilter(filter);\n    }\n    popup.select('.cancel').on('click', function () {\n        updateData(bak);\n        popup.remove();\n    });\n    popup.select('.reset').on('click', function () {\n        trData.forEach(function (d) { return d.isChecked = true; });\n        redraw();\n        updateData(null);\n    });\n    popup.select('.ok').on('click', function () {\n        var f = trData.filter(function (d) { return d.isChecked; }).map(function (d) { return d.cat; });\n        if (f.length === trData.length) {\n            f = [];\n        }\n        updateData(f);\n        popup.remove();\n    });\n}\n/**\n * opens a dialog for filtering a string column\n * @param column the column to filter\n * @param $header the visual header element of this column\n */\nfunction openStringFilter(column, $header) {\n    var bak = column.getFilter() || '', bakMissing = bak === StringColumn.FILTER_MISSING;\n    if (bakMissing) {\n        bak = '';\n    }\n    var $popup = makePopup($header, 'Filter', \"<input type=\\\"text\\\" placeholder=\\\"containing...\\\" autofocus=\\\"true\\\" size=\\\"15\\\" value=\\\"\" + ((bak instanceof RegExp) ? bak.source : bak) + \"\\\" autofocus=\\\"autofocus\\\">\\n    <br><label><input type=\\\"checkbox\\\" \" + ((bak instanceof RegExp) ? 'checked=\"checked\"' : '') + \">RegExp</label><br><label><input class=\\\"lu_filter_missing\\\" type=\\\"checkbox\\\" \" + (bakMissing ? 'checked=\"checked\"' : '') + \">Filter Missing</label>\\n    <br>\");\n    function updateData(filter) {\n        markFiltered($header, (filter && filter !== ''));\n        column.setFilter(filter);\n    }\n    function updateImpl(force) {\n        //get value\n        var search = $popup.select('input[type=\"text\"]').property('value');\n        var filterMissing = $popup.select('input[type=\"checkbox\"].lu_filter_missing').property('checked');\n        if (filterMissing && search === '') {\n            search = StringColumn.FILTER_MISSING;\n        }\n        if (search === '') {\n            updateData(search);\n            return;\n        }\n        if (search.length >= 3 || force) {\n            var isRegex = $popup.select('input[type=\"checkbox\"]:first-of-type').property('checked');\n            if (isRegex && search !== StringColumn.FILTER_MISSING) {\n                search = new RegExp(search);\n            }\n            updateData(search);\n        }\n    }\n    $popup.selectAll('input[type=\"checkbox\"]').on('change', updateImpl);\n    $popup.select('input[type=\"text\"]').on('input', updateImpl);\n    $popup.select('.cancel').on('click', function () {\n        $popup.select('input[type=\"text\"]').property('value', bak || '');\n        $popup.select('input[type=\"checkbox\"]:first-of-type').property('checked', bak instanceof RegExp ? 'checked' : null);\n        $popup.select('input[type=\"checkbox\"].lu_filter_missing').property('checked', bakMissing ? 'checked' : null);\n        updateData(bak);\n        $popup.remove();\n    });\n    $popup.select('.reset').on('click', function () {\n        $popup.select('input[type=\"text\"]').property('value', '');\n        $popup.selectAll('input[type=\"checkbox\"]').property('checked', null);\n        updateData(null);\n    });\n    $popup.select('.ok').on('click', function () {\n        updateImpl(true);\n        $popup.remove();\n    });\n}\n/**\n * opens a dialog for filtering a boolean column\n * @param column the column to filter\n * @param $header the visual header element of this column\n */\nfunction openBooleanFilter(column, $header) {\n    var bak = column.getFilter();\n    var $popup = makePopup($header, 'Filter', \"<label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"null\\\" \" + (bak === null ? 'checked=\"checked\"' : '') + \">No Filter</label><br>\\n     <label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"true\\\" \" + (bak === true ? 'checked=\"checked\"' : '') + \">True</label><br>\\n     <label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"false\\\" \" + (bak === false ? 'checked=\"checked\"' : '') + \">False</label>\\n    <br>\");\n    function updateData(filter) {\n        markFiltered($header, (filter !== null));\n        column.setFilter(filter);\n    }\n    function updateImpl(force) {\n        //get value\n        var isTrue = $popup.select('input[type=\"radio\"][value=\"true\"]').property('checked');\n        var isFalse = $popup.select('input[type=\"radio\"][value=\"false\"]').property('checked');\n        updateData(isTrue ? true : (isFalse ? false : null));\n    }\n    $popup.selectAll('input[type=\"radio\"]').on('change', updateImpl);\n    $popup.select('.cancel').on('click', function () {\n        updateData(bak);\n        $popup.remove();\n    });\n    $popup.select('.reset').on('click', function () {\n        var v = bak === null ? 'null' : String(bak);\n        $popup.selectAll('input[type=\"radio\"]').property('checked', function () {\n            return this.value === v;\n        });\n        updateData(null);\n    });\n    $popup.select('.ok').on('click', function () {\n        updateImpl(true);\n        $popup.remove();\n    });\n}\n/**\n * opens a dialog for editing the script code\n * @param column the column to edit\n * @param $header the visual header element of this column\n */\nexport function openEditScriptDialog(column, $header) {\n    var bak = column.getScript();\n    var $popup = makePopup($header, 'Edit Script', \"Parameters: <code>values: number[], children: Column[]</code><br>\\n      <textarea autofocus=\\\"true\\\" rows=\\\"5\\\" autofocus=\\\"autofocus\\\" style=\\\"width: 95%;\\\">\" + column.getScript() + \"</textarea><br>\");\n    function updateData(script) {\n        column.setScript(script);\n    }\n    function updateImpl() {\n        //get value\n        var script = $popup.select('textarea').property('value');\n        updateData(script);\n    }\n    $popup.select('.cancel').on('click', function () {\n        $popup.select('textarea').property('value', bak);\n        updateData(bak);\n        $popup.remove();\n    });\n    $popup.select('.reset').on('click', function () {\n        $popup.select('textarea').property('value', ScriptColumn.DEFAULT_SCRIPT);\n        updateData(ScriptColumn.DEFAULT_SCRIPT);\n    });\n    $popup.select('.ok').on('click', function () {\n        updateImpl();\n        $popup.remove();\n    });\n}\n/**\n * opens the mapping editor for a given NumberColumn\n * @param column the column to rename\n * @param $header the visual header element of this column\n * @param data the data provider for illustrating the mapping by example\n */\nfunction openMappingEditor(column, $header, data, idPrefix) {\n    var pos = offset($header.node()), bak = column.getMapping(), original = column.getOriginalMapping(), bakfilter = column.getFilter(), act = bak.clone(), actfilter = bakfilter;\n    var popup = select('body').append('div')\n        .attr({\n        'class': 'lu-popup'\n    }).style({\n        left: pos.left + 'px',\n        top: pos.top + 'px'\n    })\n        .html(dialogForm('Change Mapping', '<div class=\"mappingArea\"></div>'));\n    function applyMapping(newscale, filter) {\n        act = newscale;\n        actfilter = filter;\n        markFiltered($header, !newscale.eq(original) || (bakfilter.min !== filter.min || bakfilter.max !== filter.min || bakfilter.filterMissing !== filter.filterMissing));\n        column.setMapping(newscale);\n        column.setFilter(filter);\n    }\n    var editorOptions = {\n        idPrefix: idPrefix,\n        callback: applyMapping,\n        triggerCallback: 'dragend'\n    };\n    var data_sample = data.mappingSample(column);\n    var editor = new MappingEditor(popup.select('.mappingArea').node(), act, original, actfilter, data_sample, editorOptions);\n    popup.select('.ok').on('click', function () {\n        applyMapping(editor.scale, editor.filter);\n        popup.remove();\n    });\n    popup.select('.cancel').on('click', function () {\n        column.setMapping(bak);\n        markFiltered($header, !bak.eq(original));\n        popup.remove();\n    });\n    popup.select('.reset').on('click', function () {\n        bak = original;\n        act = bak.clone();\n        bakfilter = NumberColumn.noFilter();\n        actfilter = bakfilter;\n        applyMapping(act, actfilter);\n        popup.selectAll('.mappingArea *').remove();\n        editor = new MappingEditor(popup.select('.mappingArea').node(), act, original, actfilter, data_sample, editorOptions);\n    });\n}\n/**\n * opens the mapping editor for a given CategoricalNumberColumn, i.e. to map categories to numbers\n * @param column the column to rename\n * @param $header the visual header element of this column\n */\nfunction openCategoricalMappingEditor(column, $header) {\n    var bak = column.getFilter() || [];\n    var scale = d3scale.linear().domain([0, 100]).range([0, 120]);\n    var $popup = makePopup($header, 'Edit Categorical Mapping', '<div class=\"selectionTable\"><table><thead><th class=\"selectAll\"></th><th colspan=\"2\">Scale</th><th>Category</th></thead><tbody></tbody></table></div>');\n    var range = column.getScale().range, colors = column.categoryColors, labels = column.categoryLabels;\n    var trData = column.categories.map(function (d, i) {\n        return {\n            cat: d,\n            label: labels[i],\n            isChecked: bak.length === 0 || bak.indexOf(d) >= 0,\n            range: range[i] * 100,\n            color: colors[i]\n        };\n    }).sort(sortbyName('label'));\n    var $rows = $popup.select('tbody').selectAll('tr').data(trData);\n    var $rows_enter = $rows.enter().append('tr');\n    $rows_enter.append('td').attr('class', 'checkmark').on('click', function (d) {\n        d.isChecked = !d.isChecked;\n        redraw();\n    });\n    $rows_enter.append('td')\n        .append('input').attr({\n        type: 'number',\n        value: function (d) { return d.range; },\n        min: 0,\n        max: 100,\n        size: 5\n    }).on('input', function (d) {\n        d.range = +this.value;\n        redraw();\n    });\n    $rows_enter.append('td').append('div').attr('class', 'bar').style('background-color', function (d) { return d.color; });\n    $rows_enter.append('td').attr('class', 'datalabel').text(function (d) { return d.label; });\n    function redraw() {\n        $rows.select('.checkmark').html(function (d) { return '<i class=\"fa fa-' + ((d.isChecked) ? 'check-' : '') + 'square-o\"></i>'; });\n        $rows.select('.bar').transition().style('width', function (d) { return scale(d.range) + 'px'; });\n        $rows.select('.datalabel').style('opacity', function (d) { return d.isChecked ? '1.0' : '.8'; });\n    }\n    redraw();\n    var isCheckedAll = true;\n    function redrawSelectAll() {\n        $popup.select('.selectAll').html(function (d) { return '<i class=\"fa fa-' + ((isCheckedAll) ? 'check-' : '') + 'square-o\"></i>'; });\n        $popup.select('thead').on('click', function (d) {\n            isCheckedAll = !isCheckedAll;\n            trData.forEach(function (row) { return row.isChecked = isCheckedAll; });\n            redraw();\n            redrawSelectAll();\n        });\n    }\n    redrawSelectAll();\n    function updateData(filter) {\n        markFiltered($header, filter && filter.length > 0 && filter.length < trData.length);\n        column.setFilter(filter);\n    }\n    $popup.select('.cancel').on('click', function () {\n        updateData(bak);\n        column.setMapping(range);\n        $popup.remove();\n    });\n    $popup.select('.reset').on('click', function () {\n        trData.forEach(function (d) {\n            d.isChecked = true;\n            d.range = 50;\n        });\n        redraw();\n        updateData(null);\n        column.setMapping(trData.map(function () { return 1; }));\n    });\n    $popup.select('.ok').on('click', function () {\n        var f = trData.filter(function (d) { return d.isChecked; }).map(function (d) { return d.cat; });\n        if (f.length === trData.length) {\n            f = [];\n        }\n        updateData(f);\n        column.setMapping(trData.map(function (d) { return d.range / 100; }));\n        $popup.remove();\n    });\n}\n/**\n * returns all known filter dialogs mappings by type\n * @return\n */\nexport function filterDialogs() {\n    return {\n        string: openStringFilter,\n        categorical: openCategoricalFilter,\n        number: openMappingEditor,\n        ordinal: openCategoricalMappingEditor,\n        boolean: openBooleanFilter\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui_dialogs.ts\n// module id = 28\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/style.scss\n// module id = 29\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { createRankDesc } from '../model';\nimport Ranking from '../model/Ranking';\nimport ADataProvider from './ADataProvider';\nfunction isComplexAccessor(column) {\n    // something like a.b or a[4]\n    return typeof column === 'string' && column.indexOf('.') >= 0;\n}\nfunction resolveComplex(column, row) {\n    var resolve = function (obj, col) {\n        if (obj === undefined) {\n            return obj; // propagate invalid values\n        }\n        if (/\\d+/.test(col)) {\n            return obj[+col];\n        }\n        return obj[col];\n    };\n    return column.split('.').reduce(resolve, row);\n}\nfunction rowGetter(row, index, id, desc) {\n    var column = desc.column;\n    if (isComplexAccessor(column)) {\n        return resolveComplex(column, row);\n    }\n    return row[column];\n}\n/**\n * common base implementation of a DataProvider with a fixed list of column descriptions\n */\nvar ACommonDataProvider = (function (_super) {\n    __extends(ACommonDataProvider, _super);\n    function ACommonDataProvider(columns, options) {\n        if (columns === void 0) { columns = []; }\n        if (options === void 0) { options = {}; }\n        _super.call(this, options);\n        this.columns = columns;\n        this.rankingIndex = 0;\n        /**\n         * the local ranking orders\n         * @type {{}}\n         */\n        this.ranks = new Map();\n        //generate the accessor\n        columns.forEach(function (d) {\n            d.accessor = d.accessor || rowGetter;\n            d.label = d.label || d.column;\n        });\n    }\n    ACommonDataProvider.prototype.rankAccessor = function (row, index, id, desc, ranking) {\n        return (this.ranks[ranking.id].indexOf(index)) + 1;\n    };\n    ACommonDataProvider.prototype.cloneRanking = function (existing) {\n        var _this = this;\n        var id = this.nextRankingId();\n        var new_ = new Ranking(id);\n        if (existing) {\n            //copy the ranking\n            this.ranks[id] = this.ranks[existing.id];\n            //TODO better cloning\n            existing.children.forEach(function (child) {\n                _this.push(new_, child.desc);\n            });\n        }\n        else {\n            new_.push(this.create(createRankDesc()));\n        }\n        return new_;\n    };\n    ACommonDataProvider.prototype.cleanUpRanking = function (ranking) {\n        //delete all stored information\n        delete this.ranks[ranking.id];\n    };\n    ACommonDataProvider.prototype.sort = function (ranking) {\n        var _this = this;\n        //use the server side to sort\n        return this.sortImpl(ranking).then(function (argsort) {\n            //store the result\n            _this.ranks[ranking.id] = argsort;\n            return argsort;\n        });\n    };\n    /**\n     * adds another column description to this data provider\n     * @param column\n     */\n    ACommonDataProvider.prototype.pushDesc = function (column) {\n        var d = column;\n        d.accessor = d.accessor || rowGetter;\n        d.label = column.label || d.column;\n        this.columns.push(column);\n        this.fire(ADataProvider.EVENT_ADD_DESC, d);\n    };\n    ACommonDataProvider.prototype.getColumns = function () {\n        return this.columns.slice();\n    };\n    ACommonDataProvider.prototype.findDesc = function (ref) {\n        return this.columns.filter(function (c) { return c.column === ref; })[0];\n    };\n    /**\n     * identify by the tuple type@columnname\n     * @param desc\n     * @returns {string}\n     */\n    ACommonDataProvider.prototype.toDescRef = function (desc) {\n        return desc.column ? desc.type + '@' + desc.column : desc;\n    };\n    ACommonDataProvider.prototype.fromDescRef = function (descRef) {\n        if (typeof (descRef) === 'string') {\n            return this.columns.filter(function (d) { return d.type + '@' + d.column === descRef; })[0];\n        }\n        return descRef;\n    };\n    ACommonDataProvider.prototype.restore = function (dump) {\n        _super.prototype.restore.call(this, dump);\n        this.rankingIndex = 1 + Math.max.apply(Math, this.getRankings().map(function (r) { return +r.id.substring(4); }));\n    };\n    ACommonDataProvider.prototype.nextRankingId = function () {\n        return 'rank' + (this.rankingIndex++);\n    };\n    return ACommonDataProvider;\n}(ADataProvider));\nexport default ACommonDataProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/ACommonDataProvider.ts\n// module id = 30\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from '../model/Column';\nimport { merge } from '../utils';\nimport * as d3 from 'd3';\nimport ACommonDataProvider from './ACommonDataProvider';\n/**\n * computes the simple statistics of an array using d3 histogram\n * @param arr the data array\n * @param acc accessor function\n * @param range the total value range\n * @returns {{min: number, max: number, count: number, hist: histogram.Bin<number>[]}}\n */\nfunction computeStats(arr, indices, acc, range) {\n    if (arr.length === 0) {\n        return {\n            min: NaN,\n            max: NaN,\n            mean: NaN,\n            count: 0,\n            maxBin: 0,\n            hist: []\n        };\n    }\n    var indexAccessor = function (a, i) { return acc(a, indices[i]); };\n    var hist = d3.layout.histogram().value(indexAccessor);\n    if (range) {\n        hist.range(function () { return range; });\n    }\n    var ex = d3.extent(arr, indexAccessor);\n    var hist_data = hist(arr);\n    return {\n        min: ex[0],\n        max: ex[1],\n        mean: d3.mean(arr, indexAccessor),\n        count: arr.length,\n        maxBin: d3.max(hist_data, function (d) { return d.y; }),\n        hist: hist_data\n    };\n}\n/**\n * computes a categorical histogram\n * @param arr the data array\n * @param acc the accessor\n * @param categories the list of known categories\n * @returns {{hist: {cat: string, y: number}[]}}\n */\nfunction computeHist(arr, indices, acc, categories) {\n    var m = new Map();\n    categories.forEach(function (cat) { return m.set(cat, 0); });\n    arr.forEach(function (a, i) {\n        var vs = acc(a, indices[i]);\n        if (vs == null) {\n            return;\n        }\n        vs.forEach(function (v) {\n            m.set(v, (m.get(v) || 0) + 1);\n        });\n    });\n    var entries = [];\n    m.forEach(function (v, k) { return entries.push({ cat: k, y: v }); });\n    return {\n        maxBin: Math.max.apply(Math, entries.map(function (d) { return d.y; })),\n        hist: entries\n    };\n}\n/**\n * a data provider based on an local array\n */\nvar LocalDataProvider = (function (_super) {\n    __extends(LocalDataProvider, _super);\n    function LocalDataProvider(data, columns, options) {\n        if (columns === void 0) { columns = []; }\n        if (options === void 0) { options = {}; }\n        _super.call(this, columns, options);\n        this.data = data;\n        this.options = {\n            /**\n             * whether the filter should be applied to all rankings regardless where they are\n             */\n            filterGlobally: false\n        };\n        merge(this.options, options);\n        var that = this;\n        this.reorderall = function () {\n            //fire for all other rankings a dirty order event, too\n            var ranking = this.source;\n            that.getRankings().forEach(function (r) {\n                if (r !== ranking) {\n                    r.dirtyOrder();\n                }\n            });\n        };\n    }\n    /**\n     * replaces the dataset rows with a new one\n     * @param data\n     */\n    LocalDataProvider.prototype.setData = function (data) {\n        this.data = data;\n        this.reorderall();\n    };\n    LocalDataProvider.prototype.clearData = function () {\n        this.setData([]);\n    };\n    /**\n     * append rows to the dataset\n     * @param data\n     */\n    LocalDataProvider.prototype.appendData = function (data) {\n        this.data.push.apply(this.data, data);\n        this.reorderall();\n    };\n    LocalDataProvider.prototype.cloneRanking = function (existing) {\n        var new_ = _super.prototype.cloneRanking.call(this, existing);\n        if (this.options.filterGlobally) {\n            new_.on(Column.EVENT_FILTER_CHANGED + '.reorderall', this.reorderall);\n        }\n        return new_;\n    };\n    LocalDataProvider.prototype.cleanUpRanking = function (ranking) {\n        if (this.options.filterGlobally) {\n            ranking.on(Column.EVENT_FILTER_CHANGED + '.reorderall', null);\n        }\n        _super.prototype.cleanUpRanking.call(this, ranking);\n    };\n    LocalDataProvider.prototype.sortImpl = function (ranking) {\n        if (this.data.length === 0) {\n            return Promise.resolve([]);\n        }\n        //wrap in a helper and store the initial index\n        var helper = this.data.map(function (r, i) { return ({ row: r, i: i }); });\n        //do the optional filtering step\n        if (this.options.filterGlobally) {\n            var filtered_1 = this.getRankings().filter(function (d) { return d.isFiltered(); });\n            if (filtered_1.length > 0) {\n                helper = helper.filter(function (d) { return filtered_1.every(function (f) { return f.filter(d.row, d.i); }); });\n            }\n        }\n        else if (ranking.isFiltered()) {\n            helper = helper.filter(function (d) { return ranking.filter(d.row, d.i); });\n        }\n        //sort by the ranking column\n        helper.sort(function (a, b) { return ranking.comparator(a.row, b.row, a.i, b.i); });\n        //store the ranking index and create an argsort version, i.e. rank 0 -> index i\n        return Promise.resolve(helper.map(function (r) { return r.i; }));\n    };\n    LocalDataProvider.prototype.viewRaw = function (indices) {\n        var _this = this;\n        //filter invalid indices\n        var l = this.data.length;\n        return indices.filter(function (i) { return i >= 0 && i < l; }).map(function (index) { return _this.data[index]; });\n    };\n    LocalDataProvider.prototype.view = function (indices) {\n        return Promise.resolve(this.viewRaw(indices));\n    };\n    LocalDataProvider.prototype.fetch = function (orders) {\n        var _this = this;\n        var l = this.data.length;\n        return orders.map(function (order) { return order.filter(function (i) { return i >= 0 && i < l; }).map(function (index) { return Promise.resolve({\n            v: _this.data[index],\n            dataIndex: index\n        }); }); });\n    };\n    /**\n     * helper for computing statistics\n     * @param indices\n     * @returns {{stats: (function(INumberColumn): *), hist: (function(ICategoricalColumn): *)}}\n     */\n    LocalDataProvider.prototype.stats = function (indices) {\n        var _this = this;\n        var d = null;\n        var getD = function () { return d === null ? (d = _this.viewRaw(indices)) : d; };\n        return {\n            stats: function (col) { return Promise.resolve(computeStats(getD(), indices, col.getNumber.bind(col), [0, 1])); },\n            hist: function (col) { return Promise.resolve(computeHist(getD(), indices, col.getCategories.bind(col), col.categories)); }\n        };\n    };\n    LocalDataProvider.prototype.mappingSample = function (col) {\n        var _this = this;\n        var MAX_SAMPLE = 500; //at most 500 sample lines\n        var l = this.data.length;\n        if (l <= MAX_SAMPLE) {\n            return Promise.resolve(this.data.map(col.getRawValue.bind(col)));\n        }\n        //randomly select 500 elements\n        var indices = [];\n        for (var i = 0; i < MAX_SAMPLE; ++i) {\n            var j = Math.floor(Math.random() * (l - 1));\n            while (indices.indexOf(j) >= 0) {\n                j = Math.floor(Math.random() * (l - 1));\n            }\n            indices.push(j);\n        }\n        return Promise.resolve(indices.map(function (i) { return col.getRawValue(_this.data[i], i); }));\n    };\n    LocalDataProvider.prototype.searchAndJump = function (search, col) {\n        var _this = this;\n        //case insensitive search\n        search = typeof search === 'string' ? search.toLowerCase() : search;\n        var f = typeof search === 'string' ? function (v) { return v.toLowerCase().indexOf(search) >= 0; } : search.test.bind(search);\n        var indices = d3.range(this.data.length).filter(function (i) { return f(col.getLabel(_this.data[i], i)); });\n        this.jumpToNearest(indices);\n    };\n    return LocalDataProvider;\n}(ACommonDataProvider));\nexport default LocalDataProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/LocalDataProvider.ts\n// module id = 31\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nimport { select, scale, behavior, event as d3event, mouse } from 'd3';\nimport { merge } from './utils';\nimport { ScaleMappingFunction, ScriptMappingFunction } from './model/NumberColumn';\nfunction clamp(v, min, max) {\n    return Math.max(Math.min(v, max), min);\n}\nfunction unique(data) {\n    var s = new Set();\n    data.forEach(function (d) { return s.add(d); });\n    var r = [];\n    s.forEach(function (d) { return r.push(d); });\n    return r;\n}\nvar MappingEditor = (function () {\n    function MappingEditor(parent, scale_, original, old_filter, dataPromise, options) {\n        this.parent = parent;\n        this.scale_ = scale_;\n        this.original = original;\n        this.old_filter = old_filter;\n        this.dataPromise = dataPromise;\n        this.options = {\n            idPrefix: '',\n            width: 370,\n            height: 225,\n            padding_hor: 7,\n            padding_ver: 7,\n            filter_height: 20,\n            radius: 5,\n            callback: function () { return undefined; },\n            callbackThisArg: null,\n            triggerCallback: 'change' //change, dragend\n        };\n        merge(this.options, options);\n        //work on a local copy\n        this.scale_ = scale_.clone();\n        this.build(select(parent));\n    }\n    Object.defineProperty(MappingEditor.prototype, \"scale\", {\n        get: function () {\n            return this.scale_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MappingEditor.prototype, \"filter\", {\n        get: function () {\n            return this.computeFilter();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MappingEditor.prototype.build = function ($root) {\n        var options = this.options, that = this;\n        $root = $root.append('div').classed('lugui-me', true);\n        var width = options.width - options.padding_hor * 2;\n        var height = options.height - options.padding_ver * 2 - options.filter_height;\n        $root.node().innerHTML = \"<form onsubmit=\\\"return false\\\">\\n      <div style=\\\"text-align: center\\\"><label for=\\\"me\" + options.idPrefix + \"mapping_type\\\">Mapping Type: <select id=\\\"me\" + options.idPrefix + \"mapping_type\\\">\\n        <option value=\\\"linear\\\">Linear</option>\\n        <option value=\\\"linear_invert\\\">Invert</option>\\n        <option value=\\\"linear_abs\\\">Absolute</option>\\n        <option value=\\\"log\\\">Log</option>\\n        <option value=\\\"pow1.1\\\">Pow 1.1</option>\\n        <option value=\\\"pow2\\\">Pow 2</option>\\n        <option value=\\\"pow3\\\">Pow 3</option>\\n        <option value=\\\"sqrt\\\">Sqrt</option>\\n        <option value=\\\"script\\\">Custom Script</option>\\n      </select>\\n      </label></div>\\n      <div class=\\\"mapping_area\\\">\\n        <div>\\n          <span>0</span>\\n          <input type=\\\"text\\\" class=\\\"raw_min\\\" id=\\\"me\" + options.idPrefix + \"raw_min\\\" value=\\\"0\\\"><label for=\\\"me\" + options.idPrefix + \"raw_min\\\">Min</label>\\n        </div>\\n        <svg width=\\\"\" + options.width + \"\\\" height=\\\"\" + options.height + \"\\\">\\n          <line y1=\\\"\" + options.padding_ver + \"\\\" y2=\\\"\" + options.padding_ver + \"\\\" x1=\\\"\" + options.padding_hor + \"\\\" x2=\\\"\" + (width + options.padding_hor) + \"\\\" stroke=\\\"black\\\"></line>\\n          <rect class=\\\"adder\\\" x=\\\"\" + options.padding_hor + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"10\\\"></rect>\\n          <line y1=\\\"\" + (options.height - options.filter_height - 5) + \"\\\" y2=\\\"\" + (options.height - options.filter_height - 5) + \"\\\" x1=\\\"\" + options.padding_hor + \"\\\" x2=\\\"\" + (width + options.padding_hor) + \"\\\" stroke=\\\"black\\\"></line>\\n          <rect class=\\\"adder\\\" x=\\\"\" + options.padding_hor + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"10\\\" y=\\\"\" + (options.height - options.filter_height - 10) + \"\\\"></rect>\\n          <g transform=\\\"translate(\" + options.padding_hor + \",\" + options.padding_ver + \")\\\">\\n            <g class=\\\"samples\\\">\\n      \\n            </g>\\n            <g class=\\\"mappings\\\">\\n      \\n            </g>\\n            <g class=\\\"filter\\\" transform=\\\"translate(0,\" + (options.height - options.filter_height - 10) + \")\\\">\\n               <g class=\\\"left_filter\\\" transform=\\\"translate(0,0)\\\">\\n                  <path d=\\\"M0,0L4,7L-4,7z\\\"></path>\\n                  <rect x=\\\"-4\\\" y=\\\"7\\\" width=\\\"40\\\" height=\\\"13\\\" rx=\\\"2\\\" ry=\\\"2\\\"></rect>\\n                  <text y=\\\"10\\\" x=\\\"4\\\" text-anchor=\\\"start\\\">&gt; 0</text>\\n              </g>\\n              <g class=\\\"right_filter\\\" transform=\\\"translate(\" + width + \",0)\\\">\\n                  <path d=\\\"M0,0L4,7L-4,7z\\\"></path>\\n                  <rect x=\\\"-36\\\" y=\\\"7\\\" width=\\\"40\\\" height=\\\"13\\\" rx=\\\"2\\\" ry=\\\"2\\\"></rect>\\n                  <text y=\\\"10\\\" x=\\\"3\\\" text-anchor=\\\"end\\\">&lt; 1</text>\\n              </g>\\n            </g>\\n          </g>\\n        </svg>\\n        <div>\\n          <span>1</span>\\n          <input type=\\\"text\\\" class=\\\"raw_max\\\" id=\\\"me\" + options.idPrefix + \"raw_max\\\" value=\\\"1\\\"><label for=\\\"me\" + options.idPrefix + \"raw_max\\\">Max</label>\\n        </div>\\n      </div>\\n      <div>\\n         Extras: <label><input type=\\\"checkbox\\\" id=\\\"me\" + options.idPrefix + \"filterMissing\\\" \" + (this.old_filter.filterMissing ? 'checked=\"checked\"' : '') + \">Filter Missing Values</label>\\n      </div>\\n      <div class=\\\"script\\\" style=\\\"/* display: none; */\\\">\\n        <label for=\\\"me\" + options.idPrefix + \"script_code\\\">Custom Script</label><button>Apply</button>\\n        <textarea id=\\\"me\" + options.idPrefix + \"script_code\\\">\\n        </textarea>\\n      </div>\\n    </form>\";\n        var raw2pixel = scale.linear().domain([Math.min(this.scale.domain[0], this.original.domain[0]), Math.max(this.scale.domain[this.scale.domain.length - 1], this.original.domain[this.original.domain.length - 1])])\n            .range([0, width]);\n        var normal2pixel = scale.linear().domain([0, 1])\n            .range([0, width]);\n        $root.select('input.raw_min')\n            .property('value', raw2pixel.domain()[0])\n            .on('blur', function () {\n            var d = raw2pixel.domain();\n            d[0] = parseFloat(this.value);\n            raw2pixel.domain(d);\n            var old = that.scale_.domain;\n            old[0] = d[0];\n            that.scale_.domain = old;\n            updateRaw();\n            triggerUpdate();\n        });\n        $root.select('input.raw_max')\n            .property('value', raw2pixel.domain()[1])\n            .on('blur', function () {\n            var d = raw2pixel.domain();\n            d[1] = parseFloat(this.value);\n            raw2pixel.domain(d);\n            var old = that.scale_.domain;\n            old[old.length - 1] = d[1];\n            that.scale_.domain = old;\n            updateRaw();\n            triggerUpdate();\n        });\n        $root.select('input[type=\"checkbox\"]').on('change', function () {\n            triggerUpdate();\n        });\n        //lines that show mapping of individual data items\n        var datalines = $root.select('g.samples').selectAll('line').data([]);\n        this.dataPromise.then(function (data) {\n            //to unique values\n            data = unique(data);\n            datalines = datalines.data(data);\n            datalines.enter()\n                .append('line')\n                .attr({\n                x1: function (d) { return normal2pixel(that.scale.apply(d)); },\n                y1: 0,\n                x2: raw2pixel,\n                y2: height\n            }).style('visibility', function (d) {\n                var domain = that.scale.domain;\n                return (d < domain[0] || d > domain[domain.length - 1]) ? 'hidden' : null;\n            });\n        });\n        function updateDataLines() {\n            datalines.attr({\n                x1: function (d) { return normal2pixel(that.scale.apply(d)); },\n                x2: raw2pixel\n            }).style('visibility', function (d) {\n                var domain = that.scale.domain;\n                return (d < domain[0] || d > domain[domain.length - 1]) ? 'hidden' : null;\n            });\n        }\n        function createDrag(move) {\n            return behavior.drag()\n                .on('dragstart', function () {\n                select(this)\n                    .classed('dragging', true)\n                    .attr('r', options.radius * 1.1);\n            })\n                .on('drag', move)\n                .on('dragend', function () {\n                select(this)\n                    .classed('dragging', false)\n                    .attr('r', options.radius);\n                triggerUpdate(true);\n            });\n        }\n        var mapping_lines = [];\n        function renderMappingLines() {\n            if (!(that.scale instanceof ScaleMappingFunction)) {\n                return;\n            }\n            {\n                var sscale = that.scale;\n                var domain = sscale.domain;\n                var range_1 = sscale.range;\n                mapping_lines = domain.map(function (d, i) { return ({ r: d, n: range_1[i] }); });\n            }\n            function updateScale() {\n                //sort by raw value\n                mapping_lines.sort(function (a, b) { return a.r - b.r; });\n                //update the scale\n                var scale = that.scale;\n                scale.domain = mapping_lines.map(function (d) { return d.r; });\n                scale.range = mapping_lines.map(function (d) { return d.n; });\n                //console.log(sscale.domain, sscale.range);\n                updateDataLines();\n            }\n            function removePoint(i) {\n                if (mapping_lines.length <= 2) {\n                    return; //can't remove have to have at least two\n                }\n                mapping_lines.splice(i, 1);\n                updateScale();\n                renderMappingLines();\n            }\n            function addPoint(x) {\n                x = clamp(x, 0, width);\n                mapping_lines.push({\n                    n: normal2pixel.invert(x),\n                    r: raw2pixel.invert(x)\n                });\n                updateScale();\n                renderMappingLines();\n            }\n            $root.selectAll('rect.adder').on('click', function () {\n                addPoint(mouse($root.select('svg > g').node())[0]);\n            });\n            var $mapping = $root.select('g.mappings').selectAll('g.mapping').data(mapping_lines);\n            var $mapping_enter = $mapping.enter().append('g').classed('mapping', true).on('contextmenu', function (d, i) {\n                d3event.preventDefault();\n                d3event.stopPropagation();\n                removePoint(i);\n            });\n            $mapping_enter.append('line').attr({\n                y1: 0,\n                y2: height\n            }).call(createDrag(function (d) {\n                //drag the line shifts both point in parallel\n                var dx = d3event.dx;\n                var nx = clamp(normal2pixel(d.n) + dx, 0, width);\n                var rx = clamp(raw2pixel(d.r) + dx, 0, width);\n                d.n = normal2pixel.invert(nx);\n                d.r = raw2pixel.invert(rx);\n                select(this).attr('x1', nx).attr('x2', rx);\n                select(this.parentElement).select('circle.normalized').attr('cx', nx);\n                select(this.parentElement).select('circle.raw').attr('cx', rx);\n                updateScale();\n            }));\n            $mapping_enter.append('circle').classed('normalized', true).attr('r', options.radius).call(createDrag(function (d) {\n                //drag normalized\n                var x = clamp(d3event.x, 0, width);\n                d.n = normal2pixel.invert(x);\n                select(this).attr('cx', x);\n                select(this.parentElement).select('line').attr('x1', x);\n                updateScale();\n            }));\n            $mapping_enter.append('circle').classed('raw', true).attr('r', options.radius).attr('cy', height).call(createDrag(function (d) {\n                //drag raw\n                var x = clamp(d3event.x, 0, width);\n                d.r = raw2pixel.invert(x);\n                select(this).attr('cx', x);\n                select(this.parentElement).select('line').attr('x2', x);\n                updateScale();\n            }));\n            $mapping.select('line').attr({\n                x1: function (d) { return normal2pixel(d.n); },\n                x2: function (d) { return raw2pixel(d.r); }\n            });\n            $mapping.select('circle.normalized').attr('cx', function (d) { return normal2pixel(d.n); });\n            $mapping.select('circle.raw').attr('cx', function (d) { return raw2pixel(d.r); });\n            $mapping.exit().remove();\n        }\n        function renderScript() {\n            if (!(that.scale instanceof ScriptMappingFunction)) {\n                $root.select('div.script').style('display', 'none');\n                return;\n            }\n            $root.select('div.script').style('display', null);\n            var sscale = that.scale;\n            var $text = $root.select('textarea').text(sscale.code);\n            $root.select('div.script').select('button').on('click', function () {\n                sscale.code = $text.property('value');\n                updateDataLines();\n                triggerUpdate();\n            });\n        }\n        renderMappingLines();\n        renderScript();\n        function triggerUpdate(isDragEnd) {\n            if (isDragEnd === void 0) { isDragEnd = false; }\n            if (isDragEnd && (options.triggerCallback !== 'dragend')) {\n                return;\n            }\n            options.callback.call(options.callbackThisArg, that.scale.clone(), that.filter);\n        }\n        {\n            var min_filter_1 = (isFinite(this.old_filter.min) ? raw2pixel(this.old_filter.min) : 0);\n            var max_filter_1 = (isFinite(this.old_filter.max) ? raw2pixel(this.old_filter.max) : width);\n            var toFilterString_1 = function (d, i) { return isFinite(d) ? ((i === 0 ? '>' : '<') + d.toFixed(1)) : 'any'; };\n            $root.selectAll('g.left_filter, g.right_filter')\n                .data([this.old_filter.min, this.old_filter.max])\n                .attr('transform', function (d, i) { return (\"translate(\" + (i === 0 ? min_filter_1 : max_filter_1) + \",0)\"); }).call(createDrag(function (d, i) {\n                //drag normalized\n                var x = clamp(d3event.x, 0, width);\n                var v = raw2pixel.invert(x);\n                var filter = (x <= 0 && i === 0 ? -Infinity : (x >= width && i === 1 ? Infinity : v));\n                select(this).datum(filter)\n                    .attr('transform', \"translate(\" + x + \",0)\")\n                    .select('text').text(toFilterString_1(filter, i));\n            }))\n                .select('text').text(toFilterString_1);\n        }\n        this.computeFilter = function () {\n            return {\n                min: parseFloat($root.select('g.left_filter').datum()),\n                max: parseFloat($root.select('g.right_filter').datum()),\n                filterMissing: $root.select('input[type=\"checkbox\"]').property('checked')\n            };\n        };\n        function updateRaw() {\n            var d = raw2pixel.domain();\n            $root.select('input.raw_min').property('value', d[0]);\n            $root.select('input.raw_max').property('value', d[1]);\n            updateDataLines();\n            renderMappingLines();\n        }\n        updateRaw();\n        $root.select('select').on('change', function () {\n            var v = this.value;\n            if (v === 'linear_invert') {\n                that.scale_ = new ScaleMappingFunction(raw2pixel.domain(), 'linear', [1, 0]);\n            }\n            else if (v === 'linear_abs') {\n                var d = raw2pixel.domain();\n                that.scale_ = new ScaleMappingFunction([d[0], (d[1] - d[0]) / 2, d[1]], 'linear', [1, 0, 1]);\n            }\n            else if (v === 'script') {\n                that.scale_ = new ScriptMappingFunction(raw2pixel.domain());\n            }\n            else {\n                that.scale_ = new ScaleMappingFunction(raw2pixel.domain(), v);\n            }\n            updateDataLines();\n            renderMappingLines();\n            renderScript();\n            triggerUpdate();\n        }).property('selectedIndex', function () {\n            var name = 'script';\n            if (that.scale_ instanceof ScaleMappingFunction) {\n                name = that.scale.scaleType;\n            }\n            var types = ['linear', 'linear_invert', 'linear_abs', 'log', 'pow1.1', 'pow2', 'pow3', 'sqrt', 'script'];\n            return types.indexOf(name);\n        });\n    };\n    return MappingEditor;\n}());\nexport default MappingEditor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/mappingeditor.ts\n// module id = 32\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\nimport StringColumn from './StringColumn';\n/**\n * a string column in which the values can be edited locally\n */\nvar AnnotateColumn = (function (_super) {\n    __extends(AnnotateColumn, _super);\n    function AnnotateColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.annotations = new Map();\n    }\n    AnnotateColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([AnnotateColumn.EVENT_VALUE_CHANGED]);\n    };\n    AnnotateColumn.prototype.getValue = function (row, index) {\n        if (this.annotations.has(index)) {\n            return this.annotations.get(index);\n        }\n        return _super.prototype.getValue.call(this, row, index);\n    };\n    AnnotateColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.annotations = {};\n        this.annotations.forEach(function (v, k) {\n            r.annotations[k] = v;\n        });\n        return r;\n    };\n    AnnotateColumn.prototype.restore = function (dump, factory) {\n        var _this = this;\n        _super.prototype.restore.call(this, dump, factory);\n        if (dump.annotations) {\n            Object.keys(dump.annotations).forEach(function (k) {\n                _this.annotations.set(Number(k), dump.annotations[k]);\n            });\n        }\n    };\n    AnnotateColumn.prototype.setValue = function (row, index, value) {\n        var old = this.getValue(row, index);\n        if (old === value) {\n            return true;\n        }\n        if (value === '' || value == null) {\n            this.annotations.delete(index);\n        }\n        else {\n            this.annotations.set(index, value);\n        }\n        this.fire([AnnotateColumn.EVENT_VALUE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], index, old, value);\n        return true;\n    };\n    AnnotateColumn.EVENT_VALUE_CHANGED = 'valueChanged';\n    return AnnotateColumn;\n}(StringColumn));\nexport default AnnotateColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/AnnotateColumn.ts\n// module id = 33\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { ascending } from 'd3';\nimport Column from './Column';\nimport ValueColumn from './ValueColumn';\n/**\n * a string column with optional alignment\n */\nvar BooleanColumn = (function (_super) {\n    __extends(BooleanColumn, _super);\n    function BooleanColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.currentFilter = null;\n        this.trueMarker = 'X';\n        this.falseMarker = '';\n        this.setWidthImpl(30);\n        this.trueMarker = desc.trueMarker || this.trueMarker;\n        this.falseMarker = desc.falseMarker || this.falseMarker;\n    }\n    BooleanColumn.prototype.getValue = function (row, index) {\n        var v = _super.prototype.getValue.call(this, row, index);\n        if (typeof (v) === 'undefined' || v == null) {\n            return false;\n        }\n        return v === true || v === 'true' || v === 'yes' || v === 'x';\n    };\n    BooleanColumn.prototype.getLabel = function (row, index) {\n        var v = this.getValue(row, index);\n        return v ? this.trueMarker : this.falseMarker;\n    };\n    BooleanColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        if (this.currentFilter !== null) {\n            r.filter = this.currentFilter;\n        }\n        return r;\n    };\n    BooleanColumn.prototype.restore = function (dump, factory) {\n        _super.prototype.restore.call(this, dump, factory);\n        if (typeof dump.filter !== 'undefined') {\n            this.currentFilter = dump.filter;\n        }\n    };\n    BooleanColumn.prototype.isFiltered = function () {\n        return this.currentFilter !== null;\n    };\n    BooleanColumn.prototype.filter = function (row, index) {\n        if (!this.isFiltered()) {\n            return true;\n        }\n        var r = this.getValue(row, index);\n        return r === this.currentFilter;\n    };\n    BooleanColumn.prototype.getFilter = function () {\n        return this.currentFilter;\n    };\n    BooleanColumn.prototype.setFilter = function (filter) {\n        if (this.currentFilter === filter) {\n            return;\n        }\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n    };\n    BooleanColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        return ascending(this.getValue(a, aIndex), this.getValue(b, bIndex));\n    };\n    return BooleanColumn;\n}(ValueColumn));\nexport default BooleanColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/BooleanColumn.ts\n// module id = 34\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { max as d3max, scale, min as d3min } from 'd3';\nimport Column from './Column';\nimport ValueColumn from './ValueColumn';\nimport CategoricalColumn from './CategoricalColumn';\nimport NumberColumn from './NumberColumn';\n/**\n * similar to a categorical column but the categories are mapped to numbers\n */\nvar CategoricalNumberColumn = (function (_super) {\n    __extends(CategoricalNumberColumn, _super);\n    function CategoricalNumberColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.colors = scale.category10();\n        /**\n         * category labels by default the category name itself\n         * @type {Array}\n         */\n        this.catLabels = new Map();\n        this.scale = scale.ordinal().rangeRoundPoints([0, 1]);\n        this.currentFilter = null;\n        /**\n         * separator for multi handling\n         * @type {string}\n         */\n        this.separator = ';';\n        this.combiner = d3max;\n        this.separator = desc.separator || this.separator;\n        CategoricalColumn.prototype.initCategories.call(this, desc);\n        this.scale.domain(this.colors.domain());\n        if (desc.categories) {\n            //lookup value or 0.5 by default\n            var values = desc.categories.map(function (d) { return ((typeof d !== 'string' && typeof (d.value) === 'number')) ? d.value : 0.5; });\n            this.scale.range(values);\n        }\n    }\n    CategoricalNumberColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([CategoricalNumberColumn.EVENT_MAPPING_CHANGED]);\n    };\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categories\", {\n        get: function () {\n            return this.colors.domain().slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categoryColors\", {\n        get: function () {\n            return this.colors.range().slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categoryLabels\", {\n        get: function () {\n            var _this = this;\n            //no mapping\n            if (this.catLabels === null || this.catLabels.size === 0) {\n                return this.categories;\n            }\n            //label or identity mapping\n            return this.categories.map(function (c) { return _this.catLabels.has(c) ? _this.catLabels.get(c) : c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CategoricalNumberColumn.prototype.colorOf = function (cat) {\n        return this.colors(cat);\n    };\n    CategoricalNumberColumn.prototype.getLabel = function (row, index) {\n        return CategoricalColumn.prototype.getLabel.call(this, row, index);\n    };\n    CategoricalNumberColumn.prototype.getFirstLabel = function (row, index) {\n        return CategoricalColumn.prototype.getFirstLabel.call(this, row, index);\n    };\n    CategoricalNumberColumn.prototype.getLabels = function (row, index) {\n        return CategoricalColumn.prototype.getLabels.call(this, row, index);\n    };\n    CategoricalNumberColumn.prototype.getValue = function (row, index) {\n        var r = this.getValues(row, index);\n        return r.length > 0 ? this.combiner(r) : 0;\n    };\n    CategoricalNumberColumn.prototype.getValues = function (row, index) {\n        var r = CategoricalColumn.prototype.getValues.call(this, row, index);\n        return r.map(this.scale);\n    };\n    CategoricalNumberColumn.prototype.getCategories = function (row, index) {\n        return CategoricalColumn.prototype.getValues.call(this, row, index);\n    };\n    CategoricalNumberColumn.prototype.getNumber = function (row, index) {\n        return this.getValue(row, index);\n    };\n    CategoricalNumberColumn.prototype.getColor = function (row, index) {\n        var vs = this.getValues(row, index);\n        var cs = this.getColors(row, index);\n        if (this.combiner === d3max) {\n            //use the max color\n            return cs.slice(1).reduce(function (prev, act, i) { return vs[i + 1] > prev.v ? { c: act, v: vs[i + 1] } : prev; }, {\n                c: cs[0],\n                v: vs[0]\n            }).c;\n        }\n        else if (this.combiner === d3min) {\n            //use the max color\n            return cs.slice(1).reduce(function (prev, act, i) { return vs[i + 1] < prev.v ? { c: act, v: vs[i + 1] } : prev; }, {\n                c: cs[0],\n                v: vs[0]\n            }).c;\n        }\n        else {\n            //use the first\n            return cs[0] || null;\n        }\n    };\n    CategoricalNumberColumn.prototype.getColors = function (row, index) {\n        return CategoricalColumn.prototype.getColors.call(this, row, index);\n    };\n    CategoricalNumberColumn.prototype.dump = function (toDescRef) {\n        var r = CategoricalColumn.prototype.dump.call(this, toDescRef);\n        r.scale = {\n            domain: this.scale.domain(),\n            range: this.scale.range(),\n            separator: this.separator\n        };\n        return r;\n    };\n    CategoricalNumberColumn.prototype.restore = function (dump, factory) {\n        CategoricalColumn.prototype.restore.call(this, dump, factory);\n        if (dump.scale) {\n            this.scale.domain(dump.scale.domain).range(dump.scale.range);\n        }\n        this.separator = dump.separator || this.separator;\n    };\n    CategoricalNumberColumn.prototype.getScale = function () {\n        return {\n            domain: this.scale.domain(),\n            range: this.scale.range()\n        };\n    };\n    CategoricalNumberColumn.prototype.getMapping = function () {\n        return this.scale.range().slice();\n    };\n    CategoricalNumberColumn.prototype.setMapping = function (range) {\n        var bak = this.getScale();\n        this.scale.range(range);\n        this.fire([CategoricalNumberColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getScale());\n    };\n    CategoricalNumberColumn.prototype.isFiltered = function () {\n        return this.currentFilter != null;\n    };\n    CategoricalNumberColumn.prototype.filter = function (row, index) {\n        return CategoricalColumn.prototype.filter.call(this, row, index);\n    };\n    CategoricalNumberColumn.prototype.getFilter = function () {\n        return this.currentFilter;\n    };\n    CategoricalNumberColumn.prototype.setFilter = function (filter) {\n        if (this.currentFilter === filter) {\n            return;\n        }\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n    };\n    CategoricalNumberColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        return NumberColumn.prototype.compare.call(this, a, b, aIndex, bIndex);\n    };\n    CategoricalNumberColumn.prototype.rendererType = function () {\n        return NumberColumn.prototype.rendererType.call(this);\n    };\n    CategoricalNumberColumn.EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n    return CategoricalNumberColumn;\n}(ValueColumn));\nexport default CategoricalNumberColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CategoricalNumberColumn.ts\n// module id = 35\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport Column from './Column';\n/**\n * a default column with no values\n */\nvar DummyColumn = (function (_super) {\n    __extends(DummyColumn, _super);\n    function DummyColumn(id, desc) {\n        _super.call(this, id, desc);\n    }\n    DummyColumn.prototype.getLabel = function (row) {\n        return '';\n    };\n    DummyColumn.prototype.getValue = function (row) {\n        return '';\n    };\n    DummyColumn.prototype.compare = function (a, b) {\n        return 0; //can't compare\n    };\n    return DummyColumn;\n}(Column));\nexport default DummyColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/DummyColumn.ts\n// module id = 36\n// module chunks = 0 1","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport CompositeColumn from './CompositeColumn';\nimport Column from './Column';\nimport StackColumn from './StackColumn';\nvar MultiLevelCompositeColumn = (function (_super) {\n    __extends(MultiLevelCompositeColumn, _super);\n    function MultiLevelCompositeColumn(id, desc) {\n        _super.call(this, id, desc);\n        /**\n         * whether this stack column is collapsed i.e. just looks like an ordinary number column\n         * @type {boolean}\n         * @private\n         */\n        this.collapsed = false;\n        var that = this;\n        this.adaptChange = function (old, new_) {\n            that.adaptWidthChange(this.source, old, new_);\n        };\n    }\n    MultiLevelCompositeColumn.prototype.createEventList = function () {\n        return _super.prototype.createEventList.call(this).concat([MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED]);\n    };\n    MultiLevelCompositeColumn.prototype.setCollapsed = function (value) {\n        if (this.collapsed === value) {\n            return;\n        }\n        this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\n    };\n    MultiLevelCompositeColumn.prototype.getCollapsed = function () {\n        return this.collapsed;\n    };\n    MultiLevelCompositeColumn.prototype.dump = function (toDescRef) {\n        var r = _super.prototype.dump.call(this, toDescRef);\n        r.collapsed = this.collapsed;\n        return r;\n    };\n    MultiLevelCompositeColumn.prototype.restore = function (dump, factory) {\n        this.collapsed = dump.collapsed === true;\n        _super.prototype.restore.call(this, dump, factory);\n    };\n    MultiLevelCompositeColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\n        if (levelsToGo === void 0) { levelsToGo = 0; }\n        if (padding === void 0) { padding = 0; }\n        return StackColumn.prototype.flatten.call(this, r, offset, levelsToGo, padding);\n    };\n    /**\n     * inserts a column at a the given position\n     * @param col\n     * @param index\n     * @param weight\n     * @returns {any}\n     */\n    MultiLevelCompositeColumn.prototype.insert = function (col, index) {\n        col.on(Column.EVENT_WIDTH_CHANGED + '.stack', this.adaptChange);\n        //increase my width\n        _super.prototype.setWidth.call(this, this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\n        return _super.prototype.insert.call(this, col, index);\n    };\n    /**\n     * adapts weights according to an own width change\n     * @param col\n     * @param old\n     * @param new_\n     */\n    MultiLevelCompositeColumn.prototype.adaptWidthChange = function (col, old, new_) {\n        if (old === new_) {\n            return;\n        }\n        _super.prototype.setWidth.call(this, this.getWidth() + (new_ - old));\n    };\n    MultiLevelCompositeColumn.prototype.removeImpl = function (child) {\n        child.on(Column.EVENT_WIDTH_CHANGED + '.stack', null);\n        _super.prototype.setWidth.call(this, this.length === 1 ? 100 : this.getWidth() - child.getWidth());\n        return _super.prototype.removeImpl.call(this, child);\n    };\n    MultiLevelCompositeColumn.prototype.setWidth = function (value) {\n        var factor = this.length / this.getWidth();\n        this._children.forEach(function (child) {\n            //disable since we change it\n            child.setWidthImpl(child.getWidth() * factor);\n        });\n        _super.prototype.setWidth.call(this, value);\n    };\n    MultiLevelCompositeColumn.prototype.rendererType = function () {\n        if (this.getCollapsed()) {\n            return MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED;\n        }\n        return _super.prototype.rendererType.call(this);\n    };\n    MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED = StackColumn.EVENT_COLLAPSE_CHANGED;\n    return MultiLevelCompositeColumn;\n}(CompositeColumn));\nexport default MultiLevelCompositeColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MultiLevelCompositeColumn.ts\n// module id = 37\n// module chunks = 0 1","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport * as d3 from 'd3';\nimport ValueColumn from './ValueColumn';\nexport function numberCompare(a, b) {\n    if (isNaN(a)) {\n        return isNaN(b) ? 0 : +1;\n    }\n    if (isNaN(b)) {\n        return -1;\n    }\n    return a - b;\n}\n// Calculate Median, Q1 and Q1)\nexport function getPercentile(data, percentile) {\n    var index = (percentile / 100) * data.length;\n    var result;\n    if (Math.floor(index) === index) {\n        result = (data[(index - 1)] + data[index]) / 2;\n    }\n    else {\n        result = data[Math.floor(index)];\n    }\n    return result;\n}\nexport var CustomSortCalculation = (function () {\n    function CustomSortCalculation(a_val, b_val) {\n        this.a_val = a_val;\n        this.b_val = b_val;\n        this.b_val = b_val;\n        this.a_val = a_val;\n    }\n    CustomSortCalculation.prototype.countcategory = function () {\n        var a_cat = this.a_val.filter(function (x) { return x === 1; }).length;\n        var b_cat = this.b_val.filter(function (x) { return x === 1; }).length;\n        return (a_cat - b_cat);\n    };\n    return CustomSortCalculation;\n}());\nvar UpsetColumn = (function (_super) {\n    __extends(UpsetColumn, _super);\n    function UpsetColumn(id, desc) {\n        _super.call(this, id, desc);\n        this.sortCriteria = desc.sort || 'min';\n        this.datalength = desc.datalength;\n    }\n    UpsetColumn.prototype.compare = function (a, b, aIndex, bIndex) {\n        this.sortCriteria = this.desc.sort;\n        var a_val = this.getValue(a, aIndex);\n        var b_val = this.getValue(b, bIndex);\n        var sort = new CustomSortCalculation(a_val, b_val);\n        var f = sort[this.sortCriteria].bind(sort);\n        return f();\n    };\n    UpsetColumn.prototype.cellDimension = function () {\n        return (this.getWidth() / this.datalength);\n    };\n    UpsetColumn.prototype.calculatePath = function (data) {\n        var catindexes = [];\n        catindexes.push(data.reduce(function (b, e, i) {\n            if (e === 1) {\n                b.push(i);\n            }\n            return b;\n        }, []));\n        var left_x = ((d3.min(catindexes[0]) * this.cellDimension()) + (this.cellDimension() / 2));\n        var right_x = ((d3.max(catindexes[0]) * this.cellDimension()) + (this.cellDimension() / 2));\n        var pathdata = { left: left_x, right: right_x };\n        return pathdata;\n    };\n    return UpsetColumn;\n}(ValueColumn));\nexport default UpsetColumn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/UpsetColumn.ts\n// module id = 38\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { event as d3event, mouse as d3mouse } from 'd3';\nimport { merge, createTextHints } from '../utils';\nimport SelectionColumn from '../model/SelectionColumn';\nimport { createCanvas, hideOverlays } from '../renderer';\nimport ABodyRenderer from './ABodyRenderer';\nvar BodyCanvasRenderer = (function (_super) {\n    __extends(BodyCanvasRenderer, _super);\n    function BodyCanvasRenderer(data, parent, slicer, options) {\n        if (options === void 0) { options = {}; }\n        _super.call(this, data, parent, slicer, 'div', merge({}, BodyCanvasRenderer.CUSTOM_OPTIONS, options));\n        this.currentFreezeLeft = 0;\n        this.currentHover = -1;\n        this.lastShifts = [];\n        this.$node.append('canvas');\n        this.initInteraction();\n    }\n    BodyCanvasRenderer.prototype.columnUnderMouse = function (x) {\n        for (var _i = 0, _a = this.lastShifts; _i < _a.length; _i++) {\n            var shift = _a[_i];\n            if (shift.shift <= x && x < (shift.shift + shift.column.getWidth())) {\n                return shift.column;\n            }\n        }\n        return null;\n    };\n    BodyCanvasRenderer.prototype.rowUnderMouse = function (y) {\n        var rowHeight = this.options.rowHeight;\n        return Math.floor((y + 1) / rowHeight);\n    };\n    BodyCanvasRenderer.prototype.itemUnderMouse = function (xy) {\n        var row = this.rowUnderMouse(xy[1]);\n        if (row < 0) {\n            return null;\n        }\n        var col = this.columnUnderMouse(xy[0]);\n        if (col === null) {\n            return null;\n        }\n        var order = col.findMyRanker().getOrder();\n        return {\n            dataIndex: order[row],\n            column: col\n        };\n    };\n    BodyCanvasRenderer.prototype.initInteraction = function () {\n        var _this = this;\n        this.$node.on('selectstart', function () { return d3event.preventDefault(); });\n        this.$node.on('mousemove', function () {\n            var mouse = d3mouse(_this.node);\n            var pos = _this.itemUnderMouse(mouse);\n            _this.mouseOver(pos ? pos.dataIndex : -1);\n        });\n        this.$node.on('mouseenter', function () {\n            _this.mouseOver(-1, false);\n        });\n        this.$node.on('mouseleave', function () {\n            _this.mouseOver(-1, false);\n        });\n        this.$node.on('click', function () {\n            var mouse = d3mouse(_this.node);\n            var pos = _this.itemUnderMouse(mouse);\n            if (pos) {\n                //additional if click on Selection Column\n                _this.select(pos.dataIndex, d3event.ctrlKey || pos.column instanceof SelectionColumn);\n            }\n        });\n    };\n    /**\n     * get a style\n     */\n    BodyCanvasRenderer.prototype.style = function (name) {\n        var o = this.options;\n        return (o.style || {})[name];\n    };\n    BodyCanvasRenderer.prototype.select = function (dataIndex, additional) {\n        if (additional === void 0) { additional = false; }\n        var selected = _super.prototype.select.call(this, dataIndex, additional);\n        this.update();\n        return selected;\n    };\n    BodyCanvasRenderer.prototype.drawSelection = function () {\n        this.update(); //no shortcut so far\n    };\n    BodyCanvasRenderer.prototype.updateFreeze = function (left) {\n        this.currentFreezeLeft = left;\n        this.update(); //no shortcut so far\n    };\n    BodyCanvasRenderer.prototype.mouseOver = function (dataIndex, hover) {\n        if (hover === void 0) { hover = true; }\n        var o = this.options;\n        if (hover === (this.currentHover === dataIndex)) {\n            return;\n        }\n        this.currentHover = dataIndex;\n        _super.prototype.mouseOver.call(this, dataIndex, dataIndex >= 0);\n        if (!hover || dataIndex < 0) {\n            hideOverlays();\n        }\n        this.update();\n    };\n    BodyCanvasRenderer.prototype.isHovered = function (dataIndex) {\n        return this.currentHover === dataIndex;\n    };\n    BodyCanvasRenderer.prototype.renderRow = function (ctx, context, ranking, di, i) {\n        var dataIndex = di.dataIndex;\n        var dx = ranking.shift;\n        var dy = context.cellY(i);\n        ctx.translate(dx, dy);\n        if (i % 2 === 0) {\n            ctx.fillStyle = this.style('bg');\n            ctx.fillRect(0, 0, ranking.width, context.rowHeight(i));\n            ctx.fillStyle = this.style('text');\n        }\n        var isSelected = this.data.isSelected(dataIndex);\n        if (isSelected) {\n            ctx.strokeStyle = this.style('selection');\n            ctx.strokeRect(0, 0, ranking.width, context.rowHeight(i));\n        }\n        else if (this.isHovered(dataIndex)) {\n            ctx.strokeStyle = this.style('hover');\n            ctx.strokeRect(0, 0, ranking.width, context.rowHeight(i));\n        }\n        //clip the remaining children\n        ctx.save();\n        //shift if needs to shifted and then maximal that just the shifted columns are visible\n        var frozenLeft = this.currentFreezeLeft < ranking.shift ? 0 : Math.min(this.currentFreezeLeft - ranking.shift, ranking.width - ranking.frozenWidth);\n        if (ranking.frozenWidth > 0 && frozenLeft > 0) {\n            ctx.rect(dx + frozenLeft + ranking.frozenWidth, 0, ranking.width, context.rowHeight(i));\n            ctx.clip();\n        }\n        ranking.columns.forEach(function (child) {\n            ctx.save();\n            ctx.translate(child.shift, 0);\n            child.renderer(ctx, di, i, dx + child.shift, dy);\n            ctx.restore();\n        });\n        ctx.restore();\n        ctx.translate(frozenLeft, 0);\n        dx += frozenLeft;\n        ranking.frozen.forEach(function (child) {\n            ctx.save();\n            ctx.translate(child.shift, 0);\n            child.renderer(ctx, di, i, dx + child.shift, dy);\n            ctx.restore();\n        });\n        ctx.translate(-dx, -dy);\n    };\n    BodyCanvasRenderer.prototype.renderRankings = function (ctx, data, context) {\n        var renderRow = this.renderRow.bind(this, ctx, context);\n        //asynchronous rendering!!!\n        var all = Promise.all.bind(Promise);\n        return all(data.map(function (ranking) {\n            var toRender = ranking.data;\n            return all(toRender.map(function (p, i) {\n                // TODO render loading row\n                return p.then(function (di) {\n                    return renderRow(ranking, di, i);\n                });\n            }));\n        }));\n    };\n    BodyCanvasRenderer.prototype.renderSlopeGraphs = function (ctx, data, context) {\n        var _this = this;\n        var slopes = data.slice(1).map(function (d, i) { return ({ left: data[i].order, left_i: i, right: d.order, right_i: i + 1 }); });\n        ctx.save();\n        ctx.strokeStyle = this.style('slope');\n        slopes.forEach(function (slope, i) {\n            ctx.save();\n            ctx.translate(data[i + 1].shift - _this.options.slopeWidth, 0);\n            var cache = {};\n            slope.right.forEach(function (data_index, pos) {\n                cache[data_index] = pos;\n            });\n            var lines = slope.left.map(function (data_index, pos) { return ({\n                data_index: data_index,\n                lpos: pos,\n                rpos: cache[data_index]\n            }); }).filter(function (d) { return d.rpos != null; });\n            lines.forEach(function (line) {\n                var isSelected = _this.data.isSelected(line.data_index);\n                var isHovered = _this.isHovered(line.data_index);\n                if (isSelected) {\n                    ctx.strokeStyle = _this.style('selection');\n                }\n                else if (isHovered) {\n                    ctx.strokeStyle = _this.style('hover');\n                }\n                ctx.beginPath();\n                ctx.moveTo(0, context.rowHeight(line.lpos) * 0.5 + context.cellY(line.lpos));\n                ctx.lineTo(_this.options.slopeWidth, context.rowHeight(line.rpos) * 0.5 + context.cellY(line.rpos));\n                ctx.stroke();\n                if (isSelected || isHovered) {\n                    ctx.strokeStyle = _this.style('slope');\n                }\n            });\n            ctx.restore();\n        });\n        ctx.restore();\n    };\n    BodyCanvasRenderer.prototype.createContextImpl = function (index_shift) {\n        var _this = this;\n        var base = this.createContext(index_shift, createCanvas);\n        base.hovered = this.isHovered.bind(this);\n        base.selected = function (dataIndex) { return _this.data.isSelected(dataIndex); };\n        return base;\n    };\n    BodyCanvasRenderer.prototype.computeShifts = function (data) {\n        var _this = this;\n        var r = [];\n        data.forEach(function (d) {\n            var base = d.shift;\n            r.push.apply(r, d.frozen.map(function (c) { return ({ column: c.column, shift: c.shift + base + _this.currentFreezeLeft }); }));\n            r.push.apply(r, d.columns.map(function (c) { return ({ column: c.column, shift: c.shift + base }); }));\n        });\n        return r;\n    };\n    BodyCanvasRenderer.prototype.updateImpl = function (data, context, width, height, reason) {\n        var $canvas = this.$node.select('canvas');\n        var firstLine = Math.max(context.cellY(0) - 20, 0); //where to start\n        var lastLine = Math.min(context.cellY(Math.max.apply(Math, data.map(function (d) { return d.order.length; }))) + 20, height);\n        this.$node.style({\n            width: Math.max(0, width) + 'px',\n            height: height + 'px'\n        });\n        $canvas.attr({\n            width: Math.max(0, width),\n            height: lastLine - firstLine\n        }).style('margin-top', firstLine + 'px');\n        this.lastShifts = this.computeShifts(data);\n        var ctx = $canvas.node().getContext('2d');\n        ctx.save();\n        ctx.font = this.style('font');\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = this.style('text');\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        context.textHints = createTextHints(ctx, this.style('font'));\n        ctx.translate(0, -firstLine);\n        this.renderSlopeGraphs(ctx, data, context);\n        return this.renderRankings(ctx, data, context).then(function () {\n            ctx.restore();\n        });\n    };\n    BodyCanvasRenderer.CUSTOM_OPTIONS = {\n        style: {\n            text: 'black',\n            font: '10pt \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n            slope: 'darkgray',\n            link: 'blue',\n            selection: '#ffa500',\n            hover: '#e5e5e5',\n            bg: '#f7f7f7',\n        }\n    };\n    return BodyCanvasRenderer;\n}(ABodyRenderer));\nexport default BodyCanvasRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/CanvasBodyRenderer.ts\n// module id = 39\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { createHTML } from '../renderer';\nimport ADOMBodyRenderer from './ADOMBodyRenderer';\nvar domHTMLMappings = {\n    root: 'div',\n    g: 'div',\n    setSize: function (n, width, height) {\n        n.style.width = width + 'px';\n        n.style.height = height + 'px';\n    },\n    bg: 'div',\n    updateBG: function (sel, callback) {\n        sel.style({\n            height: function (d, i, j) { return callback(d, i, j)[1] + 'px'; },\n            width: function (d, i, j) { return callback(d, i, j)[0] + 'px'; }\n        });\n    },\n    meanLine: 'div',\n    updateMeanLine: function ($mean, x, height) {\n        $mean.style('left', x + 'px').style('height', height + 'px');\n    },\n    slopes: 'svg',\n    updateSlopes: function ($slopes, width, height, callback) {\n        $slopes.attr('width', width).attr('height', height).style('left', function (d, i) { return callback(d, i) + 'px'; });\n    },\n    creator: createHTML,\n    translate: function (n, x, y) { return n.style.transform = \"translate(\" + x + \"px,\" + y + \"px)\"; },\n    transform: function (sel, callback) {\n        sel.style('transform', function (d, i) {\n            var r = callback(d, i);\n            return \"translate(\" + r[0] + \"px,\" + r[1] + \"px)\";\n        });\n    }\n};\nvar HTMLBodyRenderer = (function (_super) {\n    __extends(HTMLBodyRenderer, _super);\n    function HTMLBodyRenderer(data, parent, slicer, options) {\n        if (options === void 0) { options = {}; }\n        _super.call(this, data, parent, slicer, domHTMLMappings, options);\n    }\n    return HTMLBodyRenderer;\n}(ADOMBodyRenderer));\nexport default HTMLBodyRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/HTMLBodyRenderer.ts\n// module id = 40\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nimport { round, select, event as d3event } from 'd3';\nimport { merge } from '../utils';\nimport { isNumberColumn, Column } from '../model';\nimport DataProvider from '../provider/ADataProvider';\nimport { toFullTooltip } from './HeaderRenderer';\nvar PoolEntry = (function () {\n    function PoolEntry(desc) {\n        this.desc = desc;\n        this.used = 0;\n    }\n    return PoolEntry;\n}());\nvar PoolRenderer = (function () {\n    function PoolRenderer(data, parent, options) {\n        if (options === void 0) { options = {}; }\n        this.data = data;\n        this.options = {\n            layout: 'vertical',\n            elemWidth: 100,\n            elemHeight: 40,\n            width: 100,\n            height: 500,\n            additionalDesc: [],\n            hideUsed: true,\n            addAtEndOnClick: false\n        };\n        merge(this.options, options);\n        this.$node = select(parent).append('div').classed('lu-pool', true);\n        this.changeDataStorage(data);\n    }\n    PoolRenderer.prototype.changeDataStorage = function (data) {\n        var _this = this;\n        if (this.data) {\n            this.data.on([DataProvider.EVENT_ADD_COLUMN + '.pool', DataProvider.EVENT_REMOVE_COLUMN + '.pool',\n                DataProvider.EVENT_ADD_RANKING + '.pool', DataProvider.EVENT_REMOVE_RANKING + '.pool',\n                DataProvider.EVENT_ADD_DESC + '.pool'], null);\n        }\n        this.data = data;\n        this.entries = data.getColumns().concat(this.options.additionalDesc).map(function (d) { return new PoolEntry(d); });\n        data.on(DataProvider.EVENT_ADD_DESC + '.pool', function (desc) {\n            _this.entries.push(new PoolEntry(desc));\n            _this.update();\n        });\n        if (this.options.hideUsed) {\n            var that = this;\n            data.on([DataProvider.EVENT_ADD_COLUMN + '.pool', DataProvider.EVENT_REMOVE_COLUMN + '.pool'], function (col) {\n                var desc = col.desc, change = this.type === 'addColumn' ? 1 : -1;\n                that.entries.some(function (entry) {\n                    if (entry.desc !== desc) {\n                        return false;\n                    }\n                    entry.used += change;\n                    return true;\n                });\n                that.update();\n            });\n            data.on([DataProvider.EVENT_ADD_RANKING + '.pool', DataProvider.EVENT_REMOVE_RANKING + '.pool'], function (ranking) {\n                var descs = ranking.flatColumns.map(function (d) { return d.desc; }), change = this.type === 'addRanking' ? 1 : -1;\n                that.entries.some(function (entry) {\n                    if (descs.indexOf(entry.desc) < 0) {\n                        return false;\n                    }\n                    entry.used += change;\n                    return true;\n                });\n                that.update();\n            });\n            data.getRankings().forEach(function (ranking) {\n                var descs = ranking.flatColumns.map(function (d) { return d.desc; }), change = +1;\n                that.entries.some(function (entry) {\n                    if (descs.indexOf(entry.desc) < 0) {\n                        return false;\n                    }\n                    entry.used += change;\n                });\n            });\n        }\n    };\n    PoolRenderer.prototype.remove = function () {\n        this.$node.remove();\n        if (this.data) {\n            this.data.on([DataProvider.EVENT_ADD_COLUMN + '.pool', DataProvider.EVENT_REMOVE_COLUMN + '.pool', 'addRanking.pool', 'removeRanking.pool', 'addDesc.pool'], null);\n        }\n    };\n    PoolRenderer.prototype.update = function () {\n        var _this = this;\n        var data = this.data;\n        var descToShow = this.entries.filter(function (e) { return e.used === 0; }).map(function (d) { return d.desc; });\n        var $headers = this.$node.selectAll('div.header').data(descToShow);\n        var $headers_enter = $headers.enter().append('div').attr({\n            'class': 'header',\n            'draggable': true\n        }).on('dragstart', function (d) {\n            var e = d3event;\n            e.dataTransfer.effectAllowed = 'copyMove'; //none, copy, copyLink, copyMove, link, linkMove, move, all\n            e.dataTransfer.setData('text/plain', d.label);\n            e.dataTransfer.setData('application/caleydo-lineup-column', JSON.stringify(data.toDescRef(d)));\n            if (isNumberColumn(d)) {\n                e.dataTransfer.setData('application/caleydo-lineup-column-number', JSON.stringify(data.toDescRef(d)));\n            }\n        }).style({\n            width: this.options.elemWidth + 'px',\n            height: this.options.elemHeight + 'px'\n        });\n        if (this.options.addAtEndOnClick) {\n            $headers_enter.on('click', function (d) {\n                _this.data.push(_this.data.getLastRanking(), d);\n            });\n        }\n        $headers_enter.append('span').classed('label', true).text(function (d) { return d.label; });\n        $headers.attr('class', function (d) { return (\"header \" + (d.cssClass || '') + \" \" + d.type); });\n        $headers.style({\n            'transform': function (d, i) {\n                var pos = _this.layout(i);\n                return 'translate(' + pos.x + 'px,' + pos.y + 'px)';\n            },\n            'background-color': function (d) {\n                var s = d;\n                return s.cssClass ? null : s.color || Column.DEFAULT_COLOR;\n            }\n        });\n        $headers.attr({\n            title: function (d) { return toFullTooltip(d); }\n        });\n        $headers.select('span').text(function (d) { return d.label; });\n        $headers.exit().remove();\n        //compute the size of this node\n        switch (this.options.layout) {\n            case 'horizontal':\n                this.$node.style({\n                    width: (this.options.elemWidth * descToShow.length) + 'px',\n                    height: (this.options.elemHeight) + 'px'\n                });\n                break;\n            case 'grid':\n                var perRow = round(this.options.width / this.options.elemWidth, 0);\n                this.$node.style({\n                    width: perRow * this.options.elemWidth + 'px',\n                    height: Math.ceil(descToShow.length / perRow) * this.options.elemHeight + 'px'\n                });\n                break;\n            //case 'vertical':\n            default:\n                this.$node.style({\n                    width: (this.options.elemWidth) + 'px',\n                    height: (this.options.elemHeight * descToShow.length) + 'px'\n                });\n                break;\n        }\n    };\n    PoolRenderer.prototype.layout = function (i) {\n        switch (this.options.layout) {\n            case 'horizontal':\n                return { x: i * this.options.elemWidth, y: 0 };\n            case 'grid':\n                var perRow = round(this.options.width / this.options.elemWidth, 0);\n                return { x: (i % perRow) * this.options.elemWidth, y: Math.floor(i / perRow) * this.options.elemHeight };\n            //case 'vertical':\n            default:\n                return { x: 0, y: i * this.options.elemHeight };\n        }\n    };\n    return PoolRenderer;\n}());\nexport default PoolRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/PoolRenderer.ts\n// module id = 41\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { max as d3max } from 'd3';\nimport { createSVG } from '../renderer';\nimport ADOMBodyRenderer from './ADOMBodyRenderer';\nvar domMappings = {\n    svg: {\n        root: 'svg',\n        g: 'g',\n        setSize: function (n, width, height) {\n            n.setAttribute('width', String(width));\n            n.setAttribute('height', String(height));\n        },\n        bg: 'rect',\n        updateBG: function (sel, callback) {\n            sel.attr({\n                height: function (d, i, j) { return callback(d, i, j)[1]; },\n                width: function (d, i, j) { return callback(d, i, j)[0]; }\n            });\n        },\n        meanLine: 'line',\n        updateMeanLine: function ($mean, x, height) {\n            $mean.attr('x1', 1 + x) //TODO don't know why +1 such that header and body lines are aligned\n                .attr('x2', 1 + x)\n                .attr('y2', height);\n        },\n        slopes: 'g',\n        updateSlopes: function ($slopes, width, height, callback) {\n            $slopes.attr('transform', function (d, i) { return (\"translate(\" + callback(d, i) + \",0)\"); });\n        },\n        creator: createSVG,\n        translate: function (n, x, y) { return n.setAttribute('transform', \"translate(\" + x + \",\" + y + \")\"); },\n        transform: function (sel, callback) {\n            sel.attr('transform', function (d, i) {\n                var r = callback(d, i);\n                return \"translate(\" + r[0] + \",\" + r[1] + \")\";\n            });\n        }\n    }\n};\nvar SVGBodyRenderer = (function (_super) {\n    __extends(SVGBodyRenderer, _super);\n    function SVGBodyRenderer(data, parent, slicer, options) {\n        if (options === void 0) { options = {}; }\n        _super.call(this, data, parent, slicer, domMappings.svg, options);\n    }\n    SVGBodyRenderer.prototype.updateClipPathsImpl = function (r, context, height) {\n        var $base = this.$node.select('defs.body');\n        if ($base.empty()) {\n            $base = this.$node.append('defs').classed('body', true);\n        }\n        //generate clip paths for the text columns to avoid text overflow\n        //see http://stackoverflow.com/questions/L742812/cannot-select-svg-foreignobject-element-in-d3\n        //there is a bug in webkit which present camelCase selectors\n        var textClipPath = $base.selectAll(function () {\n            return this.getElementsByTagName('clipPath');\n        }).data(r, function (d) { return d.id; });\n        textClipPath.enter().append('clipPath')\n            .attr('id', function (d) { return (\"cp\" + context.idPrefix + \"clipCol\" + d.id); })\n            .append('rect').attr('y', 0);\n        textClipPath.exit().remove();\n        textClipPath.select('rect')\n            .attr({\n            x: 0,\n            width: function (d) { return Math.max(d.getWidth() - 5, 0); },\n            height: height\n        });\n    };\n    SVGBodyRenderer.prototype.updateClipPaths = function (data, context, height) {\n        var _this = this;\n        var shifts = [], offset = 0;\n        data.forEach(function (r) {\n            var w = r.ranking.flatten(shifts, offset, 2, _this.options.columnPadding);\n            offset += w + _this.options.slopeWidth;\n        });\n        this.updateClipPathsImpl(shifts.map(function (s) { return s.col; }), context, height);\n        {\n            var $elem = this.$node.select(\"clipPath#c\" + context.idPrefix + \"Freeze\");\n            if ($elem.empty()) {\n                $elem = this.$node.append('clipPath').attr('id', \"c\" + context.idPrefix + \"Freeze\").append('rect').attr({\n                    y: 0,\n                    width: 20000,\n                    height: height\n                });\n            }\n            var maxFrozen = data.length === 0 || data[0].frozen.length === 0 ? 0 : d3max(data[0].frozen, function (f) { return f.shift + f.column.getWidth(); });\n            $elem.select('rect').attr({\n                x: maxFrozen,\n                height: height,\n                transform: \"translate(\" + this.currentFreezeLeft + \",0)\"\n            });\n        }\n    };\n    return SVGBodyRenderer;\n}(ADOMBodyRenderer));\nexport default SVGBodyRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/SVGBodyRenderer.ts\n// module id = 42\n// module chunks = 0 1","/**\n * Created by Samuel Gratzl on 14.08.2015.\n */\nexport { default as DataProvider, IDataProviderOptions, IExportOptions } from './ADataProvider';\nexport { default as LocalDataProvider, ILocalDataProviderOptions } from './LocalDataProvider';\nexport { default as RemoteDataProvider, IServerData } from './RemoteDataProvider';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/index.ts\n// module id = 43\n// module chunks = 0","/**\n * Created by sam on 04.11.2016.\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { merge } from '../utils';\nimport ACommonDataProvider from './ACommonDataProvider';\n/**\n * a remote implementation of the data provider\n */\nvar RemoteDataProvider = (function (_super) {\n    __extends(RemoteDataProvider, _super);\n    function RemoteDataProvider(server, columns, options) {\n        if (columns === void 0) { columns = []; }\n        if (options === void 0) { options = {}; }\n        _super.call(this, columns, options);\n        this.server = server;\n        this.options = {\n            maxCacheSize: 1000\n        };\n        this.cache = new Map();\n        merge(this.options, options);\n    }\n    RemoteDataProvider.prototype.sortImpl = function (ranking) {\n        //generate a description of what to sort\n        var desc = ranking.toSortingDesc(function (desc) { return desc.column; });\n        //use the server side to sort\n        return this.server.sort(desc);\n    };\n    RemoteDataProvider.prototype.loadFromServer = function (indices) {\n        return this.server.view(indices).then(function (view) {\n            //enhance with the data index\n            return view.map(function (v, i) {\n                var dataIndex = indices[i];\n                return { v: v, dataIndex: dataIndex };\n            });\n        });\n    };\n    RemoteDataProvider.prototype.view = function (indices) {\n        if (indices.length === 0) {\n            return Promise.resolve([]);\n        }\n        var base = this.fetch([indices])[0];\n        return Promise.all(base).then(function (rows) { return rows.map(function (d) { return d.v; }); });\n    };\n    RemoteDataProvider.prototype.computeMissing = function (orders) {\n        var union = new Set();\n        var union_add = union.add.bind(union);\n        orders.forEach(function (order) { return order.forEach(union_add); });\n        // removed cached\n        this.cache.forEach(function (v, k) { return union.delete(k); });\n        if ((this.cache.size + union.size) > this.options.maxCacheSize) {\n        }\n        // const maxLength = Math.max(...orders.map((o) => o.length));\n        var r = [];\n        union.forEach(r.push.bind(r));\n        return r;\n    };\n    RemoteDataProvider.prototype.loadInCache = function (missing) {\n        var _this = this;\n        if (missing.length === 0) {\n            return;\n        }\n        // load data and map to rows;\n        var v = this.loadFromServer(missing);\n        missing.forEach(function (m, i) {\n            var dataIndex = missing[i];\n            _this.cache.set(dataIndex, v.then(function (loaded) { return ({ v: loaded[i], dataIndex: dataIndex }); }));\n        });\n    };\n    RemoteDataProvider.prototype.fetch = function (orders) {\n        var _this = this;\n        var toLoad = this.computeMissing(orders);\n        this.loadInCache(toLoad);\n        return orders.map(function (order) {\n            return order.map(function (dataIndex) { return _this.cache.get(dataIndex); });\n        });\n    };\n    RemoteDataProvider.prototype.mappingSample = function (col) {\n        return this.server.mappingSample(col.desc.column);\n    };\n    RemoteDataProvider.prototype.searchAndJump = function (search, col) {\n        var _this = this;\n        this.server.search(search, col.desc.column).then(function (indices) {\n            _this.jumpToNearest(indices);\n        });\n    };\n    RemoteDataProvider.prototype.stats = function (indices) {\n        return this.server.stats(indices);\n    };\n    return RemoteDataProvider;\n}(ACommonDataProvider));\nexport default RemoteDataProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/RemoteDataProvider.ts\n// module id = 45\n// module chunks = 0","/**\n * main module of LineUp.js containing the main class and exposes all other modules\n * Created by Samuel Gratzl on 14.08.2015.\n */\nimport './style.scss';\nimport * as model_ from './model';\nimport * as provider_ from './provider';\nimport * as renderer_ from './renderer';\nimport * as ui_ from './ui';\nimport * as utils_ from './utils';\nimport * as ui_dialogs_ from './ui_dialogs';\nimport LineUp from './lineup';\nexport { deriveColors } from './lineup';\n/**\n * access to the model module\n * @type {--global-type--}\n */\nexport var model = model_;\n/**\n * access to the provider module\n * @type {--global-type--}\n */\nexport var provider = provider_;\n/**\n * access to the renderer module\n * @type {--global-type--}\n */\nexport var renderer = renderer_;\n/**\n * access to the ui module\n * @type {--global-type--}\n */\nexport var ui = ui_;\n/**\n * access to the utils module\n * @type {--global-type--}\n */\nexport var utils = utils_;\n/**\n * access to the ui_dialogs module\n * @type {--global-type--}\n */\nexport var ui_dialogs = ui_dialogs_;\n/**\n * creates a local storage provider\n * @param data\n * @param columns\n * @param options\n * @returns {LocalDataProvider}\n */\nexport function createLocalStorage(data, columns, options) {\n    if (options === void 0) { options = {}; }\n    return new provider_.LocalDataProvider(data, columns, options);\n}\nexport function create(data, container, config) {\n    if (config === void 0) { config = {}; }\n    return new LineUp(container, data, config);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 46\n// module chunks = 0"],"sourceRoot":""}